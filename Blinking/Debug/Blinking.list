
Blinking.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006424  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000450  08006538  08006538  00016538  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006988  08006988  000201d4  2**0
                  CONTENTS
  4 .ARM          00000000  08006988  08006988  000201d4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006988  08006988  000201d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006988  08006988  00016988  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800698c  0800698c  0001698c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001d4  20000000  08006990  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  200001d4  08006b64  000201d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000344  08006b64  00020344  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201d4  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000201fd  2**0
                  CONTENTS, READONLY
 13 .debug_info   00003134  00000000  00000000  00020240  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000107e  00000000  00000000  00023374  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000498  00000000  00000000  000243f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000345  00000000  00000000  00024890  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000171b9  00000000  00000000  00024bd5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000057a4  00000000  00000000  0003bd8e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000813f0  00000000  00000000  00041532  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000250c  00000000  00000000  000c2924  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000065  00000000  00000000  000c4e30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001d4 	.word	0x200001d4
 800012c:	00000000 	.word	0x00000000
 8000130:	0800651c 	.word	0x0800651c

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001d8 	.word	0x200001d8
 800014c:	0800651c 	.word	0x0800651c

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	3c01      	subs	r4, #1
 800029c:	bf28      	it	cs
 800029e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80002a2:	d2e9      	bcs.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2uiz>:
 8000a88:	004a      	lsls	r2, r1, #1
 8000a8a:	d211      	bcs.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a8c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a90:	d211      	bcs.n	8000ab6 <__aeabi_d2uiz+0x2e>
 8000a92:	d50d      	bpl.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a94:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a9c:	d40e      	bmi.n	8000abc <__aeabi_d2uiz+0x34>
 8000a9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000aa6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aaa:	fa23 f002 	lsr.w	r0, r3, r2
 8000aae:	4770      	bx	lr
 8000ab0:	f04f 0000 	mov.w	r0, #0
 8000ab4:	4770      	bx	lr
 8000ab6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aba:	d102      	bne.n	8000ac2 <__aeabi_d2uiz+0x3a>
 8000abc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ac0:	4770      	bx	lr
 8000ac2:	f04f 0000 	mov.w	r0, #0
 8000ac6:	4770      	bx	lr

08000ac8 <__aeabi_d2f>:
 8000ac8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000acc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000ad0:	bf24      	itt	cs
 8000ad2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000ad6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000ada:	d90d      	bls.n	8000af8 <__aeabi_d2f+0x30>
 8000adc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ae0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ae4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000ae8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000aec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000af0:	bf08      	it	eq
 8000af2:	f020 0001 	biceq.w	r0, r0, #1
 8000af6:	4770      	bx	lr
 8000af8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000afc:	d121      	bne.n	8000b42 <__aeabi_d2f+0x7a>
 8000afe:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b02:	bfbc      	itt	lt
 8000b04:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b08:	4770      	bxlt	lr
 8000b0a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b12:	f1c2 0218 	rsb	r2, r2, #24
 8000b16:	f1c2 0c20 	rsb	ip, r2, #32
 8000b1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b22:	bf18      	it	ne
 8000b24:	f040 0001 	orrne.w	r0, r0, #1
 8000b28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b34:	ea40 000c 	orr.w	r0, r0, ip
 8000b38:	fa23 f302 	lsr.w	r3, r3, r2
 8000b3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b40:	e7cc      	b.n	8000adc <__aeabi_d2f+0x14>
 8000b42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b46:	d107      	bne.n	8000b58 <__aeabi_d2f+0x90>
 8000b48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b4c:	bf1e      	ittt	ne
 8000b4e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b52:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b56:	4770      	bxne	lr
 8000b58:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b5c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b60:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b64:	4770      	bx	lr
 8000b66:	bf00      	nop

08000b68 <__aeabi_d2lz>:
 8000b68:	b538      	push	{r3, r4, r5, lr}
 8000b6a:	4605      	mov	r5, r0
 8000b6c:	460c      	mov	r4, r1
 8000b6e:	2200      	movs	r2, #0
 8000b70:	2300      	movs	r3, #0
 8000b72:	4628      	mov	r0, r5
 8000b74:	4621      	mov	r1, r4
 8000b76:	f7ff ff21 	bl	80009bc <__aeabi_dcmplt>
 8000b7a:	b928      	cbnz	r0, 8000b88 <__aeabi_d2lz+0x20>
 8000b7c:	4628      	mov	r0, r5
 8000b7e:	4621      	mov	r1, r4
 8000b80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b84:	f000 b80a 	b.w	8000b9c <__aeabi_d2ulz>
 8000b88:	4628      	mov	r0, r5
 8000b8a:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 8000b8e:	f000 f805 	bl	8000b9c <__aeabi_d2ulz>
 8000b92:	4240      	negs	r0, r0
 8000b94:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000b98:	bd38      	pop	{r3, r4, r5, pc}
 8000b9a:	bf00      	nop

08000b9c <__aeabi_d2ulz>:
 8000b9c:	b5d0      	push	{r4, r6, r7, lr}
 8000b9e:	2200      	movs	r2, #0
 8000ba0:	4b0b      	ldr	r3, [pc, #44]	; (8000bd0 <__aeabi_d2ulz+0x34>)
 8000ba2:	4606      	mov	r6, r0
 8000ba4:	460f      	mov	r7, r1
 8000ba6:	f7ff fc97 	bl	80004d8 <__aeabi_dmul>
 8000baa:	f7ff ff6d 	bl	8000a88 <__aeabi_d2uiz>
 8000bae:	4604      	mov	r4, r0
 8000bb0:	f7ff fc18 	bl	80003e4 <__aeabi_ui2d>
 8000bb4:	2200      	movs	r2, #0
 8000bb6:	4b07      	ldr	r3, [pc, #28]	; (8000bd4 <__aeabi_d2ulz+0x38>)
 8000bb8:	f7ff fc8e 	bl	80004d8 <__aeabi_dmul>
 8000bbc:	4602      	mov	r2, r0
 8000bbe:	460b      	mov	r3, r1
 8000bc0:	4630      	mov	r0, r6
 8000bc2:	4639      	mov	r1, r7
 8000bc4:	f7ff fad0 	bl	8000168 <__aeabi_dsub>
 8000bc8:	f7ff ff5e 	bl	8000a88 <__aeabi_d2uiz>
 8000bcc:	4621      	mov	r1, r4
 8000bce:	bdd0      	pop	{r4, r6, r7, pc}
 8000bd0:	3df00000 	.word	0x3df00000
 8000bd4:	41f00000 	.word	0x41f00000

08000bd8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000bd8:	b580      	push	{r7, lr}
 8000bda:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000bdc:	f000 f9ea 	bl	8000fb4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000be0:	f000 f80e 	bl	8000c00 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000be4:	f000 f84e 	bl	8000c84 <MX_GPIO_Init>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 8000be8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000bec:	4803      	ldr	r0, [pc, #12]	; (8000bfc <main+0x24>)
 8000bee:	f000 fce7 	bl	80015c0 <HAL_GPIO_TogglePin>
	  HAL_Delay(1000);
 8000bf2:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000bf6:	f000 fa3f 	bl	8001078 <HAL_Delay>
	  HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 8000bfa:	e7f5      	b.n	8000be8 <main+0x10>
 8000bfc:	40011000 	.word	0x40011000

08000c00 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000c00:	b580      	push	{r7, lr}
 8000c02:	b090      	sub	sp, #64	; 0x40
 8000c04:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000c06:	f107 0318 	add.w	r3, r7, #24
 8000c0a:	2228      	movs	r2, #40	; 0x28
 8000c0c:	2100      	movs	r1, #0
 8000c0e:	4618      	mov	r0, r3
 8000c10:	f002 f85f 	bl	8002cd2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000c14:	1d3b      	adds	r3, r7, #4
 8000c16:	2200      	movs	r2, #0
 8000c18:	601a      	str	r2, [r3, #0]
 8000c1a:	605a      	str	r2, [r3, #4]
 8000c1c:	609a      	str	r2, [r3, #8]
 8000c1e:	60da      	str	r2, [r3, #12]
 8000c20:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000c22:	2302      	movs	r3, #2
 8000c24:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000c26:	2301      	movs	r3, #1
 8000c28:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000c2a:	2310      	movs	r3, #16
 8000c2c:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000c2e:	2302      	movs	r3, #2
 8000c30:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 8000c32:	2300      	movs	r3, #0
 8000c34:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 8000c36:	f44f 1360 	mov.w	r3, #3670016	; 0x380000
 8000c3a:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000c3c:	f107 0318 	add.w	r3, r7, #24
 8000c40:	4618      	mov	r0, r3
 8000c42:	f000 fcd7 	bl	80015f4 <HAL_RCC_OscConfig>
 8000c46:	4603      	mov	r3, r0
 8000c48:	2b00      	cmp	r3, #0
 8000c4a:	d001      	beq.n	8000c50 <SystemClock_Config+0x50>
  {
    Error_Handler();
 8000c4c:	f000 f866 	bl	8000d1c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000c50:	230f      	movs	r3, #15
 8000c52:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000c54:	2302      	movs	r3, #2
 8000c56:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000c58:	2300      	movs	r3, #0
 8000c5a:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000c5c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000c60:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000c62:	2300      	movs	r3, #0
 8000c64:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000c66:	1d3b      	adds	r3, r7, #4
 8000c68:	2102      	movs	r1, #2
 8000c6a:	4618      	mov	r0, r3
 8000c6c:	f000 ff44 	bl	8001af8 <HAL_RCC_ClockConfig>
 8000c70:	4603      	mov	r3, r0
 8000c72:	2b00      	cmp	r3, #0
 8000c74:	d001      	beq.n	8000c7a <SystemClock_Config+0x7a>
  {
    Error_Handler();
 8000c76:	f000 f851 	bl	8000d1c <Error_Handler>
  }
}
 8000c7a:	bf00      	nop
 8000c7c:	3740      	adds	r7, #64	; 0x40
 8000c7e:	46bd      	mov	sp, r7
 8000c80:	bd80      	pop	{r7, pc}
	...

08000c84 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000c84:	b580      	push	{r7, lr}
 8000c86:	b088      	sub	sp, #32
 8000c88:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c8a:	f107 0310 	add.w	r3, r7, #16
 8000c8e:	2200      	movs	r2, #0
 8000c90:	601a      	str	r2, [r3, #0]
 8000c92:	605a      	str	r2, [r3, #4]
 8000c94:	609a      	str	r2, [r3, #8]
 8000c96:	60da      	str	r2, [r3, #12]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000c98:	4b1e      	ldr	r3, [pc, #120]	; (8000d14 <MX_GPIO_Init+0x90>)
 8000c9a:	699b      	ldr	r3, [r3, #24]
 8000c9c:	4a1d      	ldr	r2, [pc, #116]	; (8000d14 <MX_GPIO_Init+0x90>)
 8000c9e:	f043 0310 	orr.w	r3, r3, #16
 8000ca2:	6193      	str	r3, [r2, #24]
 8000ca4:	4b1b      	ldr	r3, [pc, #108]	; (8000d14 <MX_GPIO_Init+0x90>)
 8000ca6:	699b      	ldr	r3, [r3, #24]
 8000ca8:	f003 0310 	and.w	r3, r3, #16
 8000cac:	60fb      	str	r3, [r7, #12]
 8000cae:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000cb0:	4b18      	ldr	r3, [pc, #96]	; (8000d14 <MX_GPIO_Init+0x90>)
 8000cb2:	699b      	ldr	r3, [r3, #24]
 8000cb4:	4a17      	ldr	r2, [pc, #92]	; (8000d14 <MX_GPIO_Init+0x90>)
 8000cb6:	f043 0320 	orr.w	r3, r3, #32
 8000cba:	6193      	str	r3, [r2, #24]
 8000cbc:	4b15      	ldr	r3, [pc, #84]	; (8000d14 <MX_GPIO_Init+0x90>)
 8000cbe:	699b      	ldr	r3, [r3, #24]
 8000cc0:	f003 0320 	and.w	r3, r3, #32
 8000cc4:	60bb      	str	r3, [r7, #8]
 8000cc6:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000cc8:	4b12      	ldr	r3, [pc, #72]	; (8000d14 <MX_GPIO_Init+0x90>)
 8000cca:	699b      	ldr	r3, [r3, #24]
 8000ccc:	4a11      	ldr	r2, [pc, #68]	; (8000d14 <MX_GPIO_Init+0x90>)
 8000cce:	f043 0304 	orr.w	r3, r3, #4
 8000cd2:	6193      	str	r3, [r2, #24]
 8000cd4:	4b0f      	ldr	r3, [pc, #60]	; (8000d14 <MX_GPIO_Init+0x90>)
 8000cd6:	699b      	ldr	r3, [r3, #24]
 8000cd8:	f003 0304 	and.w	r3, r3, #4
 8000cdc:	607b      	str	r3, [r7, #4]
 8000cde:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000ce6:	480c      	ldr	r0, [pc, #48]	; (8000d18 <MX_GPIO_Init+0x94>)
 8000ce8:	f000 fc52 	bl	8001590 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8000cec:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8000cf0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000cf2:	2301      	movs	r3, #1
 8000cf4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cf6:	2300      	movs	r3, #0
 8000cf8:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cfa:	2302      	movs	r3, #2
 8000cfc:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000cfe:	f107 0310 	add.w	r3, r7, #16
 8000d02:	4619      	mov	r1, r3
 8000d04:	4804      	ldr	r0, [pc, #16]	; (8000d18 <MX_GPIO_Init+0x94>)
 8000d06:	f000 fabf 	bl	8001288 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8000d0a:	bf00      	nop
 8000d0c:	3720      	adds	r7, #32
 8000d0e:	46bd      	mov	sp, r7
 8000d10:	bd80      	pop	{r7, pc}
 8000d12:	bf00      	nop
 8000d14:	40021000 	.word	0x40021000
 8000d18:	40011000 	.word	0x40011000

08000d1c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000d1c:	b480      	push	{r7}
 8000d1e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000d20:	b672      	cpsid	i
}
 8000d22:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000d24:	e7fe      	b.n	8000d24 <Error_Handler+0x8>
	...

08000d28 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000d28:	b480      	push	{r7}
 8000d2a:	b085      	sub	sp, #20
 8000d2c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000d2e:	4b15      	ldr	r3, [pc, #84]	; (8000d84 <HAL_MspInit+0x5c>)
 8000d30:	699b      	ldr	r3, [r3, #24]
 8000d32:	4a14      	ldr	r2, [pc, #80]	; (8000d84 <HAL_MspInit+0x5c>)
 8000d34:	f043 0301 	orr.w	r3, r3, #1
 8000d38:	6193      	str	r3, [r2, #24]
 8000d3a:	4b12      	ldr	r3, [pc, #72]	; (8000d84 <HAL_MspInit+0x5c>)
 8000d3c:	699b      	ldr	r3, [r3, #24]
 8000d3e:	f003 0301 	and.w	r3, r3, #1
 8000d42:	60bb      	str	r3, [r7, #8]
 8000d44:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000d46:	4b0f      	ldr	r3, [pc, #60]	; (8000d84 <HAL_MspInit+0x5c>)
 8000d48:	69db      	ldr	r3, [r3, #28]
 8000d4a:	4a0e      	ldr	r2, [pc, #56]	; (8000d84 <HAL_MspInit+0x5c>)
 8000d4c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000d50:	61d3      	str	r3, [r2, #28]
 8000d52:	4b0c      	ldr	r3, [pc, #48]	; (8000d84 <HAL_MspInit+0x5c>)
 8000d54:	69db      	ldr	r3, [r3, #28]
 8000d56:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000d5a:	607b      	str	r3, [r7, #4]
 8000d5c:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000d5e:	4b0a      	ldr	r3, [pc, #40]	; (8000d88 <HAL_MspInit+0x60>)
 8000d60:	685b      	ldr	r3, [r3, #4]
 8000d62:	60fb      	str	r3, [r7, #12]
 8000d64:	68fb      	ldr	r3, [r7, #12]
 8000d66:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000d6a:	60fb      	str	r3, [r7, #12]
 8000d6c:	68fb      	ldr	r3, [r7, #12]
 8000d6e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000d72:	60fb      	str	r3, [r7, #12]
 8000d74:	4a04      	ldr	r2, [pc, #16]	; (8000d88 <HAL_MspInit+0x60>)
 8000d76:	68fb      	ldr	r3, [r7, #12]
 8000d78:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000d7a:	bf00      	nop
 8000d7c:	3714      	adds	r7, #20
 8000d7e:	46bd      	mov	sp, r7
 8000d80:	bc80      	pop	{r7}
 8000d82:	4770      	bx	lr
 8000d84:	40021000 	.word	0x40021000
 8000d88:	40010000 	.word	0x40010000

08000d8c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000d8c:	b480      	push	{r7}
 8000d8e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000d90:	e7fe      	b.n	8000d90 <NMI_Handler+0x4>

08000d92 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000d92:	b480      	push	{r7}
 8000d94:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000d96:	e7fe      	b.n	8000d96 <HardFault_Handler+0x4>

08000d98 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000d98:	b480      	push	{r7}
 8000d9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000d9c:	e7fe      	b.n	8000d9c <MemManage_Handler+0x4>

08000d9e <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000d9e:	b480      	push	{r7}
 8000da0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000da2:	e7fe      	b.n	8000da2 <BusFault_Handler+0x4>

08000da4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000da4:	b480      	push	{r7}
 8000da6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000da8:	e7fe      	b.n	8000da8 <UsageFault_Handler+0x4>

08000daa <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000daa:	b480      	push	{r7}
 8000dac:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000dae:	bf00      	nop
 8000db0:	46bd      	mov	sp, r7
 8000db2:	bc80      	pop	{r7}
 8000db4:	4770      	bx	lr

08000db6 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000db6:	b480      	push	{r7}
 8000db8:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000dba:	bf00      	nop
 8000dbc:	46bd      	mov	sp, r7
 8000dbe:	bc80      	pop	{r7}
 8000dc0:	4770      	bx	lr

08000dc2 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000dc2:	b480      	push	{r7}
 8000dc4:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000dc6:	bf00      	nop
 8000dc8:	46bd      	mov	sp, r7
 8000dca:	bc80      	pop	{r7}
 8000dcc:	4770      	bx	lr

08000dce <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000dce:	b580      	push	{r7, lr}
 8000dd0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000dd2:	f000 f935 	bl	8001040 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000dd6:	bf00      	nop
 8000dd8:	bd80      	pop	{r7, pc}

08000dda <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000dda:	b480      	push	{r7}
 8000ddc:	af00      	add	r7, sp, #0
  return 1;
 8000dde:	2301      	movs	r3, #1
}
 8000de0:	4618      	mov	r0, r3
 8000de2:	46bd      	mov	sp, r7
 8000de4:	bc80      	pop	{r7}
 8000de6:	4770      	bx	lr

08000de8 <_kill>:

int _kill(int pid, int sig)
{
 8000de8:	b580      	push	{r7, lr}
 8000dea:	b082      	sub	sp, #8
 8000dec:	af00      	add	r7, sp, #0
 8000dee:	6078      	str	r0, [r7, #4]
 8000df0:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000df2:	f001 ffc1 	bl	8002d78 <__errno>
 8000df6:	4603      	mov	r3, r0
 8000df8:	2216      	movs	r2, #22
 8000dfa:	601a      	str	r2, [r3, #0]
  return -1;
 8000dfc:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000e00:	4618      	mov	r0, r3
 8000e02:	3708      	adds	r7, #8
 8000e04:	46bd      	mov	sp, r7
 8000e06:	bd80      	pop	{r7, pc}

08000e08 <_exit>:

void _exit (int status)
{
 8000e08:	b580      	push	{r7, lr}
 8000e0a:	b082      	sub	sp, #8
 8000e0c:	af00      	add	r7, sp, #0
 8000e0e:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8000e10:	f04f 31ff 	mov.w	r1, #4294967295
 8000e14:	6878      	ldr	r0, [r7, #4]
 8000e16:	f7ff ffe7 	bl	8000de8 <_kill>
  while (1) {}    /* Make sure we hang here */
 8000e1a:	e7fe      	b.n	8000e1a <_exit+0x12>

08000e1c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000e1c:	b580      	push	{r7, lr}
 8000e1e:	b086      	sub	sp, #24
 8000e20:	af00      	add	r7, sp, #0
 8000e22:	60f8      	str	r0, [r7, #12]
 8000e24:	60b9      	str	r1, [r7, #8]
 8000e26:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000e28:	2300      	movs	r3, #0
 8000e2a:	617b      	str	r3, [r7, #20]
 8000e2c:	e00a      	b.n	8000e44 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000e2e:	f3af 8000 	nop.w
 8000e32:	4601      	mov	r1, r0
 8000e34:	68bb      	ldr	r3, [r7, #8]
 8000e36:	1c5a      	adds	r2, r3, #1
 8000e38:	60ba      	str	r2, [r7, #8]
 8000e3a:	b2ca      	uxtb	r2, r1
 8000e3c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000e3e:	697b      	ldr	r3, [r7, #20]
 8000e40:	3301      	adds	r3, #1
 8000e42:	617b      	str	r3, [r7, #20]
 8000e44:	697a      	ldr	r2, [r7, #20]
 8000e46:	687b      	ldr	r3, [r7, #4]
 8000e48:	429a      	cmp	r2, r3
 8000e4a:	dbf0      	blt.n	8000e2e <_read+0x12>
  }

  return len;
 8000e4c:	687b      	ldr	r3, [r7, #4]
}
 8000e4e:	4618      	mov	r0, r3
 8000e50:	3718      	adds	r7, #24
 8000e52:	46bd      	mov	sp, r7
 8000e54:	bd80      	pop	{r7, pc}

08000e56 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000e56:	b580      	push	{r7, lr}
 8000e58:	b086      	sub	sp, #24
 8000e5a:	af00      	add	r7, sp, #0
 8000e5c:	60f8      	str	r0, [r7, #12]
 8000e5e:	60b9      	str	r1, [r7, #8]
 8000e60:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000e62:	2300      	movs	r3, #0
 8000e64:	617b      	str	r3, [r7, #20]
 8000e66:	e009      	b.n	8000e7c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000e68:	68bb      	ldr	r3, [r7, #8]
 8000e6a:	1c5a      	adds	r2, r3, #1
 8000e6c:	60ba      	str	r2, [r7, #8]
 8000e6e:	781b      	ldrb	r3, [r3, #0]
 8000e70:	4618      	mov	r0, r3
 8000e72:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000e76:	697b      	ldr	r3, [r7, #20]
 8000e78:	3301      	adds	r3, #1
 8000e7a:	617b      	str	r3, [r7, #20]
 8000e7c:	697a      	ldr	r2, [r7, #20]
 8000e7e:	687b      	ldr	r3, [r7, #4]
 8000e80:	429a      	cmp	r2, r3
 8000e82:	dbf1      	blt.n	8000e68 <_write+0x12>
  }
  return len;
 8000e84:	687b      	ldr	r3, [r7, #4]
}
 8000e86:	4618      	mov	r0, r3
 8000e88:	3718      	adds	r7, #24
 8000e8a:	46bd      	mov	sp, r7
 8000e8c:	bd80      	pop	{r7, pc}

08000e8e <_close>:

int _close(int file)
{
 8000e8e:	b480      	push	{r7}
 8000e90:	b083      	sub	sp, #12
 8000e92:	af00      	add	r7, sp, #0
 8000e94:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000e96:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000e9a:	4618      	mov	r0, r3
 8000e9c:	370c      	adds	r7, #12
 8000e9e:	46bd      	mov	sp, r7
 8000ea0:	bc80      	pop	{r7}
 8000ea2:	4770      	bx	lr

08000ea4 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000ea4:	b480      	push	{r7}
 8000ea6:	b083      	sub	sp, #12
 8000ea8:	af00      	add	r7, sp, #0
 8000eaa:	6078      	str	r0, [r7, #4]
 8000eac:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000eae:	683b      	ldr	r3, [r7, #0]
 8000eb0:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000eb4:	605a      	str	r2, [r3, #4]
  return 0;
 8000eb6:	2300      	movs	r3, #0
}
 8000eb8:	4618      	mov	r0, r3
 8000eba:	370c      	adds	r7, #12
 8000ebc:	46bd      	mov	sp, r7
 8000ebe:	bc80      	pop	{r7}
 8000ec0:	4770      	bx	lr

08000ec2 <_isatty>:

int _isatty(int file)
{
 8000ec2:	b480      	push	{r7}
 8000ec4:	b083      	sub	sp, #12
 8000ec6:	af00      	add	r7, sp, #0
 8000ec8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000eca:	2301      	movs	r3, #1
}
 8000ecc:	4618      	mov	r0, r3
 8000ece:	370c      	adds	r7, #12
 8000ed0:	46bd      	mov	sp, r7
 8000ed2:	bc80      	pop	{r7}
 8000ed4:	4770      	bx	lr

08000ed6 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000ed6:	b480      	push	{r7}
 8000ed8:	b085      	sub	sp, #20
 8000eda:	af00      	add	r7, sp, #0
 8000edc:	60f8      	str	r0, [r7, #12]
 8000ede:	60b9      	str	r1, [r7, #8]
 8000ee0:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000ee2:	2300      	movs	r3, #0
}
 8000ee4:	4618      	mov	r0, r3
 8000ee6:	3714      	adds	r7, #20
 8000ee8:	46bd      	mov	sp, r7
 8000eea:	bc80      	pop	{r7}
 8000eec:	4770      	bx	lr
	...

08000ef0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000ef0:	b580      	push	{r7, lr}
 8000ef2:	b086      	sub	sp, #24
 8000ef4:	af00      	add	r7, sp, #0
 8000ef6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000ef8:	4a14      	ldr	r2, [pc, #80]	; (8000f4c <_sbrk+0x5c>)
 8000efa:	4b15      	ldr	r3, [pc, #84]	; (8000f50 <_sbrk+0x60>)
 8000efc:	1ad3      	subs	r3, r2, r3
 8000efe:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000f00:	697b      	ldr	r3, [r7, #20]
 8000f02:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000f04:	4b13      	ldr	r3, [pc, #76]	; (8000f54 <_sbrk+0x64>)
 8000f06:	681b      	ldr	r3, [r3, #0]
 8000f08:	2b00      	cmp	r3, #0
 8000f0a:	d102      	bne.n	8000f12 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000f0c:	4b11      	ldr	r3, [pc, #68]	; (8000f54 <_sbrk+0x64>)
 8000f0e:	4a12      	ldr	r2, [pc, #72]	; (8000f58 <_sbrk+0x68>)
 8000f10:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000f12:	4b10      	ldr	r3, [pc, #64]	; (8000f54 <_sbrk+0x64>)
 8000f14:	681a      	ldr	r2, [r3, #0]
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	4413      	add	r3, r2
 8000f1a:	693a      	ldr	r2, [r7, #16]
 8000f1c:	429a      	cmp	r2, r3
 8000f1e:	d207      	bcs.n	8000f30 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000f20:	f001 ff2a 	bl	8002d78 <__errno>
 8000f24:	4603      	mov	r3, r0
 8000f26:	220c      	movs	r2, #12
 8000f28:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000f2a:	f04f 33ff 	mov.w	r3, #4294967295
 8000f2e:	e009      	b.n	8000f44 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000f30:	4b08      	ldr	r3, [pc, #32]	; (8000f54 <_sbrk+0x64>)
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000f36:	4b07      	ldr	r3, [pc, #28]	; (8000f54 <_sbrk+0x64>)
 8000f38:	681a      	ldr	r2, [r3, #0]
 8000f3a:	687b      	ldr	r3, [r7, #4]
 8000f3c:	4413      	add	r3, r2
 8000f3e:	4a05      	ldr	r2, [pc, #20]	; (8000f54 <_sbrk+0x64>)
 8000f40:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000f42:	68fb      	ldr	r3, [r7, #12]
}
 8000f44:	4618      	mov	r0, r3
 8000f46:	3718      	adds	r7, #24
 8000f48:	46bd      	mov	sp, r7
 8000f4a:	bd80      	pop	{r7, pc}
 8000f4c:	20005000 	.word	0x20005000
 8000f50:	00000400 	.word	0x00000400
 8000f54:	200001f0 	.word	0x200001f0
 8000f58:	20000348 	.word	0x20000348

08000f5c <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000f5c:	b480      	push	{r7}
 8000f5e:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000f60:	bf00      	nop
 8000f62:	46bd      	mov	sp, r7
 8000f64:	bc80      	pop	{r7}
 8000f66:	4770      	bx	lr

08000f68 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 8000f68:	f7ff fff8 	bl	8000f5c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000f6c:	480b      	ldr	r0, [pc, #44]	; (8000f9c <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 8000f6e:	490c      	ldr	r1, [pc, #48]	; (8000fa0 <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 8000f70:	4a0c      	ldr	r2, [pc, #48]	; (8000fa4 <LoopFillZerobss+0x16>)
  movs r3, #0
 8000f72:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000f74:	e002      	b.n	8000f7c <LoopCopyDataInit>

08000f76 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000f76:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000f78:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000f7a:	3304      	adds	r3, #4

08000f7c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000f7c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000f7e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000f80:	d3f9      	bcc.n	8000f76 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000f82:	4a09      	ldr	r2, [pc, #36]	; (8000fa8 <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 8000f84:	4c09      	ldr	r4, [pc, #36]	; (8000fac <LoopFillZerobss+0x1e>)
  movs r3, #0
 8000f86:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000f88:	e001      	b.n	8000f8e <LoopFillZerobss>

08000f8a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000f8a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000f8c:	3204      	adds	r2, #4

08000f8e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000f8e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000f90:	d3fb      	bcc.n	8000f8a <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8000f92:	f001 fef7 	bl	8002d84 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000f96:	f7ff fe1f 	bl	8000bd8 <main>
  bx lr
 8000f9a:	4770      	bx	lr
  ldr r0, =_sdata
 8000f9c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000fa0:	200001d4 	.word	0x200001d4
  ldr r2, =_sidata
 8000fa4:	08006990 	.word	0x08006990
  ldr r2, =_sbss
 8000fa8:	200001d4 	.word	0x200001d4
  ldr r4, =_ebss
 8000fac:	20000344 	.word	0x20000344

08000fb0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000fb0:	e7fe      	b.n	8000fb0 <ADC1_2_IRQHandler>
	...

08000fb4 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8000fb4:	b580      	push	{r7, lr}
 8000fb6:	af00      	add	r7, sp, #0
    defined(STM32F102x6) || defined(STM32F102xB) || \
    defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) || \
    defined(STM32F105xC) || defined(STM32F107xC)

  /* Prefetch buffer is not available on value line devices */
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8000fb8:	4b08      	ldr	r3, [pc, #32]	; (8000fdc <HAL_Init+0x28>)
 8000fba:	681b      	ldr	r3, [r3, #0]
 8000fbc:	4a07      	ldr	r2, [pc, #28]	; (8000fdc <HAL_Init+0x28>)
 8000fbe:	f043 0310 	orr.w	r3, r3, #16
 8000fc2:	6013      	str	r3, [r2, #0]
#endif
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8000fc4:	2003      	movs	r0, #3
 8000fc6:	f000 f92b 	bl	8001220 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8000fca:	200f      	movs	r0, #15
 8000fcc:	f000 f808 	bl	8000fe0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8000fd0:	f7ff feaa 	bl	8000d28 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8000fd4:	2300      	movs	r3, #0
}
 8000fd6:	4618      	mov	r0, r3
 8000fd8:	bd80      	pop	{r7, pc}
 8000fda:	bf00      	nop
 8000fdc:	40022000 	.word	0x40022000

08000fe0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8000fe0:	b580      	push	{r7, lr}
 8000fe2:	b082      	sub	sp, #8
 8000fe4:	af00      	add	r7, sp, #0
 8000fe6:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8000fe8:	4b12      	ldr	r3, [pc, #72]	; (8001034 <HAL_InitTick+0x54>)
 8000fea:	681a      	ldr	r2, [r3, #0]
 8000fec:	4b12      	ldr	r3, [pc, #72]	; (8001038 <HAL_InitTick+0x58>)
 8000fee:	781b      	ldrb	r3, [r3, #0]
 8000ff0:	4619      	mov	r1, r3
 8000ff2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000ff6:	fbb3 f3f1 	udiv	r3, r3, r1
 8000ffa:	fbb2 f3f3 	udiv	r3, r2, r3
 8000ffe:	4618      	mov	r0, r3
 8001000:	f000 f935 	bl	800126e <HAL_SYSTICK_Config>
 8001004:	4603      	mov	r3, r0
 8001006:	2b00      	cmp	r3, #0
 8001008:	d001      	beq.n	800100e <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 800100a:	2301      	movs	r3, #1
 800100c:	e00e      	b.n	800102c <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800100e:	687b      	ldr	r3, [r7, #4]
 8001010:	2b0f      	cmp	r3, #15
 8001012:	d80a      	bhi.n	800102a <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001014:	2200      	movs	r2, #0
 8001016:	6879      	ldr	r1, [r7, #4]
 8001018:	f04f 30ff 	mov.w	r0, #4294967295
 800101c:	f000 f90b 	bl	8001236 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001020:	4a06      	ldr	r2, [pc, #24]	; (800103c <HAL_InitTick+0x5c>)
 8001022:	687b      	ldr	r3, [r7, #4]
 8001024:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8001026:	2300      	movs	r3, #0
 8001028:	e000      	b.n	800102c <HAL_InitTick+0x4c>
    return HAL_ERROR;
 800102a:	2301      	movs	r3, #1
}
 800102c:	4618      	mov	r0, r3
 800102e:	3708      	adds	r7, #8
 8001030:	46bd      	mov	sp, r7
 8001032:	bd80      	pop	{r7, pc}
 8001034:	20000000 	.word	0x20000000
 8001038:	20000008 	.word	0x20000008
 800103c:	20000004 	.word	0x20000004

08001040 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001040:	b480      	push	{r7}
 8001042:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001044:	4b05      	ldr	r3, [pc, #20]	; (800105c <HAL_IncTick+0x1c>)
 8001046:	781b      	ldrb	r3, [r3, #0]
 8001048:	461a      	mov	r2, r3
 800104a:	4b05      	ldr	r3, [pc, #20]	; (8001060 <HAL_IncTick+0x20>)
 800104c:	681b      	ldr	r3, [r3, #0]
 800104e:	4413      	add	r3, r2
 8001050:	4a03      	ldr	r2, [pc, #12]	; (8001060 <HAL_IncTick+0x20>)
 8001052:	6013      	str	r3, [r2, #0]
}
 8001054:	bf00      	nop
 8001056:	46bd      	mov	sp, r7
 8001058:	bc80      	pop	{r7}
 800105a:	4770      	bx	lr
 800105c:	20000008 	.word	0x20000008
 8001060:	200001f4 	.word	0x200001f4

08001064 <HAL_GetTick>:
  * @note  This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8001064:	b480      	push	{r7}
 8001066:	af00      	add	r7, sp, #0
  return uwTick;
 8001068:	4b02      	ldr	r3, [pc, #8]	; (8001074 <HAL_GetTick+0x10>)
 800106a:	681b      	ldr	r3, [r3, #0]
}
 800106c:	4618      	mov	r0, r3
 800106e:	46bd      	mov	sp, r7
 8001070:	bc80      	pop	{r7}
 8001072:	4770      	bx	lr
 8001074:	200001f4 	.word	0x200001f4

08001078 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001078:	b580      	push	{r7, lr}
 800107a:	b084      	sub	sp, #16
 800107c:	af00      	add	r7, sp, #0
 800107e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8001080:	f7ff fff0 	bl	8001064 <HAL_GetTick>
 8001084:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800108a:	68fb      	ldr	r3, [r7, #12]
 800108c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001090:	d005      	beq.n	800109e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8001092:	4b0a      	ldr	r3, [pc, #40]	; (80010bc <HAL_Delay+0x44>)
 8001094:	781b      	ldrb	r3, [r3, #0]
 8001096:	461a      	mov	r2, r3
 8001098:	68fb      	ldr	r3, [r7, #12]
 800109a:	4413      	add	r3, r2
 800109c:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 800109e:	bf00      	nop
 80010a0:	f7ff ffe0 	bl	8001064 <HAL_GetTick>
 80010a4:	4602      	mov	r2, r0
 80010a6:	68bb      	ldr	r3, [r7, #8]
 80010a8:	1ad3      	subs	r3, r2, r3
 80010aa:	68fa      	ldr	r2, [r7, #12]
 80010ac:	429a      	cmp	r2, r3
 80010ae:	d8f7      	bhi.n	80010a0 <HAL_Delay+0x28>
  {
  }
}
 80010b0:	bf00      	nop
 80010b2:	bf00      	nop
 80010b4:	3710      	adds	r7, #16
 80010b6:	46bd      	mov	sp, r7
 80010b8:	bd80      	pop	{r7, pc}
 80010ba:	bf00      	nop
 80010bc:	20000008 	.word	0x20000008

080010c0 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80010c0:	b480      	push	{r7}
 80010c2:	b085      	sub	sp, #20
 80010c4:	af00      	add	r7, sp, #0
 80010c6:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80010c8:	687b      	ldr	r3, [r7, #4]
 80010ca:	f003 0307 	and.w	r3, r3, #7
 80010ce:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80010d0:	4b0c      	ldr	r3, [pc, #48]	; (8001104 <__NVIC_SetPriorityGrouping+0x44>)
 80010d2:	68db      	ldr	r3, [r3, #12]
 80010d4:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80010d6:	68ba      	ldr	r2, [r7, #8]
 80010d8:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80010dc:	4013      	ands	r3, r2
 80010de:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 80010e0:	68fb      	ldr	r3, [r7, #12]
 80010e2:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80010e4:	68bb      	ldr	r3, [r7, #8]
 80010e6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80010e8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80010ec:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80010f0:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80010f2:	4a04      	ldr	r2, [pc, #16]	; (8001104 <__NVIC_SetPriorityGrouping+0x44>)
 80010f4:	68bb      	ldr	r3, [r7, #8]
 80010f6:	60d3      	str	r3, [r2, #12]
}
 80010f8:	bf00      	nop
 80010fa:	3714      	adds	r7, #20
 80010fc:	46bd      	mov	sp, r7
 80010fe:	bc80      	pop	{r7}
 8001100:	4770      	bx	lr
 8001102:	bf00      	nop
 8001104:	e000ed00 	.word	0xe000ed00

08001108 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001108:	b480      	push	{r7}
 800110a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800110c:	4b04      	ldr	r3, [pc, #16]	; (8001120 <__NVIC_GetPriorityGrouping+0x18>)
 800110e:	68db      	ldr	r3, [r3, #12]
 8001110:	0a1b      	lsrs	r3, r3, #8
 8001112:	f003 0307 	and.w	r3, r3, #7
}
 8001116:	4618      	mov	r0, r3
 8001118:	46bd      	mov	sp, r7
 800111a:	bc80      	pop	{r7}
 800111c:	4770      	bx	lr
 800111e:	bf00      	nop
 8001120:	e000ed00 	.word	0xe000ed00

08001124 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001124:	b480      	push	{r7}
 8001126:	b083      	sub	sp, #12
 8001128:	af00      	add	r7, sp, #0
 800112a:	4603      	mov	r3, r0
 800112c:	6039      	str	r1, [r7, #0]
 800112e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001130:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001134:	2b00      	cmp	r3, #0
 8001136:	db0a      	blt.n	800114e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001138:	683b      	ldr	r3, [r7, #0]
 800113a:	b2da      	uxtb	r2, r3
 800113c:	490c      	ldr	r1, [pc, #48]	; (8001170 <__NVIC_SetPriority+0x4c>)
 800113e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001142:	0112      	lsls	r2, r2, #4
 8001144:	b2d2      	uxtb	r2, r2
 8001146:	440b      	add	r3, r1
 8001148:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 800114c:	e00a      	b.n	8001164 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800114e:	683b      	ldr	r3, [r7, #0]
 8001150:	b2da      	uxtb	r2, r3
 8001152:	4908      	ldr	r1, [pc, #32]	; (8001174 <__NVIC_SetPriority+0x50>)
 8001154:	79fb      	ldrb	r3, [r7, #7]
 8001156:	f003 030f 	and.w	r3, r3, #15
 800115a:	3b04      	subs	r3, #4
 800115c:	0112      	lsls	r2, r2, #4
 800115e:	b2d2      	uxtb	r2, r2
 8001160:	440b      	add	r3, r1
 8001162:	761a      	strb	r2, [r3, #24]
}
 8001164:	bf00      	nop
 8001166:	370c      	adds	r7, #12
 8001168:	46bd      	mov	sp, r7
 800116a:	bc80      	pop	{r7}
 800116c:	4770      	bx	lr
 800116e:	bf00      	nop
 8001170:	e000e100 	.word	0xe000e100
 8001174:	e000ed00 	.word	0xe000ed00

08001178 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001178:	b480      	push	{r7}
 800117a:	b089      	sub	sp, #36	; 0x24
 800117c:	af00      	add	r7, sp, #0
 800117e:	60f8      	str	r0, [r7, #12]
 8001180:	60b9      	str	r1, [r7, #8]
 8001182:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001184:	68fb      	ldr	r3, [r7, #12]
 8001186:	f003 0307 	and.w	r3, r3, #7
 800118a:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 800118c:	69fb      	ldr	r3, [r7, #28]
 800118e:	f1c3 0307 	rsb	r3, r3, #7
 8001192:	2b04      	cmp	r3, #4
 8001194:	bf28      	it	cs
 8001196:	2304      	movcs	r3, #4
 8001198:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800119a:	69fb      	ldr	r3, [r7, #28]
 800119c:	3304      	adds	r3, #4
 800119e:	2b06      	cmp	r3, #6
 80011a0:	d902      	bls.n	80011a8 <NVIC_EncodePriority+0x30>
 80011a2:	69fb      	ldr	r3, [r7, #28]
 80011a4:	3b03      	subs	r3, #3
 80011a6:	e000      	b.n	80011aa <NVIC_EncodePriority+0x32>
 80011a8:	2300      	movs	r3, #0
 80011aa:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80011ac:	f04f 32ff 	mov.w	r2, #4294967295
 80011b0:	69bb      	ldr	r3, [r7, #24]
 80011b2:	fa02 f303 	lsl.w	r3, r2, r3
 80011b6:	43da      	mvns	r2, r3
 80011b8:	68bb      	ldr	r3, [r7, #8]
 80011ba:	401a      	ands	r2, r3
 80011bc:	697b      	ldr	r3, [r7, #20]
 80011be:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80011c0:	f04f 31ff 	mov.w	r1, #4294967295
 80011c4:	697b      	ldr	r3, [r7, #20]
 80011c6:	fa01 f303 	lsl.w	r3, r1, r3
 80011ca:	43d9      	mvns	r1, r3
 80011cc:	687b      	ldr	r3, [r7, #4]
 80011ce:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80011d0:	4313      	orrs	r3, r2
         );
}
 80011d2:	4618      	mov	r0, r3
 80011d4:	3724      	adds	r7, #36	; 0x24
 80011d6:	46bd      	mov	sp, r7
 80011d8:	bc80      	pop	{r7}
 80011da:	4770      	bx	lr

080011dc <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80011dc:	b580      	push	{r7, lr}
 80011de:	b082      	sub	sp, #8
 80011e0:	af00      	add	r7, sp, #0
 80011e2:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80011e4:	687b      	ldr	r3, [r7, #4]
 80011e6:	3b01      	subs	r3, #1
 80011e8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80011ec:	d301      	bcc.n	80011f2 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 80011ee:	2301      	movs	r3, #1
 80011f0:	e00f      	b.n	8001212 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80011f2:	4a0a      	ldr	r2, [pc, #40]	; (800121c <SysTick_Config+0x40>)
 80011f4:	687b      	ldr	r3, [r7, #4]
 80011f6:	3b01      	subs	r3, #1
 80011f8:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80011fa:	210f      	movs	r1, #15
 80011fc:	f04f 30ff 	mov.w	r0, #4294967295
 8001200:	f7ff ff90 	bl	8001124 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001204:	4b05      	ldr	r3, [pc, #20]	; (800121c <SysTick_Config+0x40>)
 8001206:	2200      	movs	r2, #0
 8001208:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800120a:	4b04      	ldr	r3, [pc, #16]	; (800121c <SysTick_Config+0x40>)
 800120c:	2207      	movs	r2, #7
 800120e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8001210:	2300      	movs	r3, #0
}
 8001212:	4618      	mov	r0, r3
 8001214:	3708      	adds	r7, #8
 8001216:	46bd      	mov	sp, r7
 8001218:	bd80      	pop	{r7, pc}
 800121a:	bf00      	nop
 800121c:	e000e010 	.word	0xe000e010

08001220 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8001220:	b580      	push	{r7, lr}
 8001222:	b082      	sub	sp, #8
 8001224:	af00      	add	r7, sp, #0
 8001226:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8001228:	6878      	ldr	r0, [r7, #4]
 800122a:	f7ff ff49 	bl	80010c0 <__NVIC_SetPriorityGrouping>
}
 800122e:	bf00      	nop
 8001230:	3708      	adds	r7, #8
 8001232:	46bd      	mov	sp, r7
 8001234:	bd80      	pop	{r7, pc}

08001236 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001236:	b580      	push	{r7, lr}
 8001238:	b086      	sub	sp, #24
 800123a:	af00      	add	r7, sp, #0
 800123c:	4603      	mov	r3, r0
 800123e:	60b9      	str	r1, [r7, #8]
 8001240:	607a      	str	r2, [r7, #4]
 8001242:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8001244:	2300      	movs	r3, #0
 8001246:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8001248:	f7ff ff5e 	bl	8001108 <__NVIC_GetPriorityGrouping>
 800124c:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 800124e:	687a      	ldr	r2, [r7, #4]
 8001250:	68b9      	ldr	r1, [r7, #8]
 8001252:	6978      	ldr	r0, [r7, #20]
 8001254:	f7ff ff90 	bl	8001178 <NVIC_EncodePriority>
 8001258:	4602      	mov	r2, r0
 800125a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800125e:	4611      	mov	r1, r2
 8001260:	4618      	mov	r0, r3
 8001262:	f7ff ff5f 	bl	8001124 <__NVIC_SetPriority>
}
 8001266:	bf00      	nop
 8001268:	3718      	adds	r7, #24
 800126a:	46bd      	mov	sp, r7
 800126c:	bd80      	pop	{r7, pc}

0800126e <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800126e:	b580      	push	{r7, lr}
 8001270:	b082      	sub	sp, #8
 8001272:	af00      	add	r7, sp, #0
 8001274:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8001276:	6878      	ldr	r0, [r7, #4]
 8001278:	f7ff ffb0 	bl	80011dc <SysTick_Config>
 800127c:	4603      	mov	r3, r0
}
 800127e:	4618      	mov	r0, r3
 8001280:	3708      	adds	r7, #8
 8001282:	46bd      	mov	sp, r7
 8001284:	bd80      	pop	{r7, pc}
	...

08001288 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001288:	b480      	push	{r7}
 800128a:	b08b      	sub	sp, #44	; 0x2c
 800128c:	af00      	add	r7, sp, #0
 800128e:	6078      	str	r0, [r7, #4]
 8001290:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 8001292:	2300      	movs	r3, #0
 8001294:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t ioposition;
  uint32_t iocurrent;
  uint32_t temp;
  uint32_t config = 0x00u;
 8001296:	2300      	movs	r3, #0
 8001298:	623b      	str	r3, [r7, #32]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 800129a:	e169      	b.n	8001570 <HAL_GPIO_Init+0x2e8>
  {
    /* Get the IO position */
    ioposition = (0x01uL << position);
 800129c:	2201      	movs	r2, #1
 800129e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80012a0:	fa02 f303 	lsl.w	r3, r2, r3
 80012a4:	61fb      	str	r3, [r7, #28]

    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80012a6:	683b      	ldr	r3, [r7, #0]
 80012a8:	681b      	ldr	r3, [r3, #0]
 80012aa:	69fa      	ldr	r2, [r7, #28]
 80012ac:	4013      	ands	r3, r2
 80012ae:	61bb      	str	r3, [r7, #24]

    if (iocurrent == ioposition)
 80012b0:	69ba      	ldr	r2, [r7, #24]
 80012b2:	69fb      	ldr	r3, [r7, #28]
 80012b4:	429a      	cmp	r2, r3
 80012b6:	f040 8158 	bne.w	800156a <HAL_GPIO_Init+0x2e2>
    {
      /* Check the Alternate function parameters */
      assert_param(IS_GPIO_AF_INSTANCE(GPIOx));

      /* Based on the required mode, filling config variable with MODEy[1:0] and CNFy[3:2] corresponding bits */
      switch (GPIO_Init->Mode)
 80012ba:	683b      	ldr	r3, [r7, #0]
 80012bc:	685b      	ldr	r3, [r3, #4]
 80012be:	4a9a      	ldr	r2, [pc, #616]	; (8001528 <HAL_GPIO_Init+0x2a0>)
 80012c0:	4293      	cmp	r3, r2
 80012c2:	d05e      	beq.n	8001382 <HAL_GPIO_Init+0xfa>
 80012c4:	4a98      	ldr	r2, [pc, #608]	; (8001528 <HAL_GPIO_Init+0x2a0>)
 80012c6:	4293      	cmp	r3, r2
 80012c8:	d875      	bhi.n	80013b6 <HAL_GPIO_Init+0x12e>
 80012ca:	4a98      	ldr	r2, [pc, #608]	; (800152c <HAL_GPIO_Init+0x2a4>)
 80012cc:	4293      	cmp	r3, r2
 80012ce:	d058      	beq.n	8001382 <HAL_GPIO_Init+0xfa>
 80012d0:	4a96      	ldr	r2, [pc, #600]	; (800152c <HAL_GPIO_Init+0x2a4>)
 80012d2:	4293      	cmp	r3, r2
 80012d4:	d86f      	bhi.n	80013b6 <HAL_GPIO_Init+0x12e>
 80012d6:	4a96      	ldr	r2, [pc, #600]	; (8001530 <HAL_GPIO_Init+0x2a8>)
 80012d8:	4293      	cmp	r3, r2
 80012da:	d052      	beq.n	8001382 <HAL_GPIO_Init+0xfa>
 80012dc:	4a94      	ldr	r2, [pc, #592]	; (8001530 <HAL_GPIO_Init+0x2a8>)
 80012de:	4293      	cmp	r3, r2
 80012e0:	d869      	bhi.n	80013b6 <HAL_GPIO_Init+0x12e>
 80012e2:	4a94      	ldr	r2, [pc, #592]	; (8001534 <HAL_GPIO_Init+0x2ac>)
 80012e4:	4293      	cmp	r3, r2
 80012e6:	d04c      	beq.n	8001382 <HAL_GPIO_Init+0xfa>
 80012e8:	4a92      	ldr	r2, [pc, #584]	; (8001534 <HAL_GPIO_Init+0x2ac>)
 80012ea:	4293      	cmp	r3, r2
 80012ec:	d863      	bhi.n	80013b6 <HAL_GPIO_Init+0x12e>
 80012ee:	4a92      	ldr	r2, [pc, #584]	; (8001538 <HAL_GPIO_Init+0x2b0>)
 80012f0:	4293      	cmp	r3, r2
 80012f2:	d046      	beq.n	8001382 <HAL_GPIO_Init+0xfa>
 80012f4:	4a90      	ldr	r2, [pc, #576]	; (8001538 <HAL_GPIO_Init+0x2b0>)
 80012f6:	4293      	cmp	r3, r2
 80012f8:	d85d      	bhi.n	80013b6 <HAL_GPIO_Init+0x12e>
 80012fa:	2b12      	cmp	r3, #18
 80012fc:	d82a      	bhi.n	8001354 <HAL_GPIO_Init+0xcc>
 80012fe:	2b12      	cmp	r3, #18
 8001300:	d859      	bhi.n	80013b6 <HAL_GPIO_Init+0x12e>
 8001302:	a201      	add	r2, pc, #4	; (adr r2, 8001308 <HAL_GPIO_Init+0x80>)
 8001304:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001308:	08001383 	.word	0x08001383
 800130c:	0800135d 	.word	0x0800135d
 8001310:	0800136f 	.word	0x0800136f
 8001314:	080013b1 	.word	0x080013b1
 8001318:	080013b7 	.word	0x080013b7
 800131c:	080013b7 	.word	0x080013b7
 8001320:	080013b7 	.word	0x080013b7
 8001324:	080013b7 	.word	0x080013b7
 8001328:	080013b7 	.word	0x080013b7
 800132c:	080013b7 	.word	0x080013b7
 8001330:	080013b7 	.word	0x080013b7
 8001334:	080013b7 	.word	0x080013b7
 8001338:	080013b7 	.word	0x080013b7
 800133c:	080013b7 	.word	0x080013b7
 8001340:	080013b7 	.word	0x080013b7
 8001344:	080013b7 	.word	0x080013b7
 8001348:	080013b7 	.word	0x080013b7
 800134c:	08001365 	.word	0x08001365
 8001350:	08001379 	.word	0x08001379
 8001354:	4a79      	ldr	r2, [pc, #484]	; (800153c <HAL_GPIO_Init+0x2b4>)
 8001356:	4293      	cmp	r3, r2
 8001358:	d013      	beq.n	8001382 <HAL_GPIO_Init+0xfa>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
          break;

        /* Parameters are checked with assert_param */
        default:
          break;
 800135a:	e02c      	b.n	80013b6 <HAL_GPIO_Init+0x12e>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_PP;
 800135c:	683b      	ldr	r3, [r7, #0]
 800135e:	68db      	ldr	r3, [r3, #12]
 8001360:	623b      	str	r3, [r7, #32]
          break;
 8001362:	e029      	b.n	80013b8 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_GP_OUTPUT_OD;
 8001364:	683b      	ldr	r3, [r7, #0]
 8001366:	68db      	ldr	r3, [r3, #12]
 8001368:	3304      	adds	r3, #4
 800136a:	623b      	str	r3, [r7, #32]
          break;
 800136c:	e024      	b.n	80013b8 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_PP;
 800136e:	683b      	ldr	r3, [r7, #0]
 8001370:	68db      	ldr	r3, [r3, #12]
 8001372:	3308      	adds	r3, #8
 8001374:	623b      	str	r3, [r7, #32]
          break;
 8001376:	e01f      	b.n	80013b8 <HAL_GPIO_Init+0x130>
          config = GPIO_Init->Speed + GPIO_CR_CNF_AF_OUTPUT_OD;
 8001378:	683b      	ldr	r3, [r7, #0]
 800137a:	68db      	ldr	r3, [r3, #12]
 800137c:	330c      	adds	r3, #12
 800137e:	623b      	str	r3, [r7, #32]
          break;
 8001380:	e01a      	b.n	80013b8 <HAL_GPIO_Init+0x130>
          if (GPIO_Init->Pull == GPIO_NOPULL)
 8001382:	683b      	ldr	r3, [r7, #0]
 8001384:	689b      	ldr	r3, [r3, #8]
 8001386:	2b00      	cmp	r3, #0
 8001388:	d102      	bne.n	8001390 <HAL_GPIO_Init+0x108>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_FLOATING;
 800138a:	2304      	movs	r3, #4
 800138c:	623b      	str	r3, [r7, #32]
          break;
 800138e:	e013      	b.n	80013b8 <HAL_GPIO_Init+0x130>
          else if (GPIO_Init->Pull == GPIO_PULLUP)
 8001390:	683b      	ldr	r3, [r7, #0]
 8001392:	689b      	ldr	r3, [r3, #8]
 8001394:	2b01      	cmp	r3, #1
 8001396:	d105      	bne.n	80013a4 <HAL_GPIO_Init+0x11c>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 8001398:	2308      	movs	r3, #8
 800139a:	623b      	str	r3, [r7, #32]
            GPIOx->BSRR = ioposition;
 800139c:	687b      	ldr	r3, [r7, #4]
 800139e:	69fa      	ldr	r2, [r7, #28]
 80013a0:	611a      	str	r2, [r3, #16]
          break;
 80013a2:	e009      	b.n	80013b8 <HAL_GPIO_Init+0x130>
            config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_INPUT_PU_PD;
 80013a4:	2308      	movs	r3, #8
 80013a6:	623b      	str	r3, [r7, #32]
            GPIOx->BRR = ioposition;
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	69fa      	ldr	r2, [r7, #28]
 80013ac:	615a      	str	r2, [r3, #20]
          break;
 80013ae:	e003      	b.n	80013b8 <HAL_GPIO_Init+0x130>
          config = GPIO_CR_MODE_INPUT + GPIO_CR_CNF_ANALOG;
 80013b0:	2300      	movs	r3, #0
 80013b2:	623b      	str	r3, [r7, #32]
          break;
 80013b4:	e000      	b.n	80013b8 <HAL_GPIO_Init+0x130>
          break;
 80013b6:	bf00      	nop
      }

      /* Check if the current bit belongs to first half or last half of the pin count number
       in order to address CRH or CRL register*/
      configregister = (iocurrent < GPIO_PIN_8) ? &GPIOx->CRL     : &GPIOx->CRH;
 80013b8:	69bb      	ldr	r3, [r7, #24]
 80013ba:	2bff      	cmp	r3, #255	; 0xff
 80013bc:	d801      	bhi.n	80013c2 <HAL_GPIO_Init+0x13a>
 80013be:	687b      	ldr	r3, [r7, #4]
 80013c0:	e001      	b.n	80013c6 <HAL_GPIO_Init+0x13e>
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	3304      	adds	r3, #4
 80013c6:	617b      	str	r3, [r7, #20]
      registeroffset = (iocurrent < GPIO_PIN_8) ? (position << 2u) : ((position - 8u) << 2u);
 80013c8:	69bb      	ldr	r3, [r7, #24]
 80013ca:	2bff      	cmp	r3, #255	; 0xff
 80013cc:	d802      	bhi.n	80013d4 <HAL_GPIO_Init+0x14c>
 80013ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013d0:	009b      	lsls	r3, r3, #2
 80013d2:	e002      	b.n	80013da <HAL_GPIO_Init+0x152>
 80013d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80013d6:	3b08      	subs	r3, #8
 80013d8:	009b      	lsls	r3, r3, #2
 80013da:	613b      	str	r3, [r7, #16]

      /* Apply the new configuration of the pin to the register */
      MODIFY_REG((*configregister), ((GPIO_CRL_MODE0 | GPIO_CRL_CNF0) << registeroffset), (config << registeroffset));
 80013dc:	697b      	ldr	r3, [r7, #20]
 80013de:	681a      	ldr	r2, [r3, #0]
 80013e0:	210f      	movs	r1, #15
 80013e2:	693b      	ldr	r3, [r7, #16]
 80013e4:	fa01 f303 	lsl.w	r3, r1, r3
 80013e8:	43db      	mvns	r3, r3
 80013ea:	401a      	ands	r2, r3
 80013ec:	6a39      	ldr	r1, [r7, #32]
 80013ee:	693b      	ldr	r3, [r7, #16]
 80013f0:	fa01 f303 	lsl.w	r3, r1, r3
 80013f4:	431a      	orrs	r2, r3
 80013f6:	697b      	ldr	r3, [r7, #20]
 80013f8:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80013fa:	683b      	ldr	r3, [r7, #0]
 80013fc:	685b      	ldr	r3, [r3, #4]
 80013fe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001402:	2b00      	cmp	r3, #0
 8001404:	f000 80b1 	beq.w	800156a <HAL_GPIO_Init+0x2e2>
      {
        /* Enable AFIO Clock */
        __HAL_RCC_AFIO_CLK_ENABLE();
 8001408:	4b4d      	ldr	r3, [pc, #308]	; (8001540 <HAL_GPIO_Init+0x2b8>)
 800140a:	699b      	ldr	r3, [r3, #24]
 800140c:	4a4c      	ldr	r2, [pc, #304]	; (8001540 <HAL_GPIO_Init+0x2b8>)
 800140e:	f043 0301 	orr.w	r3, r3, #1
 8001412:	6193      	str	r3, [r2, #24]
 8001414:	4b4a      	ldr	r3, [pc, #296]	; (8001540 <HAL_GPIO_Init+0x2b8>)
 8001416:	699b      	ldr	r3, [r3, #24]
 8001418:	f003 0301 	and.w	r3, r3, #1
 800141c:	60bb      	str	r3, [r7, #8]
 800141e:	68bb      	ldr	r3, [r7, #8]
        temp = AFIO->EXTICR[position >> 2u];
 8001420:	4a48      	ldr	r2, [pc, #288]	; (8001544 <HAL_GPIO_Init+0x2bc>)
 8001422:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001424:	089b      	lsrs	r3, r3, #2
 8001426:	3302      	adds	r3, #2
 8001428:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800142c:	60fb      	str	r3, [r7, #12]
        CLEAR_BIT(temp, (0x0Fu) << (4u * (position & 0x03u)));
 800142e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001430:	f003 0303 	and.w	r3, r3, #3
 8001434:	009b      	lsls	r3, r3, #2
 8001436:	220f      	movs	r2, #15
 8001438:	fa02 f303 	lsl.w	r3, r2, r3
 800143c:	43db      	mvns	r3, r3
 800143e:	68fa      	ldr	r2, [r7, #12]
 8001440:	4013      	ands	r3, r2
 8001442:	60fb      	str	r3, [r7, #12]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4u * (position & 0x03u)));
 8001444:	687b      	ldr	r3, [r7, #4]
 8001446:	4a40      	ldr	r2, [pc, #256]	; (8001548 <HAL_GPIO_Init+0x2c0>)
 8001448:	4293      	cmp	r3, r2
 800144a:	d013      	beq.n	8001474 <HAL_GPIO_Init+0x1ec>
 800144c:	687b      	ldr	r3, [r7, #4]
 800144e:	4a3f      	ldr	r2, [pc, #252]	; (800154c <HAL_GPIO_Init+0x2c4>)
 8001450:	4293      	cmp	r3, r2
 8001452:	d00d      	beq.n	8001470 <HAL_GPIO_Init+0x1e8>
 8001454:	687b      	ldr	r3, [r7, #4]
 8001456:	4a3e      	ldr	r2, [pc, #248]	; (8001550 <HAL_GPIO_Init+0x2c8>)
 8001458:	4293      	cmp	r3, r2
 800145a:	d007      	beq.n	800146c <HAL_GPIO_Init+0x1e4>
 800145c:	687b      	ldr	r3, [r7, #4]
 800145e:	4a3d      	ldr	r2, [pc, #244]	; (8001554 <HAL_GPIO_Init+0x2cc>)
 8001460:	4293      	cmp	r3, r2
 8001462:	d101      	bne.n	8001468 <HAL_GPIO_Init+0x1e0>
 8001464:	2303      	movs	r3, #3
 8001466:	e006      	b.n	8001476 <HAL_GPIO_Init+0x1ee>
 8001468:	2304      	movs	r3, #4
 800146a:	e004      	b.n	8001476 <HAL_GPIO_Init+0x1ee>
 800146c:	2302      	movs	r3, #2
 800146e:	e002      	b.n	8001476 <HAL_GPIO_Init+0x1ee>
 8001470:	2301      	movs	r3, #1
 8001472:	e000      	b.n	8001476 <HAL_GPIO_Init+0x1ee>
 8001474:	2300      	movs	r3, #0
 8001476:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001478:	f002 0203 	and.w	r2, r2, #3
 800147c:	0092      	lsls	r2, r2, #2
 800147e:	4093      	lsls	r3, r2
 8001480:	68fa      	ldr	r2, [r7, #12]
 8001482:	4313      	orrs	r3, r2
 8001484:	60fb      	str	r3, [r7, #12]
        AFIO->EXTICR[position >> 2u] = temp;
 8001486:	492f      	ldr	r1, [pc, #188]	; (8001544 <HAL_GPIO_Init+0x2bc>)
 8001488:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800148a:	089b      	lsrs	r3, r3, #2
 800148c:	3302      	adds	r3, #2
 800148e:	68fa      	ldr	r2, [r7, #12]
 8001490:	f841 2023 	str.w	r2, [r1, r3, lsl #2]


        /* Enable or disable the rising trigger */
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8001494:	683b      	ldr	r3, [r7, #0]
 8001496:	685b      	ldr	r3, [r3, #4]
 8001498:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800149c:	2b00      	cmp	r3, #0
 800149e:	d006      	beq.n	80014ae <HAL_GPIO_Init+0x226>
        {
          SET_BIT(EXTI->RTSR, iocurrent);
 80014a0:	4b2d      	ldr	r3, [pc, #180]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 80014a2:	689a      	ldr	r2, [r3, #8]
 80014a4:	492c      	ldr	r1, [pc, #176]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 80014a6:	69bb      	ldr	r3, [r7, #24]
 80014a8:	4313      	orrs	r3, r2
 80014aa:	608b      	str	r3, [r1, #8]
 80014ac:	e006      	b.n	80014bc <HAL_GPIO_Init+0x234>
        }
        else
        {
          CLEAR_BIT(EXTI->RTSR, iocurrent);
 80014ae:	4b2a      	ldr	r3, [pc, #168]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 80014b0:	689a      	ldr	r2, [r3, #8]
 80014b2:	69bb      	ldr	r3, [r7, #24]
 80014b4:	43db      	mvns	r3, r3
 80014b6:	4928      	ldr	r1, [pc, #160]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 80014b8:	4013      	ands	r3, r2
 80014ba:	608b      	str	r3, [r1, #8]
        }

        /* Enable or disable the falling trigger */
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80014bc:	683b      	ldr	r3, [r7, #0]
 80014be:	685b      	ldr	r3, [r3, #4]
 80014c0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80014c4:	2b00      	cmp	r3, #0
 80014c6:	d006      	beq.n	80014d6 <HAL_GPIO_Init+0x24e>
        {
          SET_BIT(EXTI->FTSR, iocurrent);
 80014c8:	4b23      	ldr	r3, [pc, #140]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 80014ca:	68da      	ldr	r2, [r3, #12]
 80014cc:	4922      	ldr	r1, [pc, #136]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 80014ce:	69bb      	ldr	r3, [r7, #24]
 80014d0:	4313      	orrs	r3, r2
 80014d2:	60cb      	str	r3, [r1, #12]
 80014d4:	e006      	b.n	80014e4 <HAL_GPIO_Init+0x25c>
        }
        else
        {
          CLEAR_BIT(EXTI->FTSR, iocurrent);
 80014d6:	4b20      	ldr	r3, [pc, #128]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 80014d8:	68da      	ldr	r2, [r3, #12]
 80014da:	69bb      	ldr	r3, [r7, #24]
 80014dc:	43db      	mvns	r3, r3
 80014de:	491e      	ldr	r1, [pc, #120]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 80014e0:	4013      	ands	r3, r2
 80014e2:	60cb      	str	r3, [r1, #12]
        }

        /* Configure the event mask */
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80014e4:	683b      	ldr	r3, [r7, #0]
 80014e6:	685b      	ldr	r3, [r3, #4]
 80014e8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80014ec:	2b00      	cmp	r3, #0
 80014ee:	d006      	beq.n	80014fe <HAL_GPIO_Init+0x276>
        {
          SET_BIT(EXTI->EMR, iocurrent);
 80014f0:	4b19      	ldr	r3, [pc, #100]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 80014f2:	685a      	ldr	r2, [r3, #4]
 80014f4:	4918      	ldr	r1, [pc, #96]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 80014f6:	69bb      	ldr	r3, [r7, #24]
 80014f8:	4313      	orrs	r3, r2
 80014fa:	604b      	str	r3, [r1, #4]
 80014fc:	e006      	b.n	800150c <HAL_GPIO_Init+0x284>
        }
        else
        {
          CLEAR_BIT(EXTI->EMR, iocurrent);
 80014fe:	4b16      	ldr	r3, [pc, #88]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 8001500:	685a      	ldr	r2, [r3, #4]
 8001502:	69bb      	ldr	r3, [r7, #24]
 8001504:	43db      	mvns	r3, r3
 8001506:	4914      	ldr	r1, [pc, #80]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 8001508:	4013      	ands	r3, r2
 800150a:	604b      	str	r3, [r1, #4]
        }

        /* Configure the interrupt mask */
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800150c:	683b      	ldr	r3, [r7, #0]
 800150e:	685b      	ldr	r3, [r3, #4]
 8001510:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001514:	2b00      	cmp	r3, #0
 8001516:	d021      	beq.n	800155c <HAL_GPIO_Init+0x2d4>
        {
          SET_BIT(EXTI->IMR, iocurrent);
 8001518:	4b0f      	ldr	r3, [pc, #60]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 800151a:	681a      	ldr	r2, [r3, #0]
 800151c:	490e      	ldr	r1, [pc, #56]	; (8001558 <HAL_GPIO_Init+0x2d0>)
 800151e:	69bb      	ldr	r3, [r7, #24]
 8001520:	4313      	orrs	r3, r2
 8001522:	600b      	str	r3, [r1, #0]
 8001524:	e021      	b.n	800156a <HAL_GPIO_Init+0x2e2>
 8001526:	bf00      	nop
 8001528:	10320000 	.word	0x10320000
 800152c:	10310000 	.word	0x10310000
 8001530:	10220000 	.word	0x10220000
 8001534:	10210000 	.word	0x10210000
 8001538:	10120000 	.word	0x10120000
 800153c:	10110000 	.word	0x10110000
 8001540:	40021000 	.word	0x40021000
 8001544:	40010000 	.word	0x40010000
 8001548:	40010800 	.word	0x40010800
 800154c:	40010c00 	.word	0x40010c00
 8001550:	40011000 	.word	0x40011000
 8001554:	40011400 	.word	0x40011400
 8001558:	40010400 	.word	0x40010400
        }
        else
        {
          CLEAR_BIT(EXTI->IMR, iocurrent);
 800155c:	4b0b      	ldr	r3, [pc, #44]	; (800158c <HAL_GPIO_Init+0x304>)
 800155e:	681a      	ldr	r2, [r3, #0]
 8001560:	69bb      	ldr	r3, [r7, #24]
 8001562:	43db      	mvns	r3, r3
 8001564:	4909      	ldr	r1, [pc, #36]	; (800158c <HAL_GPIO_Init+0x304>)
 8001566:	4013      	ands	r3, r2
 8001568:	600b      	str	r3, [r1, #0]
        }
      }
    }

	position++;
 800156a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800156c:	3301      	adds	r3, #1
 800156e:	627b      	str	r3, [r7, #36]	; 0x24
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8001570:	683b      	ldr	r3, [r7, #0]
 8001572:	681a      	ldr	r2, [r3, #0]
 8001574:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001576:	fa22 f303 	lsr.w	r3, r2, r3
 800157a:	2b00      	cmp	r3, #0
 800157c:	f47f ae8e 	bne.w	800129c <HAL_GPIO_Init+0x14>
  }
}
 8001580:	bf00      	nop
 8001582:	bf00      	nop
 8001584:	372c      	adds	r7, #44	; 0x2c
 8001586:	46bd      	mov	sp, r7
 8001588:	bc80      	pop	{r7}
 800158a:	4770      	bx	lr
 800158c:	40010400 	.word	0x40010400

08001590 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8001590:	b480      	push	{r7}
 8001592:	b083      	sub	sp, #12
 8001594:	af00      	add	r7, sp, #0
 8001596:	6078      	str	r0, [r7, #4]
 8001598:	460b      	mov	r3, r1
 800159a:	807b      	strh	r3, [r7, #2]
 800159c:	4613      	mov	r3, r2
 800159e:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 80015a0:	787b      	ldrb	r3, [r7, #1]
 80015a2:	2b00      	cmp	r3, #0
 80015a4:	d003      	beq.n	80015ae <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80015a6:	887a      	ldrh	r2, [r7, #2]
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	611a      	str	r2, [r3, #16]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16u;
  }
}
 80015ac:	e003      	b.n	80015b6 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16u;
 80015ae:	887b      	ldrh	r3, [r7, #2]
 80015b0:	041a      	lsls	r2, r3, #16
 80015b2:	687b      	ldr	r3, [r7, #4]
 80015b4:	611a      	str	r2, [r3, #16]
}
 80015b6:	bf00      	nop
 80015b8:	370c      	adds	r7, #12
 80015ba:	46bd      	mov	sp, r7
 80015bc:	bc80      	pop	{r7}
 80015be:	4770      	bx	lr

080015c0 <HAL_GPIO_TogglePin>:
  * @param  GPIOx: where x can be (A..G depending on device used) to select the GPIO peripheral
  * @param  GPIO_Pin: Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 80015c0:	b480      	push	{r7}
 80015c2:	b085      	sub	sp, #20
 80015c4:	af00      	add	r7, sp, #0
 80015c6:	6078      	str	r0, [r7, #4]
 80015c8:	460b      	mov	r3, r1
 80015ca:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80015cc:	687b      	ldr	r3, [r7, #4]
 80015ce:	68db      	ldr	r3, [r3, #12]
 80015d0:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80015d2:	887a      	ldrh	r2, [r7, #2]
 80015d4:	68fb      	ldr	r3, [r7, #12]
 80015d6:	4013      	ands	r3, r2
 80015d8:	041a      	lsls	r2, r3, #16
 80015da:	68fb      	ldr	r3, [r7, #12]
 80015dc:	43d9      	mvns	r1, r3
 80015de:	887b      	ldrh	r3, [r7, #2]
 80015e0:	400b      	ands	r3, r1
 80015e2:	431a      	orrs	r2, r3
 80015e4:	687b      	ldr	r3, [r7, #4]
 80015e6:	611a      	str	r2, [r3, #16]
}
 80015e8:	bf00      	nop
 80015ea:	3714      	adds	r7, #20
 80015ec:	46bd      	mov	sp, r7
 80015ee:	bc80      	pop	{r7}
 80015f0:	4770      	bx	lr
	...

080015f4 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80015f4:	b580      	push	{r7, lr}
 80015f6:	b086      	sub	sp, #24
 80015f8:	af00      	add	r7, sp, #0
 80015fa:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 80015fc:	687b      	ldr	r3, [r7, #4]
 80015fe:	2b00      	cmp	r3, #0
 8001600:	d101      	bne.n	8001606 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8001602:	2301      	movs	r3, #1
 8001604:	e272      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001606:	687b      	ldr	r3, [r7, #4]
 8001608:	681b      	ldr	r3, [r3, #0]
 800160a:	f003 0301 	and.w	r3, r3, #1
 800160e:	2b00      	cmp	r3, #0
 8001610:	f000 8087 	beq.w	8001722 <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8001614:	4b92      	ldr	r3, [pc, #584]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 8001616:	685b      	ldr	r3, [r3, #4]
 8001618:	f003 030c 	and.w	r3, r3, #12
 800161c:	2b04      	cmp	r3, #4
 800161e:	d00c      	beq.n	800163a <HAL_RCC_OscConfig+0x46>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8001620:	4b8f      	ldr	r3, [pc, #572]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 8001622:	685b      	ldr	r3, [r3, #4]
 8001624:	f003 030c 	and.w	r3, r3, #12
 8001628:	2b08      	cmp	r3, #8
 800162a:	d112      	bne.n	8001652 <HAL_RCC_OscConfig+0x5e>
 800162c:	4b8c      	ldr	r3, [pc, #560]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 800162e:	685b      	ldr	r3, [r3, #4]
 8001630:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001634:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001638:	d10b      	bne.n	8001652 <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800163a:	4b89      	ldr	r3, [pc, #548]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 800163c:	681b      	ldr	r3, [r3, #0]
 800163e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001642:	2b00      	cmp	r3, #0
 8001644:	d06c      	beq.n	8001720 <HAL_RCC_OscConfig+0x12c>
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	685b      	ldr	r3, [r3, #4]
 800164a:	2b00      	cmp	r3, #0
 800164c:	d168      	bne.n	8001720 <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 800164e:	2301      	movs	r3, #1
 8001650:	e24c      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8001652:	687b      	ldr	r3, [r7, #4]
 8001654:	685b      	ldr	r3, [r3, #4]
 8001656:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800165a:	d106      	bne.n	800166a <HAL_RCC_OscConfig+0x76>
 800165c:	4b80      	ldr	r3, [pc, #512]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 800165e:	681b      	ldr	r3, [r3, #0]
 8001660:	4a7f      	ldr	r2, [pc, #508]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 8001662:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8001666:	6013      	str	r3, [r2, #0]
 8001668:	e02e      	b.n	80016c8 <HAL_RCC_OscConfig+0xd4>
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	685b      	ldr	r3, [r3, #4]
 800166e:	2b00      	cmp	r3, #0
 8001670:	d10c      	bne.n	800168c <HAL_RCC_OscConfig+0x98>
 8001672:	4b7b      	ldr	r3, [pc, #492]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 8001674:	681b      	ldr	r3, [r3, #0]
 8001676:	4a7a      	ldr	r2, [pc, #488]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 8001678:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800167c:	6013      	str	r3, [r2, #0]
 800167e:	4b78      	ldr	r3, [pc, #480]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 8001680:	681b      	ldr	r3, [r3, #0]
 8001682:	4a77      	ldr	r2, [pc, #476]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 8001684:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001688:	6013      	str	r3, [r2, #0]
 800168a:	e01d      	b.n	80016c8 <HAL_RCC_OscConfig+0xd4>
 800168c:	687b      	ldr	r3, [r7, #4]
 800168e:	685b      	ldr	r3, [r3, #4]
 8001690:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001694:	d10c      	bne.n	80016b0 <HAL_RCC_OscConfig+0xbc>
 8001696:	4b72      	ldr	r3, [pc, #456]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 8001698:	681b      	ldr	r3, [r3, #0]
 800169a:	4a71      	ldr	r2, [pc, #452]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 800169c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80016a0:	6013      	str	r3, [r2, #0]
 80016a2:	4b6f      	ldr	r3, [pc, #444]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 80016a4:	681b      	ldr	r3, [r3, #0]
 80016a6:	4a6e      	ldr	r2, [pc, #440]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 80016a8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80016ac:	6013      	str	r3, [r2, #0]
 80016ae:	e00b      	b.n	80016c8 <HAL_RCC_OscConfig+0xd4>
 80016b0:	4b6b      	ldr	r3, [pc, #428]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 80016b2:	681b      	ldr	r3, [r3, #0]
 80016b4:	4a6a      	ldr	r2, [pc, #424]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 80016b6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80016ba:	6013      	str	r3, [r2, #0]
 80016bc:	4b68      	ldr	r3, [pc, #416]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 80016be:	681b      	ldr	r3, [r3, #0]
 80016c0:	4a67      	ldr	r2, [pc, #412]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 80016c2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80016c6:	6013      	str	r3, [r2, #0]


      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	685b      	ldr	r3, [r3, #4]
 80016cc:	2b00      	cmp	r3, #0
 80016ce:	d013      	beq.n	80016f8 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80016d0:	f7ff fcc8 	bl	8001064 <HAL_GetTick>
 80016d4:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80016d6:	e008      	b.n	80016ea <HAL_RCC_OscConfig+0xf6>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80016d8:	f7ff fcc4 	bl	8001064 <HAL_GetTick>
 80016dc:	4602      	mov	r2, r0
 80016de:	693b      	ldr	r3, [r7, #16]
 80016e0:	1ad3      	subs	r3, r2, r3
 80016e2:	2b64      	cmp	r3, #100	; 0x64
 80016e4:	d901      	bls.n	80016ea <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 80016e6:	2303      	movs	r3, #3
 80016e8:	e200      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80016ea:	4b5d      	ldr	r3, [pc, #372]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 80016ec:	681b      	ldr	r3, [r3, #0]
 80016ee:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80016f2:	2b00      	cmp	r3, #0
 80016f4:	d0f0      	beq.n	80016d8 <HAL_RCC_OscConfig+0xe4>
 80016f6:	e014      	b.n	8001722 <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80016f8:	f7ff fcb4 	bl	8001064 <HAL_GetTick>
 80016fc:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80016fe:	e008      	b.n	8001712 <HAL_RCC_OscConfig+0x11e>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001700:	f7ff fcb0 	bl	8001064 <HAL_GetTick>
 8001704:	4602      	mov	r2, r0
 8001706:	693b      	ldr	r3, [r7, #16]
 8001708:	1ad3      	subs	r3, r2, r3
 800170a:	2b64      	cmp	r3, #100	; 0x64
 800170c:	d901      	bls.n	8001712 <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 800170e:	2303      	movs	r3, #3
 8001710:	e1ec      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8001712:	4b53      	ldr	r3, [pc, #332]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 8001714:	681b      	ldr	r3, [r3, #0]
 8001716:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800171a:	2b00      	cmp	r3, #0
 800171c:	d1f0      	bne.n	8001700 <HAL_RCC_OscConfig+0x10c>
 800171e:	e000      	b.n	8001722 <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8001720:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8001722:	687b      	ldr	r3, [r7, #4]
 8001724:	681b      	ldr	r3, [r3, #0]
 8001726:	f003 0302 	and.w	r3, r3, #2
 800172a:	2b00      	cmp	r3, #0
 800172c:	d063      	beq.n	80017f6 <HAL_RCC_OscConfig+0x202>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 800172e:	4b4c      	ldr	r3, [pc, #304]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 8001730:	685b      	ldr	r3, [r3, #4]
 8001732:	f003 030c 	and.w	r3, r3, #12
 8001736:	2b00      	cmp	r3, #0
 8001738:	d00b      	beq.n	8001752 <HAL_RCC_OscConfig+0x15e>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI_DIV2)))
 800173a:	4b49      	ldr	r3, [pc, #292]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 800173c:	685b      	ldr	r3, [r3, #4]
 800173e:	f003 030c 	and.w	r3, r3, #12
 8001742:	2b08      	cmp	r3, #8
 8001744:	d11c      	bne.n	8001780 <HAL_RCC_OscConfig+0x18c>
 8001746:	4b46      	ldr	r3, [pc, #280]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 8001748:	685b      	ldr	r3, [r3, #4]
 800174a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800174e:	2b00      	cmp	r3, #0
 8001750:	d116      	bne.n	8001780 <HAL_RCC_OscConfig+0x18c>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8001752:	4b43      	ldr	r3, [pc, #268]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 8001754:	681b      	ldr	r3, [r3, #0]
 8001756:	f003 0302 	and.w	r3, r3, #2
 800175a:	2b00      	cmp	r3, #0
 800175c:	d005      	beq.n	800176a <HAL_RCC_OscConfig+0x176>
 800175e:	687b      	ldr	r3, [r7, #4]
 8001760:	691b      	ldr	r3, [r3, #16]
 8001762:	2b01      	cmp	r3, #1
 8001764:	d001      	beq.n	800176a <HAL_RCC_OscConfig+0x176>
      {
        return HAL_ERROR;
 8001766:	2301      	movs	r3, #1
 8001768:	e1c0      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800176a:	4b3d      	ldr	r3, [pc, #244]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 800176c:	681b      	ldr	r3, [r3, #0]
 800176e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	695b      	ldr	r3, [r3, #20]
 8001776:	00db      	lsls	r3, r3, #3
 8001778:	4939      	ldr	r1, [pc, #228]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 800177a:	4313      	orrs	r3, r2
 800177c:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800177e:	e03a      	b.n	80017f6 <HAL_RCC_OscConfig+0x202>
      }
    }
    else
    {
      /* Check the HSI State */
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8001780:	687b      	ldr	r3, [r7, #4]
 8001782:	691b      	ldr	r3, [r3, #16]
 8001784:	2b00      	cmp	r3, #0
 8001786:	d020      	beq.n	80017ca <HAL_RCC_OscConfig+0x1d6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8001788:	4b36      	ldr	r3, [pc, #216]	; (8001864 <HAL_RCC_OscConfig+0x270>)
 800178a:	2201      	movs	r2, #1
 800178c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800178e:	f7ff fc69 	bl	8001064 <HAL_GetTick>
 8001792:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001794:	e008      	b.n	80017a8 <HAL_RCC_OscConfig+0x1b4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001796:	f7ff fc65 	bl	8001064 <HAL_GetTick>
 800179a:	4602      	mov	r2, r0
 800179c:	693b      	ldr	r3, [r7, #16]
 800179e:	1ad3      	subs	r3, r2, r3
 80017a0:	2b02      	cmp	r3, #2
 80017a2:	d901      	bls.n	80017a8 <HAL_RCC_OscConfig+0x1b4>
          {
            return HAL_TIMEOUT;
 80017a4:	2303      	movs	r3, #3
 80017a6:	e1a1      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80017a8:	4b2d      	ldr	r3, [pc, #180]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 80017aa:	681b      	ldr	r3, [r3, #0]
 80017ac:	f003 0302 	and.w	r3, r3, #2
 80017b0:	2b00      	cmp	r3, #0
 80017b2:	d0f0      	beq.n	8001796 <HAL_RCC_OscConfig+0x1a2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80017b4:	4b2a      	ldr	r3, [pc, #168]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 80017b6:	681b      	ldr	r3, [r3, #0]
 80017b8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80017bc:	687b      	ldr	r3, [r7, #4]
 80017be:	695b      	ldr	r3, [r3, #20]
 80017c0:	00db      	lsls	r3, r3, #3
 80017c2:	4927      	ldr	r1, [pc, #156]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 80017c4:	4313      	orrs	r3, r2
 80017c6:	600b      	str	r3, [r1, #0]
 80017c8:	e015      	b.n	80017f6 <HAL_RCC_OscConfig+0x202>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80017ca:	4b26      	ldr	r3, [pc, #152]	; (8001864 <HAL_RCC_OscConfig+0x270>)
 80017cc:	2200      	movs	r2, #0
 80017ce:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80017d0:	f7ff fc48 	bl	8001064 <HAL_GetTick>
 80017d4:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80017d6:	e008      	b.n	80017ea <HAL_RCC_OscConfig+0x1f6>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80017d8:	f7ff fc44 	bl	8001064 <HAL_GetTick>
 80017dc:	4602      	mov	r2, r0
 80017de:	693b      	ldr	r3, [r7, #16]
 80017e0:	1ad3      	subs	r3, r2, r3
 80017e2:	2b02      	cmp	r3, #2
 80017e4:	d901      	bls.n	80017ea <HAL_RCC_OscConfig+0x1f6>
          {
            return HAL_TIMEOUT;
 80017e6:	2303      	movs	r3, #3
 80017e8:	e180      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80017ea:	4b1d      	ldr	r3, [pc, #116]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 80017ec:	681b      	ldr	r3, [r3, #0]
 80017ee:	f003 0302 	and.w	r3, r3, #2
 80017f2:	2b00      	cmp	r3, #0
 80017f4:	d1f0      	bne.n	80017d8 <HAL_RCC_OscConfig+0x1e4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	681b      	ldr	r3, [r3, #0]
 80017fa:	f003 0308 	and.w	r3, r3, #8
 80017fe:	2b00      	cmp	r3, #0
 8001800:	d03a      	beq.n	8001878 <HAL_RCC_OscConfig+0x284>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	699b      	ldr	r3, [r3, #24]
 8001806:	2b00      	cmp	r3, #0
 8001808:	d019      	beq.n	800183e <HAL_RCC_OscConfig+0x24a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800180a:	4b17      	ldr	r3, [pc, #92]	; (8001868 <HAL_RCC_OscConfig+0x274>)
 800180c:	2201      	movs	r2, #1
 800180e:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001810:	f7ff fc28 	bl	8001064 <HAL_GetTick>
 8001814:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8001816:	e008      	b.n	800182a <HAL_RCC_OscConfig+0x236>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001818:	f7ff fc24 	bl	8001064 <HAL_GetTick>
 800181c:	4602      	mov	r2, r0
 800181e:	693b      	ldr	r3, [r7, #16]
 8001820:	1ad3      	subs	r3, r2, r3
 8001822:	2b02      	cmp	r3, #2
 8001824:	d901      	bls.n	800182a <HAL_RCC_OscConfig+0x236>
        {
          return HAL_TIMEOUT;
 8001826:	2303      	movs	r3, #3
 8001828:	e160      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800182a:	4b0d      	ldr	r3, [pc, #52]	; (8001860 <HAL_RCC_OscConfig+0x26c>)
 800182c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800182e:	f003 0302 	and.w	r3, r3, #2
 8001832:	2b00      	cmp	r3, #0
 8001834:	d0f0      	beq.n	8001818 <HAL_RCC_OscConfig+0x224>
        }
      }
      /*  To have a fully stabilized clock in the specified range, a software delay of 1ms
          should be added.*/
      RCC_Delay(1);
 8001836:	2001      	movs	r0, #1
 8001838:	f000 fa9c 	bl	8001d74 <RCC_Delay>
 800183c:	e01c      	b.n	8001878 <HAL_RCC_OscConfig+0x284>
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 800183e:	4b0a      	ldr	r3, [pc, #40]	; (8001868 <HAL_RCC_OscConfig+0x274>)
 8001840:	2200      	movs	r2, #0
 8001842:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001844:	f7ff fc0e 	bl	8001064 <HAL_GetTick>
 8001848:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800184a:	e00f      	b.n	800186c <HAL_RCC_OscConfig+0x278>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 800184c:	f7ff fc0a 	bl	8001064 <HAL_GetTick>
 8001850:	4602      	mov	r2, r0
 8001852:	693b      	ldr	r3, [r7, #16]
 8001854:	1ad3      	subs	r3, r2, r3
 8001856:	2b02      	cmp	r3, #2
 8001858:	d908      	bls.n	800186c <HAL_RCC_OscConfig+0x278>
        {
          return HAL_TIMEOUT;
 800185a:	2303      	movs	r3, #3
 800185c:	e146      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
 800185e:	bf00      	nop
 8001860:	40021000 	.word	0x40021000
 8001864:	42420000 	.word	0x42420000
 8001868:	42420480 	.word	0x42420480
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800186c:	4b92      	ldr	r3, [pc, #584]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 800186e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001870:	f003 0302 	and.w	r3, r3, #2
 8001874:	2b00      	cmp	r3, #0
 8001876:	d1e9      	bne.n	800184c <HAL_RCC_OscConfig+0x258>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8001878:	687b      	ldr	r3, [r7, #4]
 800187a:	681b      	ldr	r3, [r3, #0]
 800187c:	f003 0304 	and.w	r3, r3, #4
 8001880:	2b00      	cmp	r3, #0
 8001882:	f000 80a6 	beq.w	80019d2 <HAL_RCC_OscConfig+0x3de>
  {
    FlagStatus       pwrclkchanged = RESET;
 8001886:	2300      	movs	r3, #0
 8001888:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800188a:	4b8b      	ldr	r3, [pc, #556]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 800188c:	69db      	ldr	r3, [r3, #28]
 800188e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001892:	2b00      	cmp	r3, #0
 8001894:	d10d      	bne.n	80018b2 <HAL_RCC_OscConfig+0x2be>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8001896:	4b88      	ldr	r3, [pc, #544]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001898:	69db      	ldr	r3, [r3, #28]
 800189a:	4a87      	ldr	r2, [pc, #540]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 800189c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80018a0:	61d3      	str	r3, [r2, #28]
 80018a2:	4b85      	ldr	r3, [pc, #532]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 80018a4:	69db      	ldr	r3, [r3, #28]
 80018a6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80018aa:	60bb      	str	r3, [r7, #8]
 80018ac:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 80018ae:	2301      	movs	r3, #1
 80018b0:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80018b2:	4b82      	ldr	r3, [pc, #520]	; (8001abc <HAL_RCC_OscConfig+0x4c8>)
 80018b4:	681b      	ldr	r3, [r3, #0]
 80018b6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80018ba:	2b00      	cmp	r3, #0
 80018bc:	d118      	bne.n	80018f0 <HAL_RCC_OscConfig+0x2fc>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80018be:	4b7f      	ldr	r3, [pc, #508]	; (8001abc <HAL_RCC_OscConfig+0x4c8>)
 80018c0:	681b      	ldr	r3, [r3, #0]
 80018c2:	4a7e      	ldr	r2, [pc, #504]	; (8001abc <HAL_RCC_OscConfig+0x4c8>)
 80018c4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80018c8:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80018ca:	f7ff fbcb 	bl	8001064 <HAL_GetTick>
 80018ce:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80018d0:	e008      	b.n	80018e4 <HAL_RCC_OscConfig+0x2f0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80018d2:	f7ff fbc7 	bl	8001064 <HAL_GetTick>
 80018d6:	4602      	mov	r2, r0
 80018d8:	693b      	ldr	r3, [r7, #16]
 80018da:	1ad3      	subs	r3, r2, r3
 80018dc:	2b64      	cmp	r3, #100	; 0x64
 80018de:	d901      	bls.n	80018e4 <HAL_RCC_OscConfig+0x2f0>
        {
          return HAL_TIMEOUT;
 80018e0:	2303      	movs	r3, #3
 80018e2:	e103      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80018e4:	4b75      	ldr	r3, [pc, #468]	; (8001abc <HAL_RCC_OscConfig+0x4c8>)
 80018e6:	681b      	ldr	r3, [r3, #0]
 80018e8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80018ec:	2b00      	cmp	r3, #0
 80018ee:	d0f0      	beq.n	80018d2 <HAL_RCC_OscConfig+0x2de>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80018f0:	687b      	ldr	r3, [r7, #4]
 80018f2:	68db      	ldr	r3, [r3, #12]
 80018f4:	2b01      	cmp	r3, #1
 80018f6:	d106      	bne.n	8001906 <HAL_RCC_OscConfig+0x312>
 80018f8:	4b6f      	ldr	r3, [pc, #444]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 80018fa:	6a1b      	ldr	r3, [r3, #32]
 80018fc:	4a6e      	ldr	r2, [pc, #440]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 80018fe:	f043 0301 	orr.w	r3, r3, #1
 8001902:	6213      	str	r3, [r2, #32]
 8001904:	e02d      	b.n	8001962 <HAL_RCC_OscConfig+0x36e>
 8001906:	687b      	ldr	r3, [r7, #4]
 8001908:	68db      	ldr	r3, [r3, #12]
 800190a:	2b00      	cmp	r3, #0
 800190c:	d10c      	bne.n	8001928 <HAL_RCC_OscConfig+0x334>
 800190e:	4b6a      	ldr	r3, [pc, #424]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001910:	6a1b      	ldr	r3, [r3, #32]
 8001912:	4a69      	ldr	r2, [pc, #420]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001914:	f023 0301 	bic.w	r3, r3, #1
 8001918:	6213      	str	r3, [r2, #32]
 800191a:	4b67      	ldr	r3, [pc, #412]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 800191c:	6a1b      	ldr	r3, [r3, #32]
 800191e:	4a66      	ldr	r2, [pc, #408]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001920:	f023 0304 	bic.w	r3, r3, #4
 8001924:	6213      	str	r3, [r2, #32]
 8001926:	e01c      	b.n	8001962 <HAL_RCC_OscConfig+0x36e>
 8001928:	687b      	ldr	r3, [r7, #4]
 800192a:	68db      	ldr	r3, [r3, #12]
 800192c:	2b05      	cmp	r3, #5
 800192e:	d10c      	bne.n	800194a <HAL_RCC_OscConfig+0x356>
 8001930:	4b61      	ldr	r3, [pc, #388]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001932:	6a1b      	ldr	r3, [r3, #32]
 8001934:	4a60      	ldr	r2, [pc, #384]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001936:	f043 0304 	orr.w	r3, r3, #4
 800193a:	6213      	str	r3, [r2, #32]
 800193c:	4b5e      	ldr	r3, [pc, #376]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 800193e:	6a1b      	ldr	r3, [r3, #32]
 8001940:	4a5d      	ldr	r2, [pc, #372]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001942:	f043 0301 	orr.w	r3, r3, #1
 8001946:	6213      	str	r3, [r2, #32]
 8001948:	e00b      	b.n	8001962 <HAL_RCC_OscConfig+0x36e>
 800194a:	4b5b      	ldr	r3, [pc, #364]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 800194c:	6a1b      	ldr	r3, [r3, #32]
 800194e:	4a5a      	ldr	r2, [pc, #360]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001950:	f023 0301 	bic.w	r3, r3, #1
 8001954:	6213      	str	r3, [r2, #32]
 8001956:	4b58      	ldr	r3, [pc, #352]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001958:	6a1b      	ldr	r3, [r3, #32]
 800195a:	4a57      	ldr	r2, [pc, #348]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 800195c:	f023 0304 	bic.w	r3, r3, #4
 8001960:	6213      	str	r3, [r2, #32]
    /* Check the LSE State */
    if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	68db      	ldr	r3, [r3, #12]
 8001966:	2b00      	cmp	r3, #0
 8001968:	d015      	beq.n	8001996 <HAL_RCC_OscConfig+0x3a2>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800196a:	f7ff fb7b 	bl	8001064 <HAL_GetTick>
 800196e:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001970:	e00a      	b.n	8001988 <HAL_RCC_OscConfig+0x394>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001972:	f7ff fb77 	bl	8001064 <HAL_GetTick>
 8001976:	4602      	mov	r2, r0
 8001978:	693b      	ldr	r3, [r7, #16]
 800197a:	1ad3      	subs	r3, r2, r3
 800197c:	f241 3288 	movw	r2, #5000	; 0x1388
 8001980:	4293      	cmp	r3, r2
 8001982:	d901      	bls.n	8001988 <HAL_RCC_OscConfig+0x394>
        {
          return HAL_TIMEOUT;
 8001984:	2303      	movs	r3, #3
 8001986:	e0b1      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001988:	4b4b      	ldr	r3, [pc, #300]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 800198a:	6a1b      	ldr	r3, [r3, #32]
 800198c:	f003 0302 	and.w	r3, r3, #2
 8001990:	2b00      	cmp	r3, #0
 8001992:	d0ee      	beq.n	8001972 <HAL_RCC_OscConfig+0x37e>
 8001994:	e014      	b.n	80019c0 <HAL_RCC_OscConfig+0x3cc>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001996:	f7ff fb65 	bl	8001064 <HAL_GetTick>
 800199a:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800199c:	e00a      	b.n	80019b4 <HAL_RCC_OscConfig+0x3c0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800199e:	f7ff fb61 	bl	8001064 <HAL_GetTick>
 80019a2:	4602      	mov	r2, r0
 80019a4:	693b      	ldr	r3, [r7, #16]
 80019a6:	1ad3      	subs	r3, r2, r3
 80019a8:	f241 3288 	movw	r2, #5000	; 0x1388
 80019ac:	4293      	cmp	r3, r2
 80019ae:	d901      	bls.n	80019b4 <HAL_RCC_OscConfig+0x3c0>
        {
          return HAL_TIMEOUT;
 80019b0:	2303      	movs	r3, #3
 80019b2:	e09b      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80019b4:	4b40      	ldr	r3, [pc, #256]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 80019b6:	6a1b      	ldr	r3, [r3, #32]
 80019b8:	f003 0302 	and.w	r3, r3, #2
 80019bc:	2b00      	cmp	r3, #0
 80019be:	d1ee      	bne.n	800199e <HAL_RCC_OscConfig+0x3aa>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if (pwrclkchanged == SET)
 80019c0:	7dfb      	ldrb	r3, [r7, #23]
 80019c2:	2b01      	cmp	r3, #1
 80019c4:	d105      	bne.n	80019d2 <HAL_RCC_OscConfig+0x3de>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80019c6:	4b3c      	ldr	r3, [pc, #240]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 80019c8:	69db      	ldr	r3, [r3, #28]
 80019ca:	4a3b      	ldr	r2, [pc, #236]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 80019cc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80019d0:	61d3      	str	r3, [r2, #28]

#endif /* RCC_CR_PLL2ON */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80019d2:	687b      	ldr	r3, [r7, #4]
 80019d4:	69db      	ldr	r3, [r3, #28]
 80019d6:	2b00      	cmp	r3, #0
 80019d8:	f000 8087 	beq.w	8001aea <HAL_RCC_OscConfig+0x4f6>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80019dc:	4b36      	ldr	r3, [pc, #216]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 80019de:	685b      	ldr	r3, [r3, #4]
 80019e0:	f003 030c 	and.w	r3, r3, #12
 80019e4:	2b08      	cmp	r3, #8
 80019e6:	d061      	beq.n	8001aac <HAL_RCC_OscConfig+0x4b8>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80019e8:	687b      	ldr	r3, [r7, #4]
 80019ea:	69db      	ldr	r3, [r3, #28]
 80019ec:	2b02      	cmp	r3, #2
 80019ee:	d146      	bne.n	8001a7e <HAL_RCC_OscConfig+0x48a>
        /* Check the parameters */
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80019f0:	4b33      	ldr	r3, [pc, #204]	; (8001ac0 <HAL_RCC_OscConfig+0x4cc>)
 80019f2:	2200      	movs	r2, #0
 80019f4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80019f6:	f7ff fb35 	bl	8001064 <HAL_GetTick>
 80019fa:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80019fc:	e008      	b.n	8001a10 <HAL_RCC_OscConfig+0x41c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80019fe:	f7ff fb31 	bl	8001064 <HAL_GetTick>
 8001a02:	4602      	mov	r2, r0
 8001a04:	693b      	ldr	r3, [r7, #16]
 8001a06:	1ad3      	subs	r3, r2, r3
 8001a08:	2b02      	cmp	r3, #2
 8001a0a:	d901      	bls.n	8001a10 <HAL_RCC_OscConfig+0x41c>
          {
            return HAL_TIMEOUT;
 8001a0c:	2303      	movs	r3, #3
 8001a0e:	e06d      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001a10:	4b29      	ldr	r3, [pc, #164]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001a12:	681b      	ldr	r3, [r3, #0]
 8001a14:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001a18:	2b00      	cmp	r3, #0
 8001a1a:	d1f0      	bne.n	80019fe <HAL_RCC_OscConfig+0x40a>
          }
        }

        /* Configure the HSE prediv factor --------------------------------*/
        /* It can be written only when the PLL is disabled. Not used in PLL source is different than HSE */
        if (RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 8001a1c:	687b      	ldr	r3, [r7, #4]
 8001a1e:	6a1b      	ldr	r3, [r3, #32]
 8001a20:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001a24:	d108      	bne.n	8001a38 <HAL_RCC_OscConfig+0x444>
          /* Set PREDIV1 source */
          SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
#endif /* RCC_CFGR2_PREDIV1SRC */

          /* Set PREDIV1 Value */
          __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 8001a26:	4b24      	ldr	r3, [pc, #144]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001a28:	685b      	ldr	r3, [r3, #4]
 8001a2a:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	689b      	ldr	r3, [r3, #8]
 8001a32:	4921      	ldr	r1, [pc, #132]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001a34:	4313      	orrs	r3, r2
 8001a36:	604b      	str	r3, [r1, #4]
        }

        /* Configure the main PLL clock source and multiplication factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001a38:	4b1f      	ldr	r3, [pc, #124]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001a3a:	685b      	ldr	r3, [r3, #4]
 8001a3c:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 8001a40:	687b      	ldr	r3, [r7, #4]
 8001a42:	6a19      	ldr	r1, [r3, #32]
 8001a44:	687b      	ldr	r3, [r7, #4]
 8001a46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001a48:	430b      	orrs	r3, r1
 8001a4a:	491b      	ldr	r1, [pc, #108]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001a4c:	4313      	orrs	r3, r2
 8001a4e:	604b      	str	r3, [r1, #4]
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8001a50:	4b1b      	ldr	r3, [pc, #108]	; (8001ac0 <HAL_RCC_OscConfig+0x4cc>)
 8001a52:	2201      	movs	r2, #1
 8001a54:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001a56:	f7ff fb05 	bl	8001064 <HAL_GetTick>
 8001a5a:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8001a5c:	e008      	b.n	8001a70 <HAL_RCC_OscConfig+0x47c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001a5e:	f7ff fb01 	bl	8001064 <HAL_GetTick>
 8001a62:	4602      	mov	r2, r0
 8001a64:	693b      	ldr	r3, [r7, #16]
 8001a66:	1ad3      	subs	r3, r2, r3
 8001a68:	2b02      	cmp	r3, #2
 8001a6a:	d901      	bls.n	8001a70 <HAL_RCC_OscConfig+0x47c>
          {
            return HAL_TIMEOUT;
 8001a6c:	2303      	movs	r3, #3
 8001a6e:	e03d      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8001a70:	4b11      	ldr	r3, [pc, #68]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001a72:	681b      	ldr	r3, [r3, #0]
 8001a74:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001a78:	2b00      	cmp	r3, #0
 8001a7a:	d0f0      	beq.n	8001a5e <HAL_RCC_OscConfig+0x46a>
 8001a7c:	e035      	b.n	8001aea <HAL_RCC_OscConfig+0x4f6>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001a7e:	4b10      	ldr	r3, [pc, #64]	; (8001ac0 <HAL_RCC_OscConfig+0x4cc>)
 8001a80:	2200      	movs	r2, #0
 8001a82:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001a84:	f7ff faee 	bl	8001064 <HAL_GetTick>
 8001a88:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001a8a:	e008      	b.n	8001a9e <HAL_RCC_OscConfig+0x4aa>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001a8c:	f7ff faea 	bl	8001064 <HAL_GetTick>
 8001a90:	4602      	mov	r2, r0
 8001a92:	693b      	ldr	r3, [r7, #16]
 8001a94:	1ad3      	subs	r3, r2, r3
 8001a96:	2b02      	cmp	r3, #2
 8001a98:	d901      	bls.n	8001a9e <HAL_RCC_OscConfig+0x4aa>
          {
            return HAL_TIMEOUT;
 8001a9a:	2303      	movs	r3, #3
 8001a9c:	e026      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8001a9e:	4b06      	ldr	r3, [pc, #24]	; (8001ab8 <HAL_RCC_OscConfig+0x4c4>)
 8001aa0:	681b      	ldr	r3, [r3, #0]
 8001aa2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001aa6:	2b00      	cmp	r3, #0
 8001aa8:	d1f0      	bne.n	8001a8c <HAL_RCC_OscConfig+0x498>
 8001aaa:	e01e      	b.n	8001aea <HAL_RCC_OscConfig+0x4f6>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8001aac:	687b      	ldr	r3, [r7, #4]
 8001aae:	69db      	ldr	r3, [r3, #28]
 8001ab0:	2b01      	cmp	r3, #1
 8001ab2:	d107      	bne.n	8001ac4 <HAL_RCC_OscConfig+0x4d0>
      {
        return HAL_ERROR;
 8001ab4:	2301      	movs	r3, #1
 8001ab6:	e019      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
 8001ab8:	40021000 	.word	0x40021000
 8001abc:	40007000 	.word	0x40007000
 8001ac0:	42420060 	.word	0x42420060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8001ac4:	4b0b      	ldr	r3, [pc, #44]	; (8001af4 <HAL_RCC_OscConfig+0x500>)
 8001ac6:	685b      	ldr	r3, [r3, #4]
 8001ac8:	60fb      	str	r3, [r7, #12]
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001aca:	68fb      	ldr	r3, [r7, #12]
 8001acc:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001ad0:	687b      	ldr	r3, [r7, #4]
 8001ad2:	6a1b      	ldr	r3, [r3, #32]
 8001ad4:	429a      	cmp	r2, r3
 8001ad6:	d106      	bne.n	8001ae6 <HAL_RCC_OscConfig+0x4f2>
            (READ_BIT(pll_config, RCC_CFGR_PLLMULL) != RCC_OscInitStruct->PLL.PLLMUL))
 8001ad8:	68fb      	ldr	r3, [r7, #12]
 8001ada:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 8001ade:	687b      	ldr	r3, [r7, #4]
 8001ae0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001ae2:	429a      	cmp	r2, r3
 8001ae4:	d001      	beq.n	8001aea <HAL_RCC_OscConfig+0x4f6>
        {
          return HAL_ERROR;
 8001ae6:	2301      	movs	r3, #1
 8001ae8:	e000      	b.n	8001aec <HAL_RCC_OscConfig+0x4f8>
        }
      }
    }
  }

  return HAL_OK;
 8001aea:	2300      	movs	r3, #0
}
 8001aec:	4618      	mov	r0, r3
 8001aee:	3718      	adds	r7, #24
 8001af0:	46bd      	mov	sp, r7
 8001af2:	bd80      	pop	{r7, pc}
 8001af4:	40021000 	.word	0x40021000

08001af8 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8001af8:	b580      	push	{r7, lr}
 8001afa:	b084      	sub	sp, #16
 8001afc:	af00      	add	r7, sp, #0
 8001afe:	6078      	str	r0, [r7, #4]
 8001b00:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8001b02:	687b      	ldr	r3, [r7, #4]
 8001b04:	2b00      	cmp	r3, #0
 8001b06:	d101      	bne.n	8001b0c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8001b08:	2301      	movs	r3, #1
 8001b0a:	e0d0      	b.n	8001cae <HAL_RCC_ClockConfig+0x1b6>
  must be correctly programmed according to the frequency of the CPU clock
    (HCLK) of the device. */

#if defined(FLASH_ACR_LATENCY)
  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8001b0c:	4b6a      	ldr	r3, [pc, #424]	; (8001cb8 <HAL_RCC_ClockConfig+0x1c0>)
 8001b0e:	681b      	ldr	r3, [r3, #0]
 8001b10:	f003 0307 	and.w	r3, r3, #7
 8001b14:	683a      	ldr	r2, [r7, #0]
 8001b16:	429a      	cmp	r2, r3
 8001b18:	d910      	bls.n	8001b3c <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001b1a:	4b67      	ldr	r3, [pc, #412]	; (8001cb8 <HAL_RCC_ClockConfig+0x1c0>)
 8001b1c:	681b      	ldr	r3, [r3, #0]
 8001b1e:	f023 0207 	bic.w	r2, r3, #7
 8001b22:	4965      	ldr	r1, [pc, #404]	; (8001cb8 <HAL_RCC_ClockConfig+0x1c0>)
 8001b24:	683b      	ldr	r3, [r7, #0]
 8001b26:	4313      	orrs	r3, r2
 8001b28:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001b2a:	4b63      	ldr	r3, [pc, #396]	; (8001cb8 <HAL_RCC_ClockConfig+0x1c0>)
 8001b2c:	681b      	ldr	r3, [r3, #0]
 8001b2e:	f003 0307 	and.w	r3, r3, #7
 8001b32:	683a      	ldr	r2, [r7, #0]
 8001b34:	429a      	cmp	r2, r3
 8001b36:	d001      	beq.n	8001b3c <HAL_RCC_ClockConfig+0x44>
  {
    return HAL_ERROR;
 8001b38:	2301      	movs	r3, #1
 8001b3a:	e0b8      	b.n	8001cae <HAL_RCC_ClockConfig+0x1b6>
  }
}

#endif /* FLASH_ACR_LATENCY */
/*-------------------------- HCLK Configuration --------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001b3c:	687b      	ldr	r3, [r7, #4]
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	f003 0302 	and.w	r3, r3, #2
 8001b44:	2b00      	cmp	r3, #0
 8001b46:	d020      	beq.n	8001b8a <HAL_RCC_ClockConfig+0x92>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
    a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001b48:	687b      	ldr	r3, [r7, #4]
 8001b4a:	681b      	ldr	r3, [r3, #0]
 8001b4c:	f003 0304 	and.w	r3, r3, #4
 8001b50:	2b00      	cmp	r3, #0
 8001b52:	d005      	beq.n	8001b60 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8001b54:	4b59      	ldr	r3, [pc, #356]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001b56:	685b      	ldr	r3, [r3, #4]
 8001b58:	4a58      	ldr	r2, [pc, #352]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001b5a:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001b5e:	6053      	str	r3, [r2, #4]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	681b      	ldr	r3, [r3, #0]
 8001b64:	f003 0308 	and.w	r3, r3, #8
 8001b68:	2b00      	cmp	r3, #0
 8001b6a:	d005      	beq.n	8001b78 <HAL_RCC_ClockConfig+0x80>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8001b6c:	4b53      	ldr	r3, [pc, #332]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001b6e:	685b      	ldr	r3, [r3, #4]
 8001b70:	4a52      	ldr	r2, [pc, #328]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001b72:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001b76:	6053      	str	r3, [r2, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001b78:	4b50      	ldr	r3, [pc, #320]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001b7a:	685b      	ldr	r3, [r3, #4]
 8001b7c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001b80:	687b      	ldr	r3, [r7, #4]
 8001b82:	689b      	ldr	r3, [r3, #8]
 8001b84:	494d      	ldr	r1, [pc, #308]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001b86:	4313      	orrs	r3, r2
 8001b88:	604b      	str	r3, [r1, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001b8a:	687b      	ldr	r3, [r7, #4]
 8001b8c:	681b      	ldr	r3, [r3, #0]
 8001b8e:	f003 0301 	and.w	r3, r3, #1
 8001b92:	2b00      	cmp	r3, #0
 8001b94:	d040      	beq.n	8001c18 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001b96:	687b      	ldr	r3, [r7, #4]
 8001b98:	685b      	ldr	r3, [r3, #4]
 8001b9a:	2b01      	cmp	r3, #1
 8001b9c:	d107      	bne.n	8001bae <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001b9e:	4b47      	ldr	r3, [pc, #284]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001ba0:	681b      	ldr	r3, [r3, #0]
 8001ba2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001ba6:	2b00      	cmp	r3, #0
 8001ba8:	d115      	bne.n	8001bd6 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001baa:	2301      	movs	r3, #1
 8001bac:	e07f      	b.n	8001cae <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001bae:	687b      	ldr	r3, [r7, #4]
 8001bb0:	685b      	ldr	r3, [r3, #4]
 8001bb2:	2b02      	cmp	r3, #2
 8001bb4:	d107      	bne.n	8001bc6 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001bb6:	4b41      	ldr	r3, [pc, #260]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001bb8:	681b      	ldr	r3, [r3, #0]
 8001bba:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001bbe:	2b00      	cmp	r3, #0
 8001bc0:	d109      	bne.n	8001bd6 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001bc2:	2301      	movs	r3, #1
 8001bc4:	e073      	b.n	8001cae <HAL_RCC_ClockConfig+0x1b6>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001bc6:	4b3d      	ldr	r3, [pc, #244]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001bc8:	681b      	ldr	r3, [r3, #0]
 8001bca:	f003 0302 	and.w	r3, r3, #2
 8001bce:	2b00      	cmp	r3, #0
 8001bd0:	d101      	bne.n	8001bd6 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001bd2:	2301      	movs	r3, #1
 8001bd4:	e06b      	b.n	8001cae <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001bd6:	4b39      	ldr	r3, [pc, #228]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001bd8:	685b      	ldr	r3, [r3, #4]
 8001bda:	f023 0203 	bic.w	r2, r3, #3
 8001bde:	687b      	ldr	r3, [r7, #4]
 8001be0:	685b      	ldr	r3, [r3, #4]
 8001be2:	4936      	ldr	r1, [pc, #216]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001be4:	4313      	orrs	r3, r2
 8001be6:	604b      	str	r3, [r1, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8001be8:	f7ff fa3c 	bl	8001064 <HAL_GetTick>
 8001bec:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001bee:	e00a      	b.n	8001c06 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001bf0:	f7ff fa38 	bl	8001064 <HAL_GetTick>
 8001bf4:	4602      	mov	r2, r0
 8001bf6:	68fb      	ldr	r3, [r7, #12]
 8001bf8:	1ad3      	subs	r3, r2, r3
 8001bfa:	f241 3288 	movw	r2, #5000	; 0x1388
 8001bfe:	4293      	cmp	r3, r2
 8001c00:	d901      	bls.n	8001c06 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8001c02:	2303      	movs	r3, #3
 8001c04:	e053      	b.n	8001cae <HAL_RCC_ClockConfig+0x1b6>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001c06:	4b2d      	ldr	r3, [pc, #180]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001c08:	685b      	ldr	r3, [r3, #4]
 8001c0a:	f003 020c 	and.w	r2, r3, #12
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	685b      	ldr	r3, [r3, #4]
 8001c12:	009b      	lsls	r3, r3, #2
 8001c14:	429a      	cmp	r2, r3
 8001c16:	d1eb      	bne.n	8001bf0 <HAL_RCC_ClockConfig+0xf8>
    }
  }

#if defined(FLASH_ACR_LATENCY)
  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8001c18:	4b27      	ldr	r3, [pc, #156]	; (8001cb8 <HAL_RCC_ClockConfig+0x1c0>)
 8001c1a:	681b      	ldr	r3, [r3, #0]
 8001c1c:	f003 0307 	and.w	r3, r3, #7
 8001c20:	683a      	ldr	r2, [r7, #0]
 8001c22:	429a      	cmp	r2, r3
 8001c24:	d210      	bcs.n	8001c48 <HAL_RCC_ClockConfig+0x150>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001c26:	4b24      	ldr	r3, [pc, #144]	; (8001cb8 <HAL_RCC_ClockConfig+0x1c0>)
 8001c28:	681b      	ldr	r3, [r3, #0]
 8001c2a:	f023 0207 	bic.w	r2, r3, #7
 8001c2e:	4922      	ldr	r1, [pc, #136]	; (8001cb8 <HAL_RCC_ClockConfig+0x1c0>)
 8001c30:	683b      	ldr	r3, [r7, #0]
 8001c32:	4313      	orrs	r3, r2
 8001c34:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8001c36:	4b20      	ldr	r3, [pc, #128]	; (8001cb8 <HAL_RCC_ClockConfig+0x1c0>)
 8001c38:	681b      	ldr	r3, [r3, #0]
 8001c3a:	f003 0307 	and.w	r3, r3, #7
 8001c3e:	683a      	ldr	r2, [r7, #0]
 8001c40:	429a      	cmp	r2, r3
 8001c42:	d001      	beq.n	8001c48 <HAL_RCC_ClockConfig+0x150>
  {
    return HAL_ERROR;
 8001c44:	2301      	movs	r3, #1
 8001c46:	e032      	b.n	8001cae <HAL_RCC_ClockConfig+0x1b6>
  }
}
#endif /* FLASH_ACR_LATENCY */

/*-------------------------- PCLK1 Configuration ---------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001c48:	687b      	ldr	r3, [r7, #4]
 8001c4a:	681b      	ldr	r3, [r3, #0]
 8001c4c:	f003 0304 	and.w	r3, r3, #4
 8001c50:	2b00      	cmp	r3, #0
 8001c52:	d008      	beq.n	8001c66 <HAL_RCC_ClockConfig+0x16e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8001c54:	4b19      	ldr	r3, [pc, #100]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001c56:	685b      	ldr	r3, [r3, #4]
 8001c58:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001c5c:	687b      	ldr	r3, [r7, #4]
 8001c5e:	68db      	ldr	r3, [r3, #12]
 8001c60:	4916      	ldr	r1, [pc, #88]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001c62:	4313      	orrs	r3, r2
 8001c64:	604b      	str	r3, [r1, #4]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001c66:	687b      	ldr	r3, [r7, #4]
 8001c68:	681b      	ldr	r3, [r3, #0]
 8001c6a:	f003 0308 	and.w	r3, r3, #8
 8001c6e:	2b00      	cmp	r3, #0
 8001c70:	d009      	beq.n	8001c86 <HAL_RCC_ClockConfig+0x18e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8001c72:	4b12      	ldr	r3, [pc, #72]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001c74:	685b      	ldr	r3, [r3, #4]
 8001c76:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	691b      	ldr	r3, [r3, #16]
 8001c7e:	00db      	lsls	r3, r3, #3
 8001c80:	490e      	ldr	r1, [pc, #56]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001c82:	4313      	orrs	r3, r2
 8001c84:	604b      	str	r3, [r1, #4]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8001c86:	f000 f821 	bl	8001ccc <HAL_RCC_GetSysClockFreq>
 8001c8a:	4602      	mov	r2, r0
 8001c8c:	4b0b      	ldr	r3, [pc, #44]	; (8001cbc <HAL_RCC_ClockConfig+0x1c4>)
 8001c8e:	685b      	ldr	r3, [r3, #4]
 8001c90:	091b      	lsrs	r3, r3, #4
 8001c92:	f003 030f 	and.w	r3, r3, #15
 8001c96:	490a      	ldr	r1, [pc, #40]	; (8001cc0 <HAL_RCC_ClockConfig+0x1c8>)
 8001c98:	5ccb      	ldrb	r3, [r1, r3]
 8001c9a:	fa22 f303 	lsr.w	r3, r2, r3
 8001c9e:	4a09      	ldr	r2, [pc, #36]	; (8001cc4 <HAL_RCC_ClockConfig+0x1cc>)
 8001ca0:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 8001ca2:	4b09      	ldr	r3, [pc, #36]	; (8001cc8 <HAL_RCC_ClockConfig+0x1d0>)
 8001ca4:	681b      	ldr	r3, [r3, #0]
 8001ca6:	4618      	mov	r0, r3
 8001ca8:	f7ff f99a 	bl	8000fe0 <HAL_InitTick>

  return HAL_OK;
 8001cac:	2300      	movs	r3, #0
}
 8001cae:	4618      	mov	r0, r3
 8001cb0:	3710      	adds	r7, #16
 8001cb2:	46bd      	mov	sp, r7
 8001cb4:	bd80      	pop	{r7, pc}
 8001cb6:	bf00      	nop
 8001cb8:	40022000 	.word	0x40022000
 8001cbc:	40021000 	.word	0x40021000
 8001cc0:	08006538 	.word	0x08006538
 8001cc4:	20000000 	.word	0x20000000
 8001cc8:	20000004 	.word	0x20000004

08001ccc <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8001ccc:	b480      	push	{r7}
 8001cce:	b087      	sub	sp, #28
 8001cd0:	af00      	add	r7, sp, #0
#else
  static const uint8_t aPredivFactorTable[2U] = {1, 2};
#endif /*RCC_CFGR2_PREDIV1*/

#endif
  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8001cd2:	2300      	movs	r3, #0
 8001cd4:	60fb      	str	r3, [r7, #12]
 8001cd6:	2300      	movs	r3, #0
 8001cd8:	60bb      	str	r3, [r7, #8]
 8001cda:	2300      	movs	r3, #0
 8001cdc:	617b      	str	r3, [r7, #20]
 8001cde:	2300      	movs	r3, #0
 8001ce0:	607b      	str	r3, [r7, #4]
  uint32_t sysclockfreq = 0U;
 8001ce2:	2300      	movs	r3, #0
 8001ce4:	613b      	str	r3, [r7, #16]
#if defined(RCC_CFGR2_PREDIV1SRC)
  uint32_t prediv2 = 0U, pll2mul = 0U;
#endif /*RCC_CFGR2_PREDIV1SRC*/

  tmpreg = RCC->CFGR;
 8001ce6:	4b1e      	ldr	r3, [pc, #120]	; (8001d60 <HAL_RCC_GetSysClockFreq+0x94>)
 8001ce8:	685b      	ldr	r3, [r3, #4]
 8001cea:	60fb      	str	r3, [r7, #12]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8001cec:	68fb      	ldr	r3, [r7, #12]
 8001cee:	f003 030c 	and.w	r3, r3, #12
 8001cf2:	2b04      	cmp	r3, #4
 8001cf4:	d002      	beq.n	8001cfc <HAL_RCC_GetSysClockFreq+0x30>
 8001cf6:	2b08      	cmp	r3, #8
 8001cf8:	d003      	beq.n	8001d02 <HAL_RCC_GetSysClockFreq+0x36>
 8001cfa:	e027      	b.n	8001d4c <HAL_RCC_GetSysClockFreq+0x80>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8001cfc:	4b19      	ldr	r3, [pc, #100]	; (8001d64 <HAL_RCC_GetSysClockFreq+0x98>)
 8001cfe:	613b      	str	r3, [r7, #16]
      break;
 8001d00:	e027      	b.n	8001d52 <HAL_RCC_GetSysClockFreq+0x86>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 8001d02:	68fb      	ldr	r3, [r7, #12]
 8001d04:	0c9b      	lsrs	r3, r3, #18
 8001d06:	f003 030f 	and.w	r3, r3, #15
 8001d0a:	4a17      	ldr	r2, [pc, #92]	; (8001d68 <HAL_RCC_GetSysClockFreq+0x9c>)
 8001d0c:	5cd3      	ldrb	r3, [r2, r3]
 8001d0e:	607b      	str	r3, [r7, #4]
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 8001d10:	68fb      	ldr	r3, [r7, #12]
 8001d12:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001d16:	2b00      	cmp	r3, #0
 8001d18:	d010      	beq.n	8001d3c <HAL_RCC_GetSysClockFreq+0x70>
      {
#if defined(RCC_CFGR2_PREDIV1)
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1_Pos];
#else
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 8001d1a:	4b11      	ldr	r3, [pc, #68]	; (8001d60 <HAL_RCC_GetSysClockFreq+0x94>)
 8001d1c:	685b      	ldr	r3, [r3, #4]
 8001d1e:	0c5b      	lsrs	r3, r3, #17
 8001d20:	f003 0301 	and.w	r3, r3, #1
 8001d24:	4a11      	ldr	r2, [pc, #68]	; (8001d6c <HAL_RCC_GetSysClockFreq+0xa0>)
 8001d26:	5cd3      	ldrb	r3, [r2, r3]
 8001d28:	60bb      	str	r3, [r7, #8]
        {
          pllclk = pllclk / 2;
        }
#else
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 8001d2a:	687b      	ldr	r3, [r7, #4]
 8001d2c:	4a0d      	ldr	r2, [pc, #52]	; (8001d64 <HAL_RCC_GetSysClockFreq+0x98>)
 8001d2e:	fb03 f202 	mul.w	r2, r3, r2
 8001d32:	68bb      	ldr	r3, [r7, #8]
 8001d34:	fbb2 f3f3 	udiv	r3, r2, r3
 8001d38:	617b      	str	r3, [r7, #20]
 8001d3a:	e004      	b.n	8001d46 <HAL_RCC_GetSysClockFreq+0x7a>
#endif /*RCC_CFGR2_PREDIV1SRC*/
      }
      else
      {
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 8001d3c:	687b      	ldr	r3, [r7, #4]
 8001d3e:	4a0c      	ldr	r2, [pc, #48]	; (8001d70 <HAL_RCC_GetSysClockFreq+0xa4>)
 8001d40:	fb02 f303 	mul.w	r3, r2, r3
 8001d44:	617b      	str	r3, [r7, #20]
      }
      sysclockfreq = pllclk;
 8001d46:	697b      	ldr	r3, [r7, #20]
 8001d48:	613b      	str	r3, [r7, #16]
      break;
 8001d4a:	e002      	b.n	8001d52 <HAL_RCC_GetSysClockFreq+0x86>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8001d4c:	4b05      	ldr	r3, [pc, #20]	; (8001d64 <HAL_RCC_GetSysClockFreq+0x98>)
 8001d4e:	613b      	str	r3, [r7, #16]
      break;
 8001d50:	bf00      	nop
    }
  }
  return sysclockfreq;
 8001d52:	693b      	ldr	r3, [r7, #16]
}
 8001d54:	4618      	mov	r0, r3
 8001d56:	371c      	adds	r7, #28
 8001d58:	46bd      	mov	sp, r7
 8001d5a:	bc80      	pop	{r7}
 8001d5c:	4770      	bx	lr
 8001d5e:	bf00      	nop
 8001d60:	40021000 	.word	0x40021000
 8001d64:	007a1200 	.word	0x007a1200
 8001d68:	08006548 	.word	0x08006548
 8001d6c:	08006558 	.word	0x08006558
 8001d70:	003d0900 	.word	0x003d0900

08001d74 <RCC_Delay>:
  * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
  * @param  mdelay: specifies the delay time length, in milliseconds.
  * @retval None
  */
static void RCC_Delay(uint32_t mdelay)
{
 8001d74:	b480      	push	{r7}
 8001d76:	b085      	sub	sp, #20
 8001d78:	af00      	add	r7, sp, #0
 8001d7a:	6078      	str	r0, [r7, #4]
  __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 8001d7c:	4b0a      	ldr	r3, [pc, #40]	; (8001da8 <RCC_Delay+0x34>)
 8001d7e:	681b      	ldr	r3, [r3, #0]
 8001d80:	4a0a      	ldr	r2, [pc, #40]	; (8001dac <RCC_Delay+0x38>)
 8001d82:	fba2 2303 	umull	r2, r3, r2, r3
 8001d86:	0a5b      	lsrs	r3, r3, #9
 8001d88:	687a      	ldr	r2, [r7, #4]
 8001d8a:	fb02 f303 	mul.w	r3, r2, r3
 8001d8e:	60fb      	str	r3, [r7, #12]
  do
  {
    __NOP();
 8001d90:	bf00      	nop
  }
  while (Delay --);
 8001d92:	68fb      	ldr	r3, [r7, #12]
 8001d94:	1e5a      	subs	r2, r3, #1
 8001d96:	60fa      	str	r2, [r7, #12]
 8001d98:	2b00      	cmp	r3, #0
 8001d9a:	d1f9      	bne.n	8001d90 <RCC_Delay+0x1c>
}
 8001d9c:	bf00      	nop
 8001d9e:	bf00      	nop
 8001da0:	3714      	adds	r7, #20
 8001da2:	46bd      	mov	sp, r7
 8001da4:	bc80      	pop	{r7}
 8001da6:	4770      	bx	lr
 8001da8:	20000000 	.word	0x20000000
 8001dac:	10624dd3 	.word	0x10624dd3

08001db0 <__cvt>:
 8001db0:	2b00      	cmp	r3, #0
 8001db2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001db6:	461f      	mov	r7, r3
 8001db8:	bfbb      	ittet	lt
 8001dba:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8001dbe:	461f      	movlt	r7, r3
 8001dc0:	2300      	movge	r3, #0
 8001dc2:	232d      	movlt	r3, #45	; 0x2d
 8001dc4:	b088      	sub	sp, #32
 8001dc6:	4614      	mov	r4, r2
 8001dc8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001dca:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8001dcc:	7013      	strb	r3, [r2, #0]
 8001dce:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8001dd0:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 8001dd4:	f023 0820 	bic.w	r8, r3, #32
 8001dd8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001ddc:	d005      	beq.n	8001dea <__cvt+0x3a>
 8001dde:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8001de2:	d100      	bne.n	8001de6 <__cvt+0x36>
 8001de4:	3501      	adds	r5, #1
 8001de6:	2302      	movs	r3, #2
 8001de8:	e000      	b.n	8001dec <__cvt+0x3c>
 8001dea:	2303      	movs	r3, #3
 8001dec:	aa07      	add	r2, sp, #28
 8001dee:	9204      	str	r2, [sp, #16]
 8001df0:	aa06      	add	r2, sp, #24
 8001df2:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001df6:	e9cd 3500 	strd	r3, r5, [sp]
 8001dfa:	4622      	mov	r2, r4
 8001dfc:	463b      	mov	r3, r7
 8001dfe:	f001 f887 	bl	8002f10 <_dtoa_r>
 8001e02:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001e06:	4606      	mov	r6, r0
 8001e08:	d102      	bne.n	8001e10 <__cvt+0x60>
 8001e0a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8001e0c:	07db      	lsls	r3, r3, #31
 8001e0e:	d522      	bpl.n	8001e56 <__cvt+0xa6>
 8001e10:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001e14:	eb06 0905 	add.w	r9, r6, r5
 8001e18:	d110      	bne.n	8001e3c <__cvt+0x8c>
 8001e1a:	7833      	ldrb	r3, [r6, #0]
 8001e1c:	2b30      	cmp	r3, #48	; 0x30
 8001e1e:	d10a      	bne.n	8001e36 <__cvt+0x86>
 8001e20:	2200      	movs	r2, #0
 8001e22:	2300      	movs	r3, #0
 8001e24:	4620      	mov	r0, r4
 8001e26:	4639      	mov	r1, r7
 8001e28:	f7fe fdbe 	bl	80009a8 <__aeabi_dcmpeq>
 8001e2c:	b918      	cbnz	r0, 8001e36 <__cvt+0x86>
 8001e2e:	f1c5 0501 	rsb	r5, r5, #1
 8001e32:	f8ca 5000 	str.w	r5, [sl]
 8001e36:	f8da 3000 	ldr.w	r3, [sl]
 8001e3a:	4499      	add	r9, r3
 8001e3c:	2200      	movs	r2, #0
 8001e3e:	2300      	movs	r3, #0
 8001e40:	4620      	mov	r0, r4
 8001e42:	4639      	mov	r1, r7
 8001e44:	f7fe fdb0 	bl	80009a8 <__aeabi_dcmpeq>
 8001e48:	b108      	cbz	r0, 8001e4e <__cvt+0x9e>
 8001e4a:	f8cd 901c 	str.w	r9, [sp, #28]
 8001e4e:	2230      	movs	r2, #48	; 0x30
 8001e50:	9b07      	ldr	r3, [sp, #28]
 8001e52:	454b      	cmp	r3, r9
 8001e54:	d307      	bcc.n	8001e66 <__cvt+0xb6>
 8001e56:	4630      	mov	r0, r6
 8001e58:	9b07      	ldr	r3, [sp, #28]
 8001e5a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8001e5c:	1b9b      	subs	r3, r3, r6
 8001e5e:	6013      	str	r3, [r2, #0]
 8001e60:	b008      	add	sp, #32
 8001e62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e66:	1c59      	adds	r1, r3, #1
 8001e68:	9107      	str	r1, [sp, #28]
 8001e6a:	701a      	strb	r2, [r3, #0]
 8001e6c:	e7f0      	b.n	8001e50 <__cvt+0xa0>

08001e6e <__exponent>:
 8001e6e:	4603      	mov	r3, r0
 8001e70:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001e72:	2900      	cmp	r1, #0
 8001e74:	f803 2b02 	strb.w	r2, [r3], #2
 8001e78:	bfb6      	itet	lt
 8001e7a:	222d      	movlt	r2, #45	; 0x2d
 8001e7c:	222b      	movge	r2, #43	; 0x2b
 8001e7e:	4249      	neglt	r1, r1
 8001e80:	2909      	cmp	r1, #9
 8001e82:	7042      	strb	r2, [r0, #1]
 8001e84:	dd2a      	ble.n	8001edc <__exponent+0x6e>
 8001e86:	f10d 0207 	add.w	r2, sp, #7
 8001e8a:	4617      	mov	r7, r2
 8001e8c:	260a      	movs	r6, #10
 8001e8e:	fb91 f5f6 	sdiv	r5, r1, r6
 8001e92:	4694      	mov	ip, r2
 8001e94:	fb06 1415 	mls	r4, r6, r5, r1
 8001e98:	3430      	adds	r4, #48	; 0x30
 8001e9a:	f80c 4c01 	strb.w	r4, [ip, #-1]
 8001e9e:	460c      	mov	r4, r1
 8001ea0:	2c63      	cmp	r4, #99	; 0x63
 8001ea2:	4629      	mov	r1, r5
 8001ea4:	f102 32ff 	add.w	r2, r2, #4294967295
 8001ea8:	dcf1      	bgt.n	8001e8e <__exponent+0x20>
 8001eaa:	3130      	adds	r1, #48	; 0x30
 8001eac:	f1ac 0402 	sub.w	r4, ip, #2
 8001eb0:	f802 1c01 	strb.w	r1, [r2, #-1]
 8001eb4:	4622      	mov	r2, r4
 8001eb6:	1c41      	adds	r1, r0, #1
 8001eb8:	42ba      	cmp	r2, r7
 8001eba:	d30a      	bcc.n	8001ed2 <__exponent+0x64>
 8001ebc:	f10d 0209 	add.w	r2, sp, #9
 8001ec0:	eba2 020c 	sub.w	r2, r2, ip
 8001ec4:	42bc      	cmp	r4, r7
 8001ec6:	bf88      	it	hi
 8001ec8:	2200      	movhi	r2, #0
 8001eca:	4413      	add	r3, r2
 8001ecc:	1a18      	subs	r0, r3, r0
 8001ece:	b003      	add	sp, #12
 8001ed0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ed2:	f812 5b01 	ldrb.w	r5, [r2], #1
 8001ed6:	f801 5f01 	strb.w	r5, [r1, #1]!
 8001eda:	e7ed      	b.n	8001eb8 <__exponent+0x4a>
 8001edc:	2330      	movs	r3, #48	; 0x30
 8001ede:	3130      	adds	r1, #48	; 0x30
 8001ee0:	7083      	strb	r3, [r0, #2]
 8001ee2:	70c1      	strb	r1, [r0, #3]
 8001ee4:	1d03      	adds	r3, r0, #4
 8001ee6:	e7f1      	b.n	8001ecc <__exponent+0x5e>

08001ee8 <_printf_float>:
 8001ee8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001eec:	b091      	sub	sp, #68	; 0x44
 8001eee:	460c      	mov	r4, r1
 8001ef0:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8001ef4:	4616      	mov	r6, r2
 8001ef6:	461f      	mov	r7, r3
 8001ef8:	4605      	mov	r5, r0
 8001efa:	f000 fef3 	bl	8002ce4 <_localeconv_r>
 8001efe:	6803      	ldr	r3, [r0, #0]
 8001f00:	4618      	mov	r0, r3
 8001f02:	9309      	str	r3, [sp, #36]	; 0x24
 8001f04:	f7fe f924 	bl	8000150 <strlen>
 8001f08:	2300      	movs	r3, #0
 8001f0a:	930e      	str	r3, [sp, #56]	; 0x38
 8001f0c:	f8d8 3000 	ldr.w	r3, [r8]
 8001f10:	900a      	str	r0, [sp, #40]	; 0x28
 8001f12:	3307      	adds	r3, #7
 8001f14:	f023 0307 	bic.w	r3, r3, #7
 8001f18:	f103 0208 	add.w	r2, r3, #8
 8001f1c:	f894 9018 	ldrb.w	r9, [r4, #24]
 8001f20:	f8d4 b000 	ldr.w	fp, [r4]
 8001f24:	f8c8 2000 	str.w	r2, [r8]
 8001f28:	e9d3 a800 	ldrd	sl, r8, [r3]
 8001f2c:	4652      	mov	r2, sl
 8001f2e:	4643      	mov	r3, r8
 8001f30:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001f34:	f028 4300 	bic.w	r3, r8, #2147483648	; 0x80000000
 8001f38:	930b      	str	r3, [sp, #44]	; 0x2c
 8001f3a:	f04f 32ff 	mov.w	r2, #4294967295
 8001f3e:	4650      	mov	r0, sl
 8001f40:	4b9c      	ldr	r3, [pc, #624]	; (80021b4 <_printf_float+0x2cc>)
 8001f42:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001f44:	f7fe fd62 	bl	8000a0c <__aeabi_dcmpun>
 8001f48:	bb70      	cbnz	r0, 8001fa8 <_printf_float+0xc0>
 8001f4a:	f04f 32ff 	mov.w	r2, #4294967295
 8001f4e:	4650      	mov	r0, sl
 8001f50:	4b98      	ldr	r3, [pc, #608]	; (80021b4 <_printf_float+0x2cc>)
 8001f52:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001f54:	f7fe fd3c 	bl	80009d0 <__aeabi_dcmple>
 8001f58:	bb30      	cbnz	r0, 8001fa8 <_printf_float+0xc0>
 8001f5a:	2200      	movs	r2, #0
 8001f5c:	2300      	movs	r3, #0
 8001f5e:	4650      	mov	r0, sl
 8001f60:	4641      	mov	r1, r8
 8001f62:	f7fe fd2b 	bl	80009bc <__aeabi_dcmplt>
 8001f66:	b110      	cbz	r0, 8001f6e <_printf_float+0x86>
 8001f68:	232d      	movs	r3, #45	; 0x2d
 8001f6a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001f6e:	4a92      	ldr	r2, [pc, #584]	; (80021b8 <_printf_float+0x2d0>)
 8001f70:	4b92      	ldr	r3, [pc, #584]	; (80021bc <_printf_float+0x2d4>)
 8001f72:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 8001f76:	bf94      	ite	ls
 8001f78:	4690      	movls	r8, r2
 8001f7a:	4698      	movhi	r8, r3
 8001f7c:	2303      	movs	r3, #3
 8001f7e:	f04f 0a00 	mov.w	sl, #0
 8001f82:	6123      	str	r3, [r4, #16]
 8001f84:	f02b 0304 	bic.w	r3, fp, #4
 8001f88:	6023      	str	r3, [r4, #0]
 8001f8a:	4633      	mov	r3, r6
 8001f8c:	4621      	mov	r1, r4
 8001f8e:	4628      	mov	r0, r5
 8001f90:	9700      	str	r7, [sp, #0]
 8001f92:	aa0f      	add	r2, sp, #60	; 0x3c
 8001f94:	f000 f9d6 	bl	8002344 <_printf_common>
 8001f98:	3001      	adds	r0, #1
 8001f9a:	f040 8090 	bne.w	80020be <_printf_float+0x1d6>
 8001f9e:	f04f 30ff 	mov.w	r0, #4294967295
 8001fa2:	b011      	add	sp, #68	; 0x44
 8001fa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001fa8:	4652      	mov	r2, sl
 8001faa:	4643      	mov	r3, r8
 8001fac:	4650      	mov	r0, sl
 8001fae:	4641      	mov	r1, r8
 8001fb0:	f7fe fd2c 	bl	8000a0c <__aeabi_dcmpun>
 8001fb4:	b148      	cbz	r0, 8001fca <_printf_float+0xe2>
 8001fb6:	f1b8 0f00 	cmp.w	r8, #0
 8001fba:	bfb8      	it	lt
 8001fbc:	232d      	movlt	r3, #45	; 0x2d
 8001fbe:	4a80      	ldr	r2, [pc, #512]	; (80021c0 <_printf_float+0x2d8>)
 8001fc0:	bfb8      	it	lt
 8001fc2:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8001fc6:	4b7f      	ldr	r3, [pc, #508]	; (80021c4 <_printf_float+0x2dc>)
 8001fc8:	e7d3      	b.n	8001f72 <_printf_float+0x8a>
 8001fca:	6863      	ldr	r3, [r4, #4]
 8001fcc:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8001fd0:	1c5a      	adds	r2, r3, #1
 8001fd2:	d142      	bne.n	800205a <_printf_float+0x172>
 8001fd4:	2306      	movs	r3, #6
 8001fd6:	6063      	str	r3, [r4, #4]
 8001fd8:	2200      	movs	r2, #0
 8001fda:	9206      	str	r2, [sp, #24]
 8001fdc:	aa0e      	add	r2, sp, #56	; 0x38
 8001fde:	e9cd 9204 	strd	r9, r2, [sp, #16]
 8001fe2:	aa0d      	add	r2, sp, #52	; 0x34
 8001fe4:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 8001fe8:	9203      	str	r2, [sp, #12]
 8001fea:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 8001fee:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001ff2:	6023      	str	r3, [r4, #0]
 8001ff4:	6863      	ldr	r3, [r4, #4]
 8001ff6:	4652      	mov	r2, sl
 8001ff8:	9300      	str	r3, [sp, #0]
 8001ffa:	4628      	mov	r0, r5
 8001ffc:	4643      	mov	r3, r8
 8001ffe:	910b      	str	r1, [sp, #44]	; 0x2c
 8002000:	f7ff fed6 	bl	8001db0 <__cvt>
 8002004:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002006:	4680      	mov	r8, r0
 8002008:	2947      	cmp	r1, #71	; 0x47
 800200a:	990d      	ldr	r1, [sp, #52]	; 0x34
 800200c:	d108      	bne.n	8002020 <_printf_float+0x138>
 800200e:	1cc8      	adds	r0, r1, #3
 8002010:	db02      	blt.n	8002018 <_printf_float+0x130>
 8002012:	6863      	ldr	r3, [r4, #4]
 8002014:	4299      	cmp	r1, r3
 8002016:	dd40      	ble.n	800209a <_printf_float+0x1b2>
 8002018:	f1a9 0902 	sub.w	r9, r9, #2
 800201c:	fa5f f989 	uxtb.w	r9, r9
 8002020:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8002024:	d81f      	bhi.n	8002066 <_printf_float+0x17e>
 8002026:	464a      	mov	r2, r9
 8002028:	3901      	subs	r1, #1
 800202a:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800202e:	910d      	str	r1, [sp, #52]	; 0x34
 8002030:	f7ff ff1d 	bl	8001e6e <__exponent>
 8002034:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002036:	4682      	mov	sl, r0
 8002038:	1813      	adds	r3, r2, r0
 800203a:	2a01      	cmp	r2, #1
 800203c:	6123      	str	r3, [r4, #16]
 800203e:	dc02      	bgt.n	8002046 <_printf_float+0x15e>
 8002040:	6822      	ldr	r2, [r4, #0]
 8002042:	07d2      	lsls	r2, r2, #31
 8002044:	d501      	bpl.n	800204a <_printf_float+0x162>
 8002046:	3301      	adds	r3, #1
 8002048:	6123      	str	r3, [r4, #16]
 800204a:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800204e:	2b00      	cmp	r3, #0
 8002050:	d09b      	beq.n	8001f8a <_printf_float+0xa2>
 8002052:	232d      	movs	r3, #45	; 0x2d
 8002054:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002058:	e797      	b.n	8001f8a <_printf_float+0xa2>
 800205a:	2947      	cmp	r1, #71	; 0x47
 800205c:	d1bc      	bne.n	8001fd8 <_printf_float+0xf0>
 800205e:	2b00      	cmp	r3, #0
 8002060:	d1ba      	bne.n	8001fd8 <_printf_float+0xf0>
 8002062:	2301      	movs	r3, #1
 8002064:	e7b7      	b.n	8001fd6 <_printf_float+0xee>
 8002066:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 800206a:	d118      	bne.n	800209e <_printf_float+0x1b6>
 800206c:	2900      	cmp	r1, #0
 800206e:	6863      	ldr	r3, [r4, #4]
 8002070:	dd0b      	ble.n	800208a <_printf_float+0x1a2>
 8002072:	6121      	str	r1, [r4, #16]
 8002074:	b913      	cbnz	r3, 800207c <_printf_float+0x194>
 8002076:	6822      	ldr	r2, [r4, #0]
 8002078:	07d0      	lsls	r0, r2, #31
 800207a:	d502      	bpl.n	8002082 <_printf_float+0x19a>
 800207c:	3301      	adds	r3, #1
 800207e:	440b      	add	r3, r1
 8002080:	6123      	str	r3, [r4, #16]
 8002082:	f04f 0a00 	mov.w	sl, #0
 8002086:	65a1      	str	r1, [r4, #88]	; 0x58
 8002088:	e7df      	b.n	800204a <_printf_float+0x162>
 800208a:	b913      	cbnz	r3, 8002092 <_printf_float+0x1aa>
 800208c:	6822      	ldr	r2, [r4, #0]
 800208e:	07d2      	lsls	r2, r2, #31
 8002090:	d501      	bpl.n	8002096 <_printf_float+0x1ae>
 8002092:	3302      	adds	r3, #2
 8002094:	e7f4      	b.n	8002080 <_printf_float+0x198>
 8002096:	2301      	movs	r3, #1
 8002098:	e7f2      	b.n	8002080 <_printf_float+0x198>
 800209a:	f04f 0967 	mov.w	r9, #103	; 0x67
 800209e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80020a0:	4299      	cmp	r1, r3
 80020a2:	db05      	blt.n	80020b0 <_printf_float+0x1c8>
 80020a4:	6823      	ldr	r3, [r4, #0]
 80020a6:	6121      	str	r1, [r4, #16]
 80020a8:	07d8      	lsls	r0, r3, #31
 80020aa:	d5ea      	bpl.n	8002082 <_printf_float+0x19a>
 80020ac:	1c4b      	adds	r3, r1, #1
 80020ae:	e7e7      	b.n	8002080 <_printf_float+0x198>
 80020b0:	2900      	cmp	r1, #0
 80020b2:	bfcc      	ite	gt
 80020b4:	2201      	movgt	r2, #1
 80020b6:	f1c1 0202 	rsble	r2, r1, #2
 80020ba:	4413      	add	r3, r2
 80020bc:	e7e0      	b.n	8002080 <_printf_float+0x198>
 80020be:	6823      	ldr	r3, [r4, #0]
 80020c0:	055a      	lsls	r2, r3, #21
 80020c2:	d407      	bmi.n	80020d4 <_printf_float+0x1ec>
 80020c4:	6923      	ldr	r3, [r4, #16]
 80020c6:	4642      	mov	r2, r8
 80020c8:	4631      	mov	r1, r6
 80020ca:	4628      	mov	r0, r5
 80020cc:	47b8      	blx	r7
 80020ce:	3001      	adds	r0, #1
 80020d0:	d12b      	bne.n	800212a <_printf_float+0x242>
 80020d2:	e764      	b.n	8001f9e <_printf_float+0xb6>
 80020d4:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 80020d8:	f240 80dd 	bls.w	8002296 <_printf_float+0x3ae>
 80020dc:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80020e0:	2200      	movs	r2, #0
 80020e2:	2300      	movs	r3, #0
 80020e4:	f7fe fc60 	bl	80009a8 <__aeabi_dcmpeq>
 80020e8:	2800      	cmp	r0, #0
 80020ea:	d033      	beq.n	8002154 <_printf_float+0x26c>
 80020ec:	2301      	movs	r3, #1
 80020ee:	4631      	mov	r1, r6
 80020f0:	4628      	mov	r0, r5
 80020f2:	4a35      	ldr	r2, [pc, #212]	; (80021c8 <_printf_float+0x2e0>)
 80020f4:	47b8      	blx	r7
 80020f6:	3001      	adds	r0, #1
 80020f8:	f43f af51 	beq.w	8001f9e <_printf_float+0xb6>
 80020fc:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002100:	429a      	cmp	r2, r3
 8002102:	db02      	blt.n	800210a <_printf_float+0x222>
 8002104:	6823      	ldr	r3, [r4, #0]
 8002106:	07d8      	lsls	r0, r3, #31
 8002108:	d50f      	bpl.n	800212a <_printf_float+0x242>
 800210a:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800210e:	4631      	mov	r1, r6
 8002110:	4628      	mov	r0, r5
 8002112:	47b8      	blx	r7
 8002114:	3001      	adds	r0, #1
 8002116:	f43f af42 	beq.w	8001f9e <_printf_float+0xb6>
 800211a:	f04f 0800 	mov.w	r8, #0
 800211e:	f104 091a 	add.w	r9, r4, #26
 8002122:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002124:	3b01      	subs	r3, #1
 8002126:	4543      	cmp	r3, r8
 8002128:	dc09      	bgt.n	800213e <_printf_float+0x256>
 800212a:	6823      	ldr	r3, [r4, #0]
 800212c:	079b      	lsls	r3, r3, #30
 800212e:	f100 8104 	bmi.w	800233a <_printf_float+0x452>
 8002132:	68e0      	ldr	r0, [r4, #12]
 8002134:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002136:	4298      	cmp	r0, r3
 8002138:	bfb8      	it	lt
 800213a:	4618      	movlt	r0, r3
 800213c:	e731      	b.n	8001fa2 <_printf_float+0xba>
 800213e:	2301      	movs	r3, #1
 8002140:	464a      	mov	r2, r9
 8002142:	4631      	mov	r1, r6
 8002144:	4628      	mov	r0, r5
 8002146:	47b8      	blx	r7
 8002148:	3001      	adds	r0, #1
 800214a:	f43f af28 	beq.w	8001f9e <_printf_float+0xb6>
 800214e:	f108 0801 	add.w	r8, r8, #1
 8002152:	e7e6      	b.n	8002122 <_printf_float+0x23a>
 8002154:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002156:	2b00      	cmp	r3, #0
 8002158:	dc38      	bgt.n	80021cc <_printf_float+0x2e4>
 800215a:	2301      	movs	r3, #1
 800215c:	4631      	mov	r1, r6
 800215e:	4628      	mov	r0, r5
 8002160:	4a19      	ldr	r2, [pc, #100]	; (80021c8 <_printf_float+0x2e0>)
 8002162:	47b8      	blx	r7
 8002164:	3001      	adds	r0, #1
 8002166:	f43f af1a 	beq.w	8001f9e <_printf_float+0xb6>
 800216a:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 800216e:	4313      	orrs	r3, r2
 8002170:	d102      	bne.n	8002178 <_printf_float+0x290>
 8002172:	6823      	ldr	r3, [r4, #0]
 8002174:	07d9      	lsls	r1, r3, #31
 8002176:	d5d8      	bpl.n	800212a <_printf_float+0x242>
 8002178:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800217c:	4631      	mov	r1, r6
 800217e:	4628      	mov	r0, r5
 8002180:	47b8      	blx	r7
 8002182:	3001      	adds	r0, #1
 8002184:	f43f af0b 	beq.w	8001f9e <_printf_float+0xb6>
 8002188:	f04f 0900 	mov.w	r9, #0
 800218c:	f104 0a1a 	add.w	sl, r4, #26
 8002190:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002192:	425b      	negs	r3, r3
 8002194:	454b      	cmp	r3, r9
 8002196:	dc01      	bgt.n	800219c <_printf_float+0x2b4>
 8002198:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800219a:	e794      	b.n	80020c6 <_printf_float+0x1de>
 800219c:	2301      	movs	r3, #1
 800219e:	4652      	mov	r2, sl
 80021a0:	4631      	mov	r1, r6
 80021a2:	4628      	mov	r0, r5
 80021a4:	47b8      	blx	r7
 80021a6:	3001      	adds	r0, #1
 80021a8:	f43f aef9 	beq.w	8001f9e <_printf_float+0xb6>
 80021ac:	f109 0901 	add.w	r9, r9, #1
 80021b0:	e7ee      	b.n	8002190 <_printf_float+0x2a8>
 80021b2:	bf00      	nop
 80021b4:	7fefffff 	.word	0x7fefffff
 80021b8:	0800655a 	.word	0x0800655a
 80021bc:	0800655e 	.word	0x0800655e
 80021c0:	08006562 	.word	0x08006562
 80021c4:	08006566 	.word	0x08006566
 80021c8:	0800656a 	.word	0x0800656a
 80021cc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80021ce:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80021d0:	429a      	cmp	r2, r3
 80021d2:	bfa8      	it	ge
 80021d4:	461a      	movge	r2, r3
 80021d6:	2a00      	cmp	r2, #0
 80021d8:	4691      	mov	r9, r2
 80021da:	dc37      	bgt.n	800224c <_printf_float+0x364>
 80021dc:	f04f 0b00 	mov.w	fp, #0
 80021e0:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80021e4:	f104 021a 	add.w	r2, r4, #26
 80021e8:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 80021ec:	ebaa 0309 	sub.w	r3, sl, r9
 80021f0:	455b      	cmp	r3, fp
 80021f2:	dc33      	bgt.n	800225c <_printf_float+0x374>
 80021f4:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80021f8:	429a      	cmp	r2, r3
 80021fa:	db3b      	blt.n	8002274 <_printf_float+0x38c>
 80021fc:	6823      	ldr	r3, [r4, #0]
 80021fe:	07da      	lsls	r2, r3, #31
 8002200:	d438      	bmi.n	8002274 <_printf_float+0x38c>
 8002202:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 8002206:	eba2 0903 	sub.w	r9, r2, r3
 800220a:	eba2 020a 	sub.w	r2, r2, sl
 800220e:	4591      	cmp	r9, r2
 8002210:	bfa8      	it	ge
 8002212:	4691      	movge	r9, r2
 8002214:	f1b9 0f00 	cmp.w	r9, #0
 8002218:	dc34      	bgt.n	8002284 <_printf_float+0x39c>
 800221a:	f04f 0800 	mov.w	r8, #0
 800221e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002222:	f104 0a1a 	add.w	sl, r4, #26
 8002226:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800222a:	1a9b      	subs	r3, r3, r2
 800222c:	eba3 0309 	sub.w	r3, r3, r9
 8002230:	4543      	cmp	r3, r8
 8002232:	f77f af7a 	ble.w	800212a <_printf_float+0x242>
 8002236:	2301      	movs	r3, #1
 8002238:	4652      	mov	r2, sl
 800223a:	4631      	mov	r1, r6
 800223c:	4628      	mov	r0, r5
 800223e:	47b8      	blx	r7
 8002240:	3001      	adds	r0, #1
 8002242:	f43f aeac 	beq.w	8001f9e <_printf_float+0xb6>
 8002246:	f108 0801 	add.w	r8, r8, #1
 800224a:	e7ec      	b.n	8002226 <_printf_float+0x33e>
 800224c:	4613      	mov	r3, r2
 800224e:	4631      	mov	r1, r6
 8002250:	4642      	mov	r2, r8
 8002252:	4628      	mov	r0, r5
 8002254:	47b8      	blx	r7
 8002256:	3001      	adds	r0, #1
 8002258:	d1c0      	bne.n	80021dc <_printf_float+0x2f4>
 800225a:	e6a0      	b.n	8001f9e <_printf_float+0xb6>
 800225c:	2301      	movs	r3, #1
 800225e:	4631      	mov	r1, r6
 8002260:	4628      	mov	r0, r5
 8002262:	920b      	str	r2, [sp, #44]	; 0x2c
 8002264:	47b8      	blx	r7
 8002266:	3001      	adds	r0, #1
 8002268:	f43f ae99 	beq.w	8001f9e <_printf_float+0xb6>
 800226c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800226e:	f10b 0b01 	add.w	fp, fp, #1
 8002272:	e7b9      	b.n	80021e8 <_printf_float+0x300>
 8002274:	4631      	mov	r1, r6
 8002276:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800227a:	4628      	mov	r0, r5
 800227c:	47b8      	blx	r7
 800227e:	3001      	adds	r0, #1
 8002280:	d1bf      	bne.n	8002202 <_printf_float+0x31a>
 8002282:	e68c      	b.n	8001f9e <_printf_float+0xb6>
 8002284:	464b      	mov	r3, r9
 8002286:	4631      	mov	r1, r6
 8002288:	4628      	mov	r0, r5
 800228a:	eb08 020a 	add.w	r2, r8, sl
 800228e:	47b8      	blx	r7
 8002290:	3001      	adds	r0, #1
 8002292:	d1c2      	bne.n	800221a <_printf_float+0x332>
 8002294:	e683      	b.n	8001f9e <_printf_float+0xb6>
 8002296:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002298:	2a01      	cmp	r2, #1
 800229a:	dc01      	bgt.n	80022a0 <_printf_float+0x3b8>
 800229c:	07db      	lsls	r3, r3, #31
 800229e:	d539      	bpl.n	8002314 <_printf_float+0x42c>
 80022a0:	2301      	movs	r3, #1
 80022a2:	4642      	mov	r2, r8
 80022a4:	4631      	mov	r1, r6
 80022a6:	4628      	mov	r0, r5
 80022a8:	47b8      	blx	r7
 80022aa:	3001      	adds	r0, #1
 80022ac:	f43f ae77 	beq.w	8001f9e <_printf_float+0xb6>
 80022b0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80022b4:	4631      	mov	r1, r6
 80022b6:	4628      	mov	r0, r5
 80022b8:	47b8      	blx	r7
 80022ba:	3001      	adds	r0, #1
 80022bc:	f43f ae6f 	beq.w	8001f9e <_printf_float+0xb6>
 80022c0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80022c4:	2200      	movs	r2, #0
 80022c6:	2300      	movs	r3, #0
 80022c8:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
 80022cc:	f7fe fb6c 	bl	80009a8 <__aeabi_dcmpeq>
 80022d0:	b9d8      	cbnz	r0, 800230a <_printf_float+0x422>
 80022d2:	f109 33ff 	add.w	r3, r9, #4294967295
 80022d6:	f108 0201 	add.w	r2, r8, #1
 80022da:	4631      	mov	r1, r6
 80022dc:	4628      	mov	r0, r5
 80022de:	47b8      	blx	r7
 80022e0:	3001      	adds	r0, #1
 80022e2:	d10e      	bne.n	8002302 <_printf_float+0x41a>
 80022e4:	e65b      	b.n	8001f9e <_printf_float+0xb6>
 80022e6:	2301      	movs	r3, #1
 80022e8:	464a      	mov	r2, r9
 80022ea:	4631      	mov	r1, r6
 80022ec:	4628      	mov	r0, r5
 80022ee:	47b8      	blx	r7
 80022f0:	3001      	adds	r0, #1
 80022f2:	f43f ae54 	beq.w	8001f9e <_printf_float+0xb6>
 80022f6:	f108 0801 	add.w	r8, r8, #1
 80022fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80022fc:	3b01      	subs	r3, #1
 80022fe:	4543      	cmp	r3, r8
 8002300:	dcf1      	bgt.n	80022e6 <_printf_float+0x3fe>
 8002302:	4653      	mov	r3, sl
 8002304:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8002308:	e6de      	b.n	80020c8 <_printf_float+0x1e0>
 800230a:	f04f 0800 	mov.w	r8, #0
 800230e:	f104 091a 	add.w	r9, r4, #26
 8002312:	e7f2      	b.n	80022fa <_printf_float+0x412>
 8002314:	2301      	movs	r3, #1
 8002316:	4642      	mov	r2, r8
 8002318:	e7df      	b.n	80022da <_printf_float+0x3f2>
 800231a:	2301      	movs	r3, #1
 800231c:	464a      	mov	r2, r9
 800231e:	4631      	mov	r1, r6
 8002320:	4628      	mov	r0, r5
 8002322:	47b8      	blx	r7
 8002324:	3001      	adds	r0, #1
 8002326:	f43f ae3a 	beq.w	8001f9e <_printf_float+0xb6>
 800232a:	f108 0801 	add.w	r8, r8, #1
 800232e:	68e3      	ldr	r3, [r4, #12]
 8002330:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8002332:	1a5b      	subs	r3, r3, r1
 8002334:	4543      	cmp	r3, r8
 8002336:	dcf0      	bgt.n	800231a <_printf_float+0x432>
 8002338:	e6fb      	b.n	8002132 <_printf_float+0x24a>
 800233a:	f04f 0800 	mov.w	r8, #0
 800233e:	f104 0919 	add.w	r9, r4, #25
 8002342:	e7f4      	b.n	800232e <_printf_float+0x446>

08002344 <_printf_common>:
 8002344:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002348:	4616      	mov	r6, r2
 800234a:	4699      	mov	r9, r3
 800234c:	688a      	ldr	r2, [r1, #8]
 800234e:	690b      	ldr	r3, [r1, #16]
 8002350:	4607      	mov	r7, r0
 8002352:	4293      	cmp	r3, r2
 8002354:	bfb8      	it	lt
 8002356:	4613      	movlt	r3, r2
 8002358:	6033      	str	r3, [r6, #0]
 800235a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800235e:	460c      	mov	r4, r1
 8002360:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002364:	b10a      	cbz	r2, 800236a <_printf_common+0x26>
 8002366:	3301      	adds	r3, #1
 8002368:	6033      	str	r3, [r6, #0]
 800236a:	6823      	ldr	r3, [r4, #0]
 800236c:	0699      	lsls	r1, r3, #26
 800236e:	bf42      	ittt	mi
 8002370:	6833      	ldrmi	r3, [r6, #0]
 8002372:	3302      	addmi	r3, #2
 8002374:	6033      	strmi	r3, [r6, #0]
 8002376:	6825      	ldr	r5, [r4, #0]
 8002378:	f015 0506 	ands.w	r5, r5, #6
 800237c:	d106      	bne.n	800238c <_printf_common+0x48>
 800237e:	f104 0a19 	add.w	sl, r4, #25
 8002382:	68e3      	ldr	r3, [r4, #12]
 8002384:	6832      	ldr	r2, [r6, #0]
 8002386:	1a9b      	subs	r3, r3, r2
 8002388:	42ab      	cmp	r3, r5
 800238a:	dc2b      	bgt.n	80023e4 <_printf_common+0xa0>
 800238c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8002390:	1e13      	subs	r3, r2, #0
 8002392:	6822      	ldr	r2, [r4, #0]
 8002394:	bf18      	it	ne
 8002396:	2301      	movne	r3, #1
 8002398:	0692      	lsls	r2, r2, #26
 800239a:	d430      	bmi.n	80023fe <_printf_common+0xba>
 800239c:	4649      	mov	r1, r9
 800239e:	4638      	mov	r0, r7
 80023a0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80023a4:	47c0      	blx	r8
 80023a6:	3001      	adds	r0, #1
 80023a8:	d023      	beq.n	80023f2 <_printf_common+0xae>
 80023aa:	6823      	ldr	r3, [r4, #0]
 80023ac:	6922      	ldr	r2, [r4, #16]
 80023ae:	f003 0306 	and.w	r3, r3, #6
 80023b2:	2b04      	cmp	r3, #4
 80023b4:	bf14      	ite	ne
 80023b6:	2500      	movne	r5, #0
 80023b8:	6833      	ldreq	r3, [r6, #0]
 80023ba:	f04f 0600 	mov.w	r6, #0
 80023be:	bf08      	it	eq
 80023c0:	68e5      	ldreq	r5, [r4, #12]
 80023c2:	f104 041a 	add.w	r4, r4, #26
 80023c6:	bf08      	it	eq
 80023c8:	1aed      	subeq	r5, r5, r3
 80023ca:	f854 3c12 	ldr.w	r3, [r4, #-18]
 80023ce:	bf08      	it	eq
 80023d0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80023d4:	4293      	cmp	r3, r2
 80023d6:	bfc4      	itt	gt
 80023d8:	1a9b      	subgt	r3, r3, r2
 80023da:	18ed      	addgt	r5, r5, r3
 80023dc:	42b5      	cmp	r5, r6
 80023de:	d11a      	bne.n	8002416 <_printf_common+0xd2>
 80023e0:	2000      	movs	r0, #0
 80023e2:	e008      	b.n	80023f6 <_printf_common+0xb2>
 80023e4:	2301      	movs	r3, #1
 80023e6:	4652      	mov	r2, sl
 80023e8:	4649      	mov	r1, r9
 80023ea:	4638      	mov	r0, r7
 80023ec:	47c0      	blx	r8
 80023ee:	3001      	adds	r0, #1
 80023f0:	d103      	bne.n	80023fa <_printf_common+0xb6>
 80023f2:	f04f 30ff 	mov.w	r0, #4294967295
 80023f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80023fa:	3501      	adds	r5, #1
 80023fc:	e7c1      	b.n	8002382 <_printf_common+0x3e>
 80023fe:	2030      	movs	r0, #48	; 0x30
 8002400:	18e1      	adds	r1, r4, r3
 8002402:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002406:	1c5a      	adds	r2, r3, #1
 8002408:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800240c:	4422      	add	r2, r4
 800240e:	3302      	adds	r3, #2
 8002410:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002414:	e7c2      	b.n	800239c <_printf_common+0x58>
 8002416:	2301      	movs	r3, #1
 8002418:	4622      	mov	r2, r4
 800241a:	4649      	mov	r1, r9
 800241c:	4638      	mov	r0, r7
 800241e:	47c0      	blx	r8
 8002420:	3001      	adds	r0, #1
 8002422:	d0e6      	beq.n	80023f2 <_printf_common+0xae>
 8002424:	3601      	adds	r6, #1
 8002426:	e7d9      	b.n	80023dc <_printf_common+0x98>

08002428 <_printf_i>:
 8002428:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800242c:	7e0f      	ldrb	r7, [r1, #24]
 800242e:	4691      	mov	r9, r2
 8002430:	2f78      	cmp	r7, #120	; 0x78
 8002432:	4680      	mov	r8, r0
 8002434:	460c      	mov	r4, r1
 8002436:	469a      	mov	sl, r3
 8002438:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800243a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800243e:	d807      	bhi.n	8002450 <_printf_i+0x28>
 8002440:	2f62      	cmp	r7, #98	; 0x62
 8002442:	d80a      	bhi.n	800245a <_printf_i+0x32>
 8002444:	2f00      	cmp	r7, #0
 8002446:	f000 80d5 	beq.w	80025f4 <_printf_i+0x1cc>
 800244a:	2f58      	cmp	r7, #88	; 0x58
 800244c:	f000 80c1 	beq.w	80025d2 <_printf_i+0x1aa>
 8002450:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002454:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8002458:	e03a      	b.n	80024d0 <_printf_i+0xa8>
 800245a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800245e:	2b15      	cmp	r3, #21
 8002460:	d8f6      	bhi.n	8002450 <_printf_i+0x28>
 8002462:	a101      	add	r1, pc, #4	; (adr r1, 8002468 <_printf_i+0x40>)
 8002464:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002468:	080024c1 	.word	0x080024c1
 800246c:	080024d5 	.word	0x080024d5
 8002470:	08002451 	.word	0x08002451
 8002474:	08002451 	.word	0x08002451
 8002478:	08002451 	.word	0x08002451
 800247c:	08002451 	.word	0x08002451
 8002480:	080024d5 	.word	0x080024d5
 8002484:	08002451 	.word	0x08002451
 8002488:	08002451 	.word	0x08002451
 800248c:	08002451 	.word	0x08002451
 8002490:	08002451 	.word	0x08002451
 8002494:	080025db 	.word	0x080025db
 8002498:	08002501 	.word	0x08002501
 800249c:	08002595 	.word	0x08002595
 80024a0:	08002451 	.word	0x08002451
 80024a4:	08002451 	.word	0x08002451
 80024a8:	080025fd 	.word	0x080025fd
 80024ac:	08002451 	.word	0x08002451
 80024b0:	08002501 	.word	0x08002501
 80024b4:	08002451 	.word	0x08002451
 80024b8:	08002451 	.word	0x08002451
 80024bc:	0800259d 	.word	0x0800259d
 80024c0:	682b      	ldr	r3, [r5, #0]
 80024c2:	1d1a      	adds	r2, r3, #4
 80024c4:	681b      	ldr	r3, [r3, #0]
 80024c6:	602a      	str	r2, [r5, #0]
 80024c8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80024cc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80024d0:	2301      	movs	r3, #1
 80024d2:	e0a0      	b.n	8002616 <_printf_i+0x1ee>
 80024d4:	6820      	ldr	r0, [r4, #0]
 80024d6:	682b      	ldr	r3, [r5, #0]
 80024d8:	0607      	lsls	r7, r0, #24
 80024da:	f103 0104 	add.w	r1, r3, #4
 80024de:	6029      	str	r1, [r5, #0]
 80024e0:	d501      	bpl.n	80024e6 <_printf_i+0xbe>
 80024e2:	681e      	ldr	r6, [r3, #0]
 80024e4:	e003      	b.n	80024ee <_printf_i+0xc6>
 80024e6:	0646      	lsls	r6, r0, #25
 80024e8:	d5fb      	bpl.n	80024e2 <_printf_i+0xba>
 80024ea:	f9b3 6000 	ldrsh.w	r6, [r3]
 80024ee:	2e00      	cmp	r6, #0
 80024f0:	da03      	bge.n	80024fa <_printf_i+0xd2>
 80024f2:	232d      	movs	r3, #45	; 0x2d
 80024f4:	4276      	negs	r6, r6
 80024f6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80024fa:	230a      	movs	r3, #10
 80024fc:	4859      	ldr	r0, [pc, #356]	; (8002664 <_printf_i+0x23c>)
 80024fe:	e012      	b.n	8002526 <_printf_i+0xfe>
 8002500:	682b      	ldr	r3, [r5, #0]
 8002502:	6820      	ldr	r0, [r4, #0]
 8002504:	1d19      	adds	r1, r3, #4
 8002506:	6029      	str	r1, [r5, #0]
 8002508:	0605      	lsls	r5, r0, #24
 800250a:	d501      	bpl.n	8002510 <_printf_i+0xe8>
 800250c:	681e      	ldr	r6, [r3, #0]
 800250e:	e002      	b.n	8002516 <_printf_i+0xee>
 8002510:	0641      	lsls	r1, r0, #25
 8002512:	d5fb      	bpl.n	800250c <_printf_i+0xe4>
 8002514:	881e      	ldrh	r6, [r3, #0]
 8002516:	2f6f      	cmp	r7, #111	; 0x6f
 8002518:	bf0c      	ite	eq
 800251a:	2308      	moveq	r3, #8
 800251c:	230a      	movne	r3, #10
 800251e:	4851      	ldr	r0, [pc, #324]	; (8002664 <_printf_i+0x23c>)
 8002520:	2100      	movs	r1, #0
 8002522:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002526:	6865      	ldr	r5, [r4, #4]
 8002528:	2d00      	cmp	r5, #0
 800252a:	bfa8      	it	ge
 800252c:	6821      	ldrge	r1, [r4, #0]
 800252e:	60a5      	str	r5, [r4, #8]
 8002530:	bfa4      	itt	ge
 8002532:	f021 0104 	bicge.w	r1, r1, #4
 8002536:	6021      	strge	r1, [r4, #0]
 8002538:	b90e      	cbnz	r6, 800253e <_printf_i+0x116>
 800253a:	2d00      	cmp	r5, #0
 800253c:	d04b      	beq.n	80025d6 <_printf_i+0x1ae>
 800253e:	4615      	mov	r5, r2
 8002540:	fbb6 f1f3 	udiv	r1, r6, r3
 8002544:	fb03 6711 	mls	r7, r3, r1, r6
 8002548:	5dc7      	ldrb	r7, [r0, r7]
 800254a:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800254e:	4637      	mov	r7, r6
 8002550:	42bb      	cmp	r3, r7
 8002552:	460e      	mov	r6, r1
 8002554:	d9f4      	bls.n	8002540 <_printf_i+0x118>
 8002556:	2b08      	cmp	r3, #8
 8002558:	d10b      	bne.n	8002572 <_printf_i+0x14a>
 800255a:	6823      	ldr	r3, [r4, #0]
 800255c:	07de      	lsls	r6, r3, #31
 800255e:	d508      	bpl.n	8002572 <_printf_i+0x14a>
 8002560:	6923      	ldr	r3, [r4, #16]
 8002562:	6861      	ldr	r1, [r4, #4]
 8002564:	4299      	cmp	r1, r3
 8002566:	bfde      	ittt	le
 8002568:	2330      	movle	r3, #48	; 0x30
 800256a:	f805 3c01 	strble.w	r3, [r5, #-1]
 800256e:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002572:	1b52      	subs	r2, r2, r5
 8002574:	6122      	str	r2, [r4, #16]
 8002576:	464b      	mov	r3, r9
 8002578:	4621      	mov	r1, r4
 800257a:	4640      	mov	r0, r8
 800257c:	f8cd a000 	str.w	sl, [sp]
 8002580:	aa03      	add	r2, sp, #12
 8002582:	f7ff fedf 	bl	8002344 <_printf_common>
 8002586:	3001      	adds	r0, #1
 8002588:	d14a      	bne.n	8002620 <_printf_i+0x1f8>
 800258a:	f04f 30ff 	mov.w	r0, #4294967295
 800258e:	b004      	add	sp, #16
 8002590:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002594:	6823      	ldr	r3, [r4, #0]
 8002596:	f043 0320 	orr.w	r3, r3, #32
 800259a:	6023      	str	r3, [r4, #0]
 800259c:	2778      	movs	r7, #120	; 0x78
 800259e:	4832      	ldr	r0, [pc, #200]	; (8002668 <_printf_i+0x240>)
 80025a0:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80025a4:	6823      	ldr	r3, [r4, #0]
 80025a6:	6829      	ldr	r1, [r5, #0]
 80025a8:	061f      	lsls	r7, r3, #24
 80025aa:	f851 6b04 	ldr.w	r6, [r1], #4
 80025ae:	d402      	bmi.n	80025b6 <_printf_i+0x18e>
 80025b0:	065f      	lsls	r7, r3, #25
 80025b2:	bf48      	it	mi
 80025b4:	b2b6      	uxthmi	r6, r6
 80025b6:	07df      	lsls	r7, r3, #31
 80025b8:	bf48      	it	mi
 80025ba:	f043 0320 	orrmi.w	r3, r3, #32
 80025be:	6029      	str	r1, [r5, #0]
 80025c0:	bf48      	it	mi
 80025c2:	6023      	strmi	r3, [r4, #0]
 80025c4:	b91e      	cbnz	r6, 80025ce <_printf_i+0x1a6>
 80025c6:	6823      	ldr	r3, [r4, #0]
 80025c8:	f023 0320 	bic.w	r3, r3, #32
 80025cc:	6023      	str	r3, [r4, #0]
 80025ce:	2310      	movs	r3, #16
 80025d0:	e7a6      	b.n	8002520 <_printf_i+0xf8>
 80025d2:	4824      	ldr	r0, [pc, #144]	; (8002664 <_printf_i+0x23c>)
 80025d4:	e7e4      	b.n	80025a0 <_printf_i+0x178>
 80025d6:	4615      	mov	r5, r2
 80025d8:	e7bd      	b.n	8002556 <_printf_i+0x12e>
 80025da:	682b      	ldr	r3, [r5, #0]
 80025dc:	6826      	ldr	r6, [r4, #0]
 80025de:	1d18      	adds	r0, r3, #4
 80025e0:	6961      	ldr	r1, [r4, #20]
 80025e2:	6028      	str	r0, [r5, #0]
 80025e4:	0635      	lsls	r5, r6, #24
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	d501      	bpl.n	80025ee <_printf_i+0x1c6>
 80025ea:	6019      	str	r1, [r3, #0]
 80025ec:	e002      	b.n	80025f4 <_printf_i+0x1cc>
 80025ee:	0670      	lsls	r0, r6, #25
 80025f0:	d5fb      	bpl.n	80025ea <_printf_i+0x1c2>
 80025f2:	8019      	strh	r1, [r3, #0]
 80025f4:	2300      	movs	r3, #0
 80025f6:	4615      	mov	r5, r2
 80025f8:	6123      	str	r3, [r4, #16]
 80025fa:	e7bc      	b.n	8002576 <_printf_i+0x14e>
 80025fc:	682b      	ldr	r3, [r5, #0]
 80025fe:	2100      	movs	r1, #0
 8002600:	1d1a      	adds	r2, r3, #4
 8002602:	602a      	str	r2, [r5, #0]
 8002604:	681d      	ldr	r5, [r3, #0]
 8002606:	6862      	ldr	r2, [r4, #4]
 8002608:	4628      	mov	r0, r5
 800260a:	f000 fbe2 	bl	8002dd2 <memchr>
 800260e:	b108      	cbz	r0, 8002614 <_printf_i+0x1ec>
 8002610:	1b40      	subs	r0, r0, r5
 8002612:	6060      	str	r0, [r4, #4]
 8002614:	6863      	ldr	r3, [r4, #4]
 8002616:	6123      	str	r3, [r4, #16]
 8002618:	2300      	movs	r3, #0
 800261a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800261e:	e7aa      	b.n	8002576 <_printf_i+0x14e>
 8002620:	462a      	mov	r2, r5
 8002622:	4649      	mov	r1, r9
 8002624:	4640      	mov	r0, r8
 8002626:	6923      	ldr	r3, [r4, #16]
 8002628:	47d0      	blx	sl
 800262a:	3001      	adds	r0, #1
 800262c:	d0ad      	beq.n	800258a <_printf_i+0x162>
 800262e:	6823      	ldr	r3, [r4, #0]
 8002630:	079b      	lsls	r3, r3, #30
 8002632:	d413      	bmi.n	800265c <_printf_i+0x234>
 8002634:	68e0      	ldr	r0, [r4, #12]
 8002636:	9b03      	ldr	r3, [sp, #12]
 8002638:	4298      	cmp	r0, r3
 800263a:	bfb8      	it	lt
 800263c:	4618      	movlt	r0, r3
 800263e:	e7a6      	b.n	800258e <_printf_i+0x166>
 8002640:	2301      	movs	r3, #1
 8002642:	4632      	mov	r2, r6
 8002644:	4649      	mov	r1, r9
 8002646:	4640      	mov	r0, r8
 8002648:	47d0      	blx	sl
 800264a:	3001      	adds	r0, #1
 800264c:	d09d      	beq.n	800258a <_printf_i+0x162>
 800264e:	3501      	adds	r5, #1
 8002650:	68e3      	ldr	r3, [r4, #12]
 8002652:	9903      	ldr	r1, [sp, #12]
 8002654:	1a5b      	subs	r3, r3, r1
 8002656:	42ab      	cmp	r3, r5
 8002658:	dcf2      	bgt.n	8002640 <_printf_i+0x218>
 800265a:	e7eb      	b.n	8002634 <_printf_i+0x20c>
 800265c:	2500      	movs	r5, #0
 800265e:	f104 0619 	add.w	r6, r4, #25
 8002662:	e7f5      	b.n	8002650 <_printf_i+0x228>
 8002664:	0800656c 	.word	0x0800656c
 8002668:	0800657d 	.word	0x0800657d

0800266c <_scanf_float>:
 800266c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002670:	b087      	sub	sp, #28
 8002672:	9303      	str	r3, [sp, #12]
 8002674:	688b      	ldr	r3, [r1, #8]
 8002676:	4617      	mov	r7, r2
 8002678:	1e5a      	subs	r2, r3, #1
 800267a:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800267e:	bf85      	ittet	hi
 8002680:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8002684:	195b      	addhi	r3, r3, r5
 8002686:	2300      	movls	r3, #0
 8002688:	9302      	strhi	r3, [sp, #8]
 800268a:	bf88      	it	hi
 800268c:	f240 135d 	movwhi	r3, #349	; 0x15d
 8002690:	468b      	mov	fp, r1
 8002692:	f04f 0500 	mov.w	r5, #0
 8002696:	bf8c      	ite	hi
 8002698:	608b      	strhi	r3, [r1, #8]
 800269a:	9302      	strls	r3, [sp, #8]
 800269c:	680b      	ldr	r3, [r1, #0]
 800269e:	4680      	mov	r8, r0
 80026a0:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 80026a4:	f84b 3b1c 	str.w	r3, [fp], #28
 80026a8:	460c      	mov	r4, r1
 80026aa:	465e      	mov	r6, fp
 80026ac:	46aa      	mov	sl, r5
 80026ae:	46a9      	mov	r9, r5
 80026b0:	e9cd 5504 	strd	r5, r5, [sp, #16]
 80026b4:	9501      	str	r5, [sp, #4]
 80026b6:	68a2      	ldr	r2, [r4, #8]
 80026b8:	b152      	cbz	r2, 80026d0 <_scanf_float+0x64>
 80026ba:	683b      	ldr	r3, [r7, #0]
 80026bc:	781b      	ldrb	r3, [r3, #0]
 80026be:	2b4e      	cmp	r3, #78	; 0x4e
 80026c0:	d864      	bhi.n	800278c <_scanf_float+0x120>
 80026c2:	2b40      	cmp	r3, #64	; 0x40
 80026c4:	d83c      	bhi.n	8002740 <_scanf_float+0xd4>
 80026c6:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 80026ca:	b2c8      	uxtb	r0, r1
 80026cc:	280e      	cmp	r0, #14
 80026ce:	d93a      	bls.n	8002746 <_scanf_float+0xda>
 80026d0:	f1b9 0f00 	cmp.w	r9, #0
 80026d4:	d003      	beq.n	80026de <_scanf_float+0x72>
 80026d6:	6823      	ldr	r3, [r4, #0]
 80026d8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80026dc:	6023      	str	r3, [r4, #0]
 80026de:	f10a 3aff 	add.w	sl, sl, #4294967295
 80026e2:	f1ba 0f01 	cmp.w	sl, #1
 80026e6:	f200 8113 	bhi.w	8002910 <_scanf_float+0x2a4>
 80026ea:	455e      	cmp	r6, fp
 80026ec:	f200 8105 	bhi.w	80028fa <_scanf_float+0x28e>
 80026f0:	2501      	movs	r5, #1
 80026f2:	4628      	mov	r0, r5
 80026f4:	b007      	add	sp, #28
 80026f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80026fa:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 80026fe:	2a0d      	cmp	r2, #13
 8002700:	d8e6      	bhi.n	80026d0 <_scanf_float+0x64>
 8002702:	a101      	add	r1, pc, #4	; (adr r1, 8002708 <_scanf_float+0x9c>)
 8002704:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002708:	08002847 	.word	0x08002847
 800270c:	080026d1 	.word	0x080026d1
 8002710:	080026d1 	.word	0x080026d1
 8002714:	080026d1 	.word	0x080026d1
 8002718:	080028a7 	.word	0x080028a7
 800271c:	0800287f 	.word	0x0800287f
 8002720:	080026d1 	.word	0x080026d1
 8002724:	080026d1 	.word	0x080026d1
 8002728:	08002855 	.word	0x08002855
 800272c:	080026d1 	.word	0x080026d1
 8002730:	080026d1 	.word	0x080026d1
 8002734:	080026d1 	.word	0x080026d1
 8002738:	080026d1 	.word	0x080026d1
 800273c:	0800280d 	.word	0x0800280d
 8002740:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8002744:	e7db      	b.n	80026fe <_scanf_float+0x92>
 8002746:	290e      	cmp	r1, #14
 8002748:	d8c2      	bhi.n	80026d0 <_scanf_float+0x64>
 800274a:	a001      	add	r0, pc, #4	; (adr r0, 8002750 <_scanf_float+0xe4>)
 800274c:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8002750:	080027ff 	.word	0x080027ff
 8002754:	080026d1 	.word	0x080026d1
 8002758:	080027ff 	.word	0x080027ff
 800275c:	08002893 	.word	0x08002893
 8002760:	080026d1 	.word	0x080026d1
 8002764:	080027ad 	.word	0x080027ad
 8002768:	080027e9 	.word	0x080027e9
 800276c:	080027e9 	.word	0x080027e9
 8002770:	080027e9 	.word	0x080027e9
 8002774:	080027e9 	.word	0x080027e9
 8002778:	080027e9 	.word	0x080027e9
 800277c:	080027e9 	.word	0x080027e9
 8002780:	080027e9 	.word	0x080027e9
 8002784:	080027e9 	.word	0x080027e9
 8002788:	080027e9 	.word	0x080027e9
 800278c:	2b6e      	cmp	r3, #110	; 0x6e
 800278e:	d809      	bhi.n	80027a4 <_scanf_float+0x138>
 8002790:	2b60      	cmp	r3, #96	; 0x60
 8002792:	d8b2      	bhi.n	80026fa <_scanf_float+0x8e>
 8002794:	2b54      	cmp	r3, #84	; 0x54
 8002796:	d077      	beq.n	8002888 <_scanf_float+0x21c>
 8002798:	2b59      	cmp	r3, #89	; 0x59
 800279a:	d199      	bne.n	80026d0 <_scanf_float+0x64>
 800279c:	2d07      	cmp	r5, #7
 800279e:	d197      	bne.n	80026d0 <_scanf_float+0x64>
 80027a0:	2508      	movs	r5, #8
 80027a2:	e029      	b.n	80027f8 <_scanf_float+0x18c>
 80027a4:	2b74      	cmp	r3, #116	; 0x74
 80027a6:	d06f      	beq.n	8002888 <_scanf_float+0x21c>
 80027a8:	2b79      	cmp	r3, #121	; 0x79
 80027aa:	e7f6      	b.n	800279a <_scanf_float+0x12e>
 80027ac:	6821      	ldr	r1, [r4, #0]
 80027ae:	05c8      	lsls	r0, r1, #23
 80027b0:	d51a      	bpl.n	80027e8 <_scanf_float+0x17c>
 80027b2:	9b02      	ldr	r3, [sp, #8]
 80027b4:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 80027b8:	6021      	str	r1, [r4, #0]
 80027ba:	f109 0901 	add.w	r9, r9, #1
 80027be:	b11b      	cbz	r3, 80027c8 <_scanf_float+0x15c>
 80027c0:	3b01      	subs	r3, #1
 80027c2:	3201      	adds	r2, #1
 80027c4:	9302      	str	r3, [sp, #8]
 80027c6:	60a2      	str	r2, [r4, #8]
 80027c8:	68a3      	ldr	r3, [r4, #8]
 80027ca:	3b01      	subs	r3, #1
 80027cc:	60a3      	str	r3, [r4, #8]
 80027ce:	6923      	ldr	r3, [r4, #16]
 80027d0:	3301      	adds	r3, #1
 80027d2:	6123      	str	r3, [r4, #16]
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	3b01      	subs	r3, #1
 80027d8:	2b00      	cmp	r3, #0
 80027da:	607b      	str	r3, [r7, #4]
 80027dc:	f340 8084 	ble.w	80028e8 <_scanf_float+0x27c>
 80027e0:	683b      	ldr	r3, [r7, #0]
 80027e2:	3301      	adds	r3, #1
 80027e4:	603b      	str	r3, [r7, #0]
 80027e6:	e766      	b.n	80026b6 <_scanf_float+0x4a>
 80027e8:	eb1a 0f05 	cmn.w	sl, r5
 80027ec:	f47f af70 	bne.w	80026d0 <_scanf_float+0x64>
 80027f0:	6822      	ldr	r2, [r4, #0]
 80027f2:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 80027f6:	6022      	str	r2, [r4, #0]
 80027f8:	f806 3b01 	strb.w	r3, [r6], #1
 80027fc:	e7e4      	b.n	80027c8 <_scanf_float+0x15c>
 80027fe:	6822      	ldr	r2, [r4, #0]
 8002800:	0610      	lsls	r0, r2, #24
 8002802:	f57f af65 	bpl.w	80026d0 <_scanf_float+0x64>
 8002806:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800280a:	e7f4      	b.n	80027f6 <_scanf_float+0x18a>
 800280c:	f1ba 0f00 	cmp.w	sl, #0
 8002810:	d10e      	bne.n	8002830 <_scanf_float+0x1c4>
 8002812:	f1b9 0f00 	cmp.w	r9, #0
 8002816:	d10e      	bne.n	8002836 <_scanf_float+0x1ca>
 8002818:	6822      	ldr	r2, [r4, #0]
 800281a:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800281e:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002822:	d108      	bne.n	8002836 <_scanf_float+0x1ca>
 8002824:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002828:	f04f 0a01 	mov.w	sl, #1
 800282c:	6022      	str	r2, [r4, #0]
 800282e:	e7e3      	b.n	80027f8 <_scanf_float+0x18c>
 8002830:	f1ba 0f02 	cmp.w	sl, #2
 8002834:	d055      	beq.n	80028e2 <_scanf_float+0x276>
 8002836:	2d01      	cmp	r5, #1
 8002838:	d002      	beq.n	8002840 <_scanf_float+0x1d4>
 800283a:	2d04      	cmp	r5, #4
 800283c:	f47f af48 	bne.w	80026d0 <_scanf_float+0x64>
 8002840:	3501      	adds	r5, #1
 8002842:	b2ed      	uxtb	r5, r5
 8002844:	e7d8      	b.n	80027f8 <_scanf_float+0x18c>
 8002846:	f1ba 0f01 	cmp.w	sl, #1
 800284a:	f47f af41 	bne.w	80026d0 <_scanf_float+0x64>
 800284e:	f04f 0a02 	mov.w	sl, #2
 8002852:	e7d1      	b.n	80027f8 <_scanf_float+0x18c>
 8002854:	b97d      	cbnz	r5, 8002876 <_scanf_float+0x20a>
 8002856:	f1b9 0f00 	cmp.w	r9, #0
 800285a:	f47f af3c 	bne.w	80026d6 <_scanf_float+0x6a>
 800285e:	6822      	ldr	r2, [r4, #0]
 8002860:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002864:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8002868:	f47f af39 	bne.w	80026de <_scanf_float+0x72>
 800286c:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002870:	2501      	movs	r5, #1
 8002872:	6022      	str	r2, [r4, #0]
 8002874:	e7c0      	b.n	80027f8 <_scanf_float+0x18c>
 8002876:	2d03      	cmp	r5, #3
 8002878:	d0e2      	beq.n	8002840 <_scanf_float+0x1d4>
 800287a:	2d05      	cmp	r5, #5
 800287c:	e7de      	b.n	800283c <_scanf_float+0x1d0>
 800287e:	2d02      	cmp	r5, #2
 8002880:	f47f af26 	bne.w	80026d0 <_scanf_float+0x64>
 8002884:	2503      	movs	r5, #3
 8002886:	e7b7      	b.n	80027f8 <_scanf_float+0x18c>
 8002888:	2d06      	cmp	r5, #6
 800288a:	f47f af21 	bne.w	80026d0 <_scanf_float+0x64>
 800288e:	2507      	movs	r5, #7
 8002890:	e7b2      	b.n	80027f8 <_scanf_float+0x18c>
 8002892:	6822      	ldr	r2, [r4, #0]
 8002894:	0591      	lsls	r1, r2, #22
 8002896:	f57f af1b 	bpl.w	80026d0 <_scanf_float+0x64>
 800289a:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 800289e:	6022      	str	r2, [r4, #0]
 80028a0:	f8cd 9004 	str.w	r9, [sp, #4]
 80028a4:	e7a8      	b.n	80027f8 <_scanf_float+0x18c>
 80028a6:	6822      	ldr	r2, [r4, #0]
 80028a8:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 80028ac:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 80028b0:	d006      	beq.n	80028c0 <_scanf_float+0x254>
 80028b2:	0550      	lsls	r0, r2, #21
 80028b4:	f57f af0c 	bpl.w	80026d0 <_scanf_float+0x64>
 80028b8:	f1b9 0f00 	cmp.w	r9, #0
 80028bc:	f43f af0f 	beq.w	80026de <_scanf_float+0x72>
 80028c0:	0591      	lsls	r1, r2, #22
 80028c2:	bf58      	it	pl
 80028c4:	9901      	ldrpl	r1, [sp, #4]
 80028c6:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80028ca:	bf58      	it	pl
 80028cc:	eba9 0101 	subpl.w	r1, r9, r1
 80028d0:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 80028d4:	f04f 0900 	mov.w	r9, #0
 80028d8:	bf58      	it	pl
 80028da:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 80028de:	6022      	str	r2, [r4, #0]
 80028e0:	e78a      	b.n	80027f8 <_scanf_float+0x18c>
 80028e2:	f04f 0a03 	mov.w	sl, #3
 80028e6:	e787      	b.n	80027f8 <_scanf_float+0x18c>
 80028e8:	4639      	mov	r1, r7
 80028ea:	4640      	mov	r0, r8
 80028ec:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80028f0:	4798      	blx	r3
 80028f2:	2800      	cmp	r0, #0
 80028f4:	f43f aedf 	beq.w	80026b6 <_scanf_float+0x4a>
 80028f8:	e6ea      	b.n	80026d0 <_scanf_float+0x64>
 80028fa:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80028fe:	463a      	mov	r2, r7
 8002900:	4640      	mov	r0, r8
 8002902:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002906:	4798      	blx	r3
 8002908:	6923      	ldr	r3, [r4, #16]
 800290a:	3b01      	subs	r3, #1
 800290c:	6123      	str	r3, [r4, #16]
 800290e:	e6ec      	b.n	80026ea <_scanf_float+0x7e>
 8002910:	1e6b      	subs	r3, r5, #1
 8002912:	2b06      	cmp	r3, #6
 8002914:	d825      	bhi.n	8002962 <_scanf_float+0x2f6>
 8002916:	2d02      	cmp	r5, #2
 8002918:	d836      	bhi.n	8002988 <_scanf_float+0x31c>
 800291a:	455e      	cmp	r6, fp
 800291c:	f67f aee8 	bls.w	80026f0 <_scanf_float+0x84>
 8002920:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002924:	463a      	mov	r2, r7
 8002926:	4640      	mov	r0, r8
 8002928:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800292c:	4798      	blx	r3
 800292e:	6923      	ldr	r3, [r4, #16]
 8002930:	3b01      	subs	r3, #1
 8002932:	6123      	str	r3, [r4, #16]
 8002934:	e7f1      	b.n	800291a <_scanf_float+0x2ae>
 8002936:	9802      	ldr	r0, [sp, #8]
 8002938:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800293c:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8002940:	463a      	mov	r2, r7
 8002942:	9002      	str	r0, [sp, #8]
 8002944:	4640      	mov	r0, r8
 8002946:	4798      	blx	r3
 8002948:	6923      	ldr	r3, [r4, #16]
 800294a:	3b01      	subs	r3, #1
 800294c:	6123      	str	r3, [r4, #16]
 800294e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002952:	fa5f fa8a 	uxtb.w	sl, sl
 8002956:	f1ba 0f02 	cmp.w	sl, #2
 800295a:	d1ec      	bne.n	8002936 <_scanf_float+0x2ca>
 800295c:	3d03      	subs	r5, #3
 800295e:	b2ed      	uxtb	r5, r5
 8002960:	1b76      	subs	r6, r6, r5
 8002962:	6823      	ldr	r3, [r4, #0]
 8002964:	05da      	lsls	r2, r3, #23
 8002966:	d52f      	bpl.n	80029c8 <_scanf_float+0x35c>
 8002968:	055b      	lsls	r3, r3, #21
 800296a:	d510      	bpl.n	800298e <_scanf_float+0x322>
 800296c:	455e      	cmp	r6, fp
 800296e:	f67f aebf 	bls.w	80026f0 <_scanf_float+0x84>
 8002972:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002976:	463a      	mov	r2, r7
 8002978:	4640      	mov	r0, r8
 800297a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800297e:	4798      	blx	r3
 8002980:	6923      	ldr	r3, [r4, #16]
 8002982:	3b01      	subs	r3, #1
 8002984:	6123      	str	r3, [r4, #16]
 8002986:	e7f1      	b.n	800296c <_scanf_float+0x300>
 8002988:	46aa      	mov	sl, r5
 800298a:	9602      	str	r6, [sp, #8]
 800298c:	e7df      	b.n	800294e <_scanf_float+0x2e2>
 800298e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8002992:	6923      	ldr	r3, [r4, #16]
 8002994:	2965      	cmp	r1, #101	; 0x65
 8002996:	f103 33ff 	add.w	r3, r3, #4294967295
 800299a:	f106 35ff 	add.w	r5, r6, #4294967295
 800299e:	6123      	str	r3, [r4, #16]
 80029a0:	d00c      	beq.n	80029bc <_scanf_float+0x350>
 80029a2:	2945      	cmp	r1, #69	; 0x45
 80029a4:	d00a      	beq.n	80029bc <_scanf_float+0x350>
 80029a6:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80029aa:	463a      	mov	r2, r7
 80029ac:	4640      	mov	r0, r8
 80029ae:	4798      	blx	r3
 80029b0:	6923      	ldr	r3, [r4, #16]
 80029b2:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 80029b6:	3b01      	subs	r3, #1
 80029b8:	1eb5      	subs	r5, r6, #2
 80029ba:	6123      	str	r3, [r4, #16]
 80029bc:	463a      	mov	r2, r7
 80029be:	4640      	mov	r0, r8
 80029c0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80029c4:	4798      	blx	r3
 80029c6:	462e      	mov	r6, r5
 80029c8:	6825      	ldr	r5, [r4, #0]
 80029ca:	f015 0510 	ands.w	r5, r5, #16
 80029ce:	d155      	bne.n	8002a7c <_scanf_float+0x410>
 80029d0:	7035      	strb	r5, [r6, #0]
 80029d2:	6823      	ldr	r3, [r4, #0]
 80029d4:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80029d8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80029dc:	d11d      	bne.n	8002a1a <_scanf_float+0x3ae>
 80029de:	9b01      	ldr	r3, [sp, #4]
 80029e0:	454b      	cmp	r3, r9
 80029e2:	eba3 0209 	sub.w	r2, r3, r9
 80029e6:	d125      	bne.n	8002a34 <_scanf_float+0x3c8>
 80029e8:	2200      	movs	r2, #0
 80029ea:	4659      	mov	r1, fp
 80029ec:	4640      	mov	r0, r8
 80029ee:	f002 fc23 	bl	8005238 <_strtod_r>
 80029f2:	9b03      	ldr	r3, [sp, #12]
 80029f4:	f8d4 c000 	ldr.w	ip, [r4]
 80029f8:	681b      	ldr	r3, [r3, #0]
 80029fa:	f01c 0f02 	tst.w	ip, #2
 80029fe:	4606      	mov	r6, r0
 8002a00:	460f      	mov	r7, r1
 8002a02:	f103 0204 	add.w	r2, r3, #4
 8002a06:	d020      	beq.n	8002a4a <_scanf_float+0x3de>
 8002a08:	9903      	ldr	r1, [sp, #12]
 8002a0a:	600a      	str	r2, [r1, #0]
 8002a0c:	681b      	ldr	r3, [r3, #0]
 8002a0e:	e9c3 6700 	strd	r6, r7, [r3]
 8002a12:	68e3      	ldr	r3, [r4, #12]
 8002a14:	3301      	adds	r3, #1
 8002a16:	60e3      	str	r3, [r4, #12]
 8002a18:	e66b      	b.n	80026f2 <_scanf_float+0x86>
 8002a1a:	9b04      	ldr	r3, [sp, #16]
 8002a1c:	2b00      	cmp	r3, #0
 8002a1e:	d0e3      	beq.n	80029e8 <_scanf_float+0x37c>
 8002a20:	9905      	ldr	r1, [sp, #20]
 8002a22:	230a      	movs	r3, #10
 8002a24:	462a      	mov	r2, r5
 8002a26:	4640      	mov	r0, r8
 8002a28:	3101      	adds	r1, #1
 8002a2a:	f002 fc89 	bl	8005340 <_strtol_r>
 8002a2e:	9b04      	ldr	r3, [sp, #16]
 8002a30:	9e05      	ldr	r6, [sp, #20]
 8002a32:	1ac2      	subs	r2, r0, r3
 8002a34:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8002a38:	429e      	cmp	r6, r3
 8002a3a:	bf28      	it	cs
 8002a3c:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8002a40:	4630      	mov	r0, r6
 8002a42:	490f      	ldr	r1, [pc, #60]	; (8002a80 <_scanf_float+0x414>)
 8002a44:	f000 f8e2 	bl	8002c0c <siprintf>
 8002a48:	e7ce      	b.n	80029e8 <_scanf_float+0x37c>
 8002a4a:	f01c 0f04 	tst.w	ip, #4
 8002a4e:	d1db      	bne.n	8002a08 <_scanf_float+0x39c>
 8002a50:	f8dd c00c 	ldr.w	ip, [sp, #12]
 8002a54:	f8cc 2000 	str.w	r2, [ip]
 8002a58:	f8d3 8000 	ldr.w	r8, [r3]
 8002a5c:	4602      	mov	r2, r0
 8002a5e:	460b      	mov	r3, r1
 8002a60:	f7fd ffd4 	bl	8000a0c <__aeabi_dcmpun>
 8002a64:	b128      	cbz	r0, 8002a72 <_scanf_float+0x406>
 8002a66:	4807      	ldr	r0, [pc, #28]	; (8002a84 <_scanf_float+0x418>)
 8002a68:	f000 f9c2 	bl	8002df0 <nanf>
 8002a6c:	f8c8 0000 	str.w	r0, [r8]
 8002a70:	e7cf      	b.n	8002a12 <_scanf_float+0x3a6>
 8002a72:	4630      	mov	r0, r6
 8002a74:	4639      	mov	r1, r7
 8002a76:	f7fe f827 	bl	8000ac8 <__aeabi_d2f>
 8002a7a:	e7f7      	b.n	8002a6c <_scanf_float+0x400>
 8002a7c:	2500      	movs	r5, #0
 8002a7e:	e638      	b.n	80026f2 <_scanf_float+0x86>
 8002a80:	0800658e 	.word	0x0800658e
 8002a84:	08006925 	.word	0x08006925

08002a88 <std>:
 8002a88:	2300      	movs	r3, #0
 8002a8a:	b510      	push	{r4, lr}
 8002a8c:	4604      	mov	r4, r0
 8002a8e:	e9c0 3300 	strd	r3, r3, [r0]
 8002a92:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002a96:	6083      	str	r3, [r0, #8]
 8002a98:	8181      	strh	r1, [r0, #12]
 8002a9a:	6643      	str	r3, [r0, #100]	; 0x64
 8002a9c:	81c2      	strh	r2, [r0, #14]
 8002a9e:	6183      	str	r3, [r0, #24]
 8002aa0:	4619      	mov	r1, r3
 8002aa2:	2208      	movs	r2, #8
 8002aa4:	305c      	adds	r0, #92	; 0x5c
 8002aa6:	f000 f914 	bl	8002cd2 <memset>
 8002aaa:	4b0d      	ldr	r3, [pc, #52]	; (8002ae0 <std+0x58>)
 8002aac:	6224      	str	r4, [r4, #32]
 8002aae:	6263      	str	r3, [r4, #36]	; 0x24
 8002ab0:	4b0c      	ldr	r3, [pc, #48]	; (8002ae4 <std+0x5c>)
 8002ab2:	62a3      	str	r3, [r4, #40]	; 0x28
 8002ab4:	4b0c      	ldr	r3, [pc, #48]	; (8002ae8 <std+0x60>)
 8002ab6:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002ab8:	4b0c      	ldr	r3, [pc, #48]	; (8002aec <std+0x64>)
 8002aba:	6323      	str	r3, [r4, #48]	; 0x30
 8002abc:	4b0c      	ldr	r3, [pc, #48]	; (8002af0 <std+0x68>)
 8002abe:	429c      	cmp	r4, r3
 8002ac0:	d006      	beq.n	8002ad0 <std+0x48>
 8002ac2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8002ac6:	4294      	cmp	r4, r2
 8002ac8:	d002      	beq.n	8002ad0 <std+0x48>
 8002aca:	33d0      	adds	r3, #208	; 0xd0
 8002acc:	429c      	cmp	r4, r3
 8002ace:	d105      	bne.n	8002adc <std+0x54>
 8002ad0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8002ad4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002ad8:	f000 b978 	b.w	8002dcc <__retarget_lock_init_recursive>
 8002adc:	bd10      	pop	{r4, pc}
 8002ade:	bf00      	nop
 8002ae0:	08002c4d 	.word	0x08002c4d
 8002ae4:	08002c6f 	.word	0x08002c6f
 8002ae8:	08002ca7 	.word	0x08002ca7
 8002aec:	08002ccb 	.word	0x08002ccb
 8002af0:	200001f8 	.word	0x200001f8

08002af4 <stdio_exit_handler>:
 8002af4:	4a02      	ldr	r2, [pc, #8]	; (8002b00 <stdio_exit_handler+0xc>)
 8002af6:	4903      	ldr	r1, [pc, #12]	; (8002b04 <stdio_exit_handler+0x10>)
 8002af8:	4803      	ldr	r0, [pc, #12]	; (8002b08 <stdio_exit_handler+0x14>)
 8002afa:	f000 b869 	b.w	8002bd0 <_fwalk_sglue>
 8002afe:	bf00      	nop
 8002b00:	2000000c 	.word	0x2000000c
 8002b04:	080056f9 	.word	0x080056f9
 8002b08:	20000018 	.word	0x20000018

08002b0c <cleanup_stdio>:
 8002b0c:	6841      	ldr	r1, [r0, #4]
 8002b0e:	4b0c      	ldr	r3, [pc, #48]	; (8002b40 <cleanup_stdio+0x34>)
 8002b10:	b510      	push	{r4, lr}
 8002b12:	4299      	cmp	r1, r3
 8002b14:	4604      	mov	r4, r0
 8002b16:	d001      	beq.n	8002b1c <cleanup_stdio+0x10>
 8002b18:	f002 fdee 	bl	80056f8 <_fflush_r>
 8002b1c:	68a1      	ldr	r1, [r4, #8]
 8002b1e:	4b09      	ldr	r3, [pc, #36]	; (8002b44 <cleanup_stdio+0x38>)
 8002b20:	4299      	cmp	r1, r3
 8002b22:	d002      	beq.n	8002b2a <cleanup_stdio+0x1e>
 8002b24:	4620      	mov	r0, r4
 8002b26:	f002 fde7 	bl	80056f8 <_fflush_r>
 8002b2a:	68e1      	ldr	r1, [r4, #12]
 8002b2c:	4b06      	ldr	r3, [pc, #24]	; (8002b48 <cleanup_stdio+0x3c>)
 8002b2e:	4299      	cmp	r1, r3
 8002b30:	d004      	beq.n	8002b3c <cleanup_stdio+0x30>
 8002b32:	4620      	mov	r0, r4
 8002b34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002b38:	f002 bdde 	b.w	80056f8 <_fflush_r>
 8002b3c:	bd10      	pop	{r4, pc}
 8002b3e:	bf00      	nop
 8002b40:	200001f8 	.word	0x200001f8
 8002b44:	20000260 	.word	0x20000260
 8002b48:	200002c8 	.word	0x200002c8

08002b4c <global_stdio_init.part.0>:
 8002b4c:	b510      	push	{r4, lr}
 8002b4e:	4b0b      	ldr	r3, [pc, #44]	; (8002b7c <global_stdio_init.part.0+0x30>)
 8002b50:	4c0b      	ldr	r4, [pc, #44]	; (8002b80 <global_stdio_init.part.0+0x34>)
 8002b52:	4a0c      	ldr	r2, [pc, #48]	; (8002b84 <global_stdio_init.part.0+0x38>)
 8002b54:	4620      	mov	r0, r4
 8002b56:	601a      	str	r2, [r3, #0]
 8002b58:	2104      	movs	r1, #4
 8002b5a:	2200      	movs	r2, #0
 8002b5c:	f7ff ff94 	bl	8002a88 <std>
 8002b60:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8002b64:	2201      	movs	r2, #1
 8002b66:	2109      	movs	r1, #9
 8002b68:	f7ff ff8e 	bl	8002a88 <std>
 8002b6c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8002b70:	2202      	movs	r2, #2
 8002b72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002b76:	2112      	movs	r1, #18
 8002b78:	f7ff bf86 	b.w	8002a88 <std>
 8002b7c:	20000330 	.word	0x20000330
 8002b80:	200001f8 	.word	0x200001f8
 8002b84:	08002af5 	.word	0x08002af5

08002b88 <__sfp_lock_acquire>:
 8002b88:	4801      	ldr	r0, [pc, #4]	; (8002b90 <__sfp_lock_acquire+0x8>)
 8002b8a:	f000 b920 	b.w	8002dce <__retarget_lock_acquire_recursive>
 8002b8e:	bf00      	nop
 8002b90:	20000339 	.word	0x20000339

08002b94 <__sfp_lock_release>:
 8002b94:	4801      	ldr	r0, [pc, #4]	; (8002b9c <__sfp_lock_release+0x8>)
 8002b96:	f000 b91b 	b.w	8002dd0 <__retarget_lock_release_recursive>
 8002b9a:	bf00      	nop
 8002b9c:	20000339 	.word	0x20000339

08002ba0 <__sinit>:
 8002ba0:	b510      	push	{r4, lr}
 8002ba2:	4604      	mov	r4, r0
 8002ba4:	f7ff fff0 	bl	8002b88 <__sfp_lock_acquire>
 8002ba8:	6a23      	ldr	r3, [r4, #32]
 8002baa:	b11b      	cbz	r3, 8002bb4 <__sinit+0x14>
 8002bac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002bb0:	f7ff bff0 	b.w	8002b94 <__sfp_lock_release>
 8002bb4:	4b04      	ldr	r3, [pc, #16]	; (8002bc8 <__sinit+0x28>)
 8002bb6:	6223      	str	r3, [r4, #32]
 8002bb8:	4b04      	ldr	r3, [pc, #16]	; (8002bcc <__sinit+0x2c>)
 8002bba:	681b      	ldr	r3, [r3, #0]
 8002bbc:	2b00      	cmp	r3, #0
 8002bbe:	d1f5      	bne.n	8002bac <__sinit+0xc>
 8002bc0:	f7ff ffc4 	bl	8002b4c <global_stdio_init.part.0>
 8002bc4:	e7f2      	b.n	8002bac <__sinit+0xc>
 8002bc6:	bf00      	nop
 8002bc8:	08002b0d 	.word	0x08002b0d
 8002bcc:	20000330 	.word	0x20000330

08002bd0 <_fwalk_sglue>:
 8002bd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002bd4:	4607      	mov	r7, r0
 8002bd6:	4688      	mov	r8, r1
 8002bd8:	4614      	mov	r4, r2
 8002bda:	2600      	movs	r6, #0
 8002bdc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8002be0:	f1b9 0901 	subs.w	r9, r9, #1
 8002be4:	d505      	bpl.n	8002bf2 <_fwalk_sglue+0x22>
 8002be6:	6824      	ldr	r4, [r4, #0]
 8002be8:	2c00      	cmp	r4, #0
 8002bea:	d1f7      	bne.n	8002bdc <_fwalk_sglue+0xc>
 8002bec:	4630      	mov	r0, r6
 8002bee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002bf2:	89ab      	ldrh	r3, [r5, #12]
 8002bf4:	2b01      	cmp	r3, #1
 8002bf6:	d907      	bls.n	8002c08 <_fwalk_sglue+0x38>
 8002bf8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002bfc:	3301      	adds	r3, #1
 8002bfe:	d003      	beq.n	8002c08 <_fwalk_sglue+0x38>
 8002c00:	4629      	mov	r1, r5
 8002c02:	4638      	mov	r0, r7
 8002c04:	47c0      	blx	r8
 8002c06:	4306      	orrs	r6, r0
 8002c08:	3568      	adds	r5, #104	; 0x68
 8002c0a:	e7e9      	b.n	8002be0 <_fwalk_sglue+0x10>

08002c0c <siprintf>:
 8002c0c:	b40e      	push	{r1, r2, r3}
 8002c0e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8002c12:	b500      	push	{lr}
 8002c14:	b09c      	sub	sp, #112	; 0x70
 8002c16:	ab1d      	add	r3, sp, #116	; 0x74
 8002c18:	9002      	str	r0, [sp, #8]
 8002c1a:	9006      	str	r0, [sp, #24]
 8002c1c:	9107      	str	r1, [sp, #28]
 8002c1e:	9104      	str	r1, [sp, #16]
 8002c20:	4808      	ldr	r0, [pc, #32]	; (8002c44 <siprintf+0x38>)
 8002c22:	4909      	ldr	r1, [pc, #36]	; (8002c48 <siprintf+0x3c>)
 8002c24:	f853 2b04 	ldr.w	r2, [r3], #4
 8002c28:	9105      	str	r1, [sp, #20]
 8002c2a:	6800      	ldr	r0, [r0, #0]
 8002c2c:	a902      	add	r1, sp, #8
 8002c2e:	9301      	str	r3, [sp, #4]
 8002c30:	f002 fbe2 	bl	80053f8 <_svfiprintf_r>
 8002c34:	2200      	movs	r2, #0
 8002c36:	9b02      	ldr	r3, [sp, #8]
 8002c38:	701a      	strb	r2, [r3, #0]
 8002c3a:	b01c      	add	sp, #112	; 0x70
 8002c3c:	f85d eb04 	ldr.w	lr, [sp], #4
 8002c40:	b003      	add	sp, #12
 8002c42:	4770      	bx	lr
 8002c44:	20000064 	.word	0x20000064
 8002c48:	ffff0208 	.word	0xffff0208

08002c4c <__sread>:
 8002c4c:	b510      	push	{r4, lr}
 8002c4e:	460c      	mov	r4, r1
 8002c50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002c54:	f000 f86c 	bl	8002d30 <_read_r>
 8002c58:	2800      	cmp	r0, #0
 8002c5a:	bfab      	itete	ge
 8002c5c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8002c5e:	89a3      	ldrhlt	r3, [r4, #12]
 8002c60:	181b      	addge	r3, r3, r0
 8002c62:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8002c66:	bfac      	ite	ge
 8002c68:	6563      	strge	r3, [r4, #84]	; 0x54
 8002c6a:	81a3      	strhlt	r3, [r4, #12]
 8002c6c:	bd10      	pop	{r4, pc}

08002c6e <__swrite>:
 8002c6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002c72:	461f      	mov	r7, r3
 8002c74:	898b      	ldrh	r3, [r1, #12]
 8002c76:	4605      	mov	r5, r0
 8002c78:	05db      	lsls	r3, r3, #23
 8002c7a:	460c      	mov	r4, r1
 8002c7c:	4616      	mov	r6, r2
 8002c7e:	d505      	bpl.n	8002c8c <__swrite+0x1e>
 8002c80:	2302      	movs	r3, #2
 8002c82:	2200      	movs	r2, #0
 8002c84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002c88:	f000 f840 	bl	8002d0c <_lseek_r>
 8002c8c:	89a3      	ldrh	r3, [r4, #12]
 8002c8e:	4632      	mov	r2, r6
 8002c90:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002c94:	81a3      	strh	r3, [r4, #12]
 8002c96:	4628      	mov	r0, r5
 8002c98:	463b      	mov	r3, r7
 8002c9a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002c9e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002ca2:	f000 b857 	b.w	8002d54 <_write_r>

08002ca6 <__sseek>:
 8002ca6:	b510      	push	{r4, lr}
 8002ca8:	460c      	mov	r4, r1
 8002caa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002cae:	f000 f82d 	bl	8002d0c <_lseek_r>
 8002cb2:	1c43      	adds	r3, r0, #1
 8002cb4:	89a3      	ldrh	r3, [r4, #12]
 8002cb6:	bf15      	itete	ne
 8002cb8:	6560      	strne	r0, [r4, #84]	; 0x54
 8002cba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8002cbe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002cc2:	81a3      	strheq	r3, [r4, #12]
 8002cc4:	bf18      	it	ne
 8002cc6:	81a3      	strhne	r3, [r4, #12]
 8002cc8:	bd10      	pop	{r4, pc}

08002cca <__sclose>:
 8002cca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002cce:	f000 b80d 	b.w	8002cec <_close_r>

08002cd2 <memset>:
 8002cd2:	4603      	mov	r3, r0
 8002cd4:	4402      	add	r2, r0
 8002cd6:	4293      	cmp	r3, r2
 8002cd8:	d100      	bne.n	8002cdc <memset+0xa>
 8002cda:	4770      	bx	lr
 8002cdc:	f803 1b01 	strb.w	r1, [r3], #1
 8002ce0:	e7f9      	b.n	8002cd6 <memset+0x4>
	...

08002ce4 <_localeconv_r>:
 8002ce4:	4800      	ldr	r0, [pc, #0]	; (8002ce8 <_localeconv_r+0x4>)
 8002ce6:	4770      	bx	lr
 8002ce8:	20000158 	.word	0x20000158

08002cec <_close_r>:
 8002cec:	b538      	push	{r3, r4, r5, lr}
 8002cee:	2300      	movs	r3, #0
 8002cf0:	4d05      	ldr	r5, [pc, #20]	; (8002d08 <_close_r+0x1c>)
 8002cf2:	4604      	mov	r4, r0
 8002cf4:	4608      	mov	r0, r1
 8002cf6:	602b      	str	r3, [r5, #0]
 8002cf8:	f7fe f8c9 	bl	8000e8e <_close>
 8002cfc:	1c43      	adds	r3, r0, #1
 8002cfe:	d102      	bne.n	8002d06 <_close_r+0x1a>
 8002d00:	682b      	ldr	r3, [r5, #0]
 8002d02:	b103      	cbz	r3, 8002d06 <_close_r+0x1a>
 8002d04:	6023      	str	r3, [r4, #0]
 8002d06:	bd38      	pop	{r3, r4, r5, pc}
 8002d08:	20000334 	.word	0x20000334

08002d0c <_lseek_r>:
 8002d0c:	b538      	push	{r3, r4, r5, lr}
 8002d0e:	4604      	mov	r4, r0
 8002d10:	4608      	mov	r0, r1
 8002d12:	4611      	mov	r1, r2
 8002d14:	2200      	movs	r2, #0
 8002d16:	4d05      	ldr	r5, [pc, #20]	; (8002d2c <_lseek_r+0x20>)
 8002d18:	602a      	str	r2, [r5, #0]
 8002d1a:	461a      	mov	r2, r3
 8002d1c:	f7fe f8db 	bl	8000ed6 <_lseek>
 8002d20:	1c43      	adds	r3, r0, #1
 8002d22:	d102      	bne.n	8002d2a <_lseek_r+0x1e>
 8002d24:	682b      	ldr	r3, [r5, #0]
 8002d26:	b103      	cbz	r3, 8002d2a <_lseek_r+0x1e>
 8002d28:	6023      	str	r3, [r4, #0]
 8002d2a:	bd38      	pop	{r3, r4, r5, pc}
 8002d2c:	20000334 	.word	0x20000334

08002d30 <_read_r>:
 8002d30:	b538      	push	{r3, r4, r5, lr}
 8002d32:	4604      	mov	r4, r0
 8002d34:	4608      	mov	r0, r1
 8002d36:	4611      	mov	r1, r2
 8002d38:	2200      	movs	r2, #0
 8002d3a:	4d05      	ldr	r5, [pc, #20]	; (8002d50 <_read_r+0x20>)
 8002d3c:	602a      	str	r2, [r5, #0]
 8002d3e:	461a      	mov	r2, r3
 8002d40:	f7fe f86c 	bl	8000e1c <_read>
 8002d44:	1c43      	adds	r3, r0, #1
 8002d46:	d102      	bne.n	8002d4e <_read_r+0x1e>
 8002d48:	682b      	ldr	r3, [r5, #0]
 8002d4a:	b103      	cbz	r3, 8002d4e <_read_r+0x1e>
 8002d4c:	6023      	str	r3, [r4, #0]
 8002d4e:	bd38      	pop	{r3, r4, r5, pc}
 8002d50:	20000334 	.word	0x20000334

08002d54 <_write_r>:
 8002d54:	b538      	push	{r3, r4, r5, lr}
 8002d56:	4604      	mov	r4, r0
 8002d58:	4608      	mov	r0, r1
 8002d5a:	4611      	mov	r1, r2
 8002d5c:	2200      	movs	r2, #0
 8002d5e:	4d05      	ldr	r5, [pc, #20]	; (8002d74 <_write_r+0x20>)
 8002d60:	602a      	str	r2, [r5, #0]
 8002d62:	461a      	mov	r2, r3
 8002d64:	f7fe f877 	bl	8000e56 <_write>
 8002d68:	1c43      	adds	r3, r0, #1
 8002d6a:	d102      	bne.n	8002d72 <_write_r+0x1e>
 8002d6c:	682b      	ldr	r3, [r5, #0]
 8002d6e:	b103      	cbz	r3, 8002d72 <_write_r+0x1e>
 8002d70:	6023      	str	r3, [r4, #0]
 8002d72:	bd38      	pop	{r3, r4, r5, pc}
 8002d74:	20000334 	.word	0x20000334

08002d78 <__errno>:
 8002d78:	4b01      	ldr	r3, [pc, #4]	; (8002d80 <__errno+0x8>)
 8002d7a:	6818      	ldr	r0, [r3, #0]
 8002d7c:	4770      	bx	lr
 8002d7e:	bf00      	nop
 8002d80:	20000064 	.word	0x20000064

08002d84 <__libc_init_array>:
 8002d84:	b570      	push	{r4, r5, r6, lr}
 8002d86:	2600      	movs	r6, #0
 8002d88:	4d0c      	ldr	r5, [pc, #48]	; (8002dbc <__libc_init_array+0x38>)
 8002d8a:	4c0d      	ldr	r4, [pc, #52]	; (8002dc0 <__libc_init_array+0x3c>)
 8002d8c:	1b64      	subs	r4, r4, r5
 8002d8e:	10a4      	asrs	r4, r4, #2
 8002d90:	42a6      	cmp	r6, r4
 8002d92:	d109      	bne.n	8002da8 <__libc_init_array+0x24>
 8002d94:	f003 fbc2 	bl	800651c <_init>
 8002d98:	2600      	movs	r6, #0
 8002d9a:	4d0a      	ldr	r5, [pc, #40]	; (8002dc4 <__libc_init_array+0x40>)
 8002d9c:	4c0a      	ldr	r4, [pc, #40]	; (8002dc8 <__libc_init_array+0x44>)
 8002d9e:	1b64      	subs	r4, r4, r5
 8002da0:	10a4      	asrs	r4, r4, #2
 8002da2:	42a6      	cmp	r6, r4
 8002da4:	d105      	bne.n	8002db2 <__libc_init_array+0x2e>
 8002da6:	bd70      	pop	{r4, r5, r6, pc}
 8002da8:	f855 3b04 	ldr.w	r3, [r5], #4
 8002dac:	4798      	blx	r3
 8002dae:	3601      	adds	r6, #1
 8002db0:	e7ee      	b.n	8002d90 <__libc_init_array+0xc>
 8002db2:	f855 3b04 	ldr.w	r3, [r5], #4
 8002db6:	4798      	blx	r3
 8002db8:	3601      	adds	r6, #1
 8002dba:	e7f2      	b.n	8002da2 <__libc_init_array+0x1e>
 8002dbc:	08006988 	.word	0x08006988
 8002dc0:	08006988 	.word	0x08006988
 8002dc4:	08006988 	.word	0x08006988
 8002dc8:	0800698c 	.word	0x0800698c

08002dcc <__retarget_lock_init_recursive>:
 8002dcc:	4770      	bx	lr

08002dce <__retarget_lock_acquire_recursive>:
 8002dce:	4770      	bx	lr

08002dd0 <__retarget_lock_release_recursive>:
 8002dd0:	4770      	bx	lr

08002dd2 <memchr>:
 8002dd2:	4603      	mov	r3, r0
 8002dd4:	b510      	push	{r4, lr}
 8002dd6:	b2c9      	uxtb	r1, r1
 8002dd8:	4402      	add	r2, r0
 8002dda:	4293      	cmp	r3, r2
 8002ddc:	4618      	mov	r0, r3
 8002dde:	d101      	bne.n	8002de4 <memchr+0x12>
 8002de0:	2000      	movs	r0, #0
 8002de2:	e003      	b.n	8002dec <memchr+0x1a>
 8002de4:	7804      	ldrb	r4, [r0, #0]
 8002de6:	3301      	adds	r3, #1
 8002de8:	428c      	cmp	r4, r1
 8002dea:	d1f6      	bne.n	8002dda <memchr+0x8>
 8002dec:	bd10      	pop	{r4, pc}
	...

08002df0 <nanf>:
 8002df0:	4800      	ldr	r0, [pc, #0]	; (8002df4 <nanf+0x4>)
 8002df2:	4770      	bx	lr
 8002df4:	7fc00000 	.word	0x7fc00000

08002df8 <quorem>:
 8002df8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002dfc:	6903      	ldr	r3, [r0, #16]
 8002dfe:	690c      	ldr	r4, [r1, #16]
 8002e00:	4607      	mov	r7, r0
 8002e02:	42a3      	cmp	r3, r4
 8002e04:	db7f      	blt.n	8002f06 <quorem+0x10e>
 8002e06:	3c01      	subs	r4, #1
 8002e08:	f100 0514 	add.w	r5, r0, #20
 8002e0c:	f101 0814 	add.w	r8, r1, #20
 8002e10:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002e14:	9301      	str	r3, [sp, #4]
 8002e16:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002e1a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002e1e:	3301      	adds	r3, #1
 8002e20:	429a      	cmp	r2, r3
 8002e22:	fbb2 f6f3 	udiv	r6, r2, r3
 8002e26:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8002e2a:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002e2e:	d331      	bcc.n	8002e94 <quorem+0x9c>
 8002e30:	f04f 0e00 	mov.w	lr, #0
 8002e34:	4640      	mov	r0, r8
 8002e36:	46ac      	mov	ip, r5
 8002e38:	46f2      	mov	sl, lr
 8002e3a:	f850 2b04 	ldr.w	r2, [r0], #4
 8002e3e:	b293      	uxth	r3, r2
 8002e40:	fb06 e303 	mla	r3, r6, r3, lr
 8002e44:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002e48:	0c1a      	lsrs	r2, r3, #16
 8002e4a:	b29b      	uxth	r3, r3
 8002e4c:	fb06 220e 	mla	r2, r6, lr, r2
 8002e50:	ebaa 0303 	sub.w	r3, sl, r3
 8002e54:	f8dc a000 	ldr.w	sl, [ip]
 8002e58:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002e5c:	fa1f fa8a 	uxth.w	sl, sl
 8002e60:	4453      	add	r3, sl
 8002e62:	f8dc a000 	ldr.w	sl, [ip]
 8002e66:	b292      	uxth	r2, r2
 8002e68:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8002e6c:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002e70:	b29b      	uxth	r3, r3
 8002e72:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002e76:	4581      	cmp	r9, r0
 8002e78:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8002e7c:	f84c 3b04 	str.w	r3, [ip], #4
 8002e80:	d2db      	bcs.n	8002e3a <quorem+0x42>
 8002e82:	f855 300b 	ldr.w	r3, [r5, fp]
 8002e86:	b92b      	cbnz	r3, 8002e94 <quorem+0x9c>
 8002e88:	9b01      	ldr	r3, [sp, #4]
 8002e8a:	3b04      	subs	r3, #4
 8002e8c:	429d      	cmp	r5, r3
 8002e8e:	461a      	mov	r2, r3
 8002e90:	d32d      	bcc.n	8002eee <quorem+0xf6>
 8002e92:	613c      	str	r4, [r7, #16]
 8002e94:	4638      	mov	r0, r7
 8002e96:	f001 f9df 	bl	8004258 <__mcmp>
 8002e9a:	2800      	cmp	r0, #0
 8002e9c:	db23      	blt.n	8002ee6 <quorem+0xee>
 8002e9e:	4629      	mov	r1, r5
 8002ea0:	2000      	movs	r0, #0
 8002ea2:	3601      	adds	r6, #1
 8002ea4:	f858 2b04 	ldr.w	r2, [r8], #4
 8002ea8:	f8d1 c000 	ldr.w	ip, [r1]
 8002eac:	b293      	uxth	r3, r2
 8002eae:	1ac3      	subs	r3, r0, r3
 8002eb0:	0c12      	lsrs	r2, r2, #16
 8002eb2:	fa1f f08c 	uxth.w	r0, ip
 8002eb6:	4403      	add	r3, r0
 8002eb8:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8002ebc:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002ec0:	b29b      	uxth	r3, r3
 8002ec2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002ec6:	45c1      	cmp	r9, r8
 8002ec8:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002ecc:	f841 3b04 	str.w	r3, [r1], #4
 8002ed0:	d2e8      	bcs.n	8002ea4 <quorem+0xac>
 8002ed2:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002ed6:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002eda:	b922      	cbnz	r2, 8002ee6 <quorem+0xee>
 8002edc:	3b04      	subs	r3, #4
 8002ede:	429d      	cmp	r5, r3
 8002ee0:	461a      	mov	r2, r3
 8002ee2:	d30a      	bcc.n	8002efa <quorem+0x102>
 8002ee4:	613c      	str	r4, [r7, #16]
 8002ee6:	4630      	mov	r0, r6
 8002ee8:	b003      	add	sp, #12
 8002eea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002eee:	6812      	ldr	r2, [r2, #0]
 8002ef0:	3b04      	subs	r3, #4
 8002ef2:	2a00      	cmp	r2, #0
 8002ef4:	d1cd      	bne.n	8002e92 <quorem+0x9a>
 8002ef6:	3c01      	subs	r4, #1
 8002ef8:	e7c8      	b.n	8002e8c <quorem+0x94>
 8002efa:	6812      	ldr	r2, [r2, #0]
 8002efc:	3b04      	subs	r3, #4
 8002efe:	2a00      	cmp	r2, #0
 8002f00:	d1f0      	bne.n	8002ee4 <quorem+0xec>
 8002f02:	3c01      	subs	r4, #1
 8002f04:	e7eb      	b.n	8002ede <quorem+0xe6>
 8002f06:	2000      	movs	r0, #0
 8002f08:	e7ee      	b.n	8002ee8 <quorem+0xf0>
 8002f0a:	0000      	movs	r0, r0
 8002f0c:	0000      	movs	r0, r0
	...

08002f10 <_dtoa_r>:
 8002f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002f14:	4616      	mov	r6, r2
 8002f16:	461f      	mov	r7, r3
 8002f18:	69c4      	ldr	r4, [r0, #28]
 8002f1a:	b099      	sub	sp, #100	; 0x64
 8002f1c:	4605      	mov	r5, r0
 8002f1e:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8002f22:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 8002f26:	b974      	cbnz	r4, 8002f46 <_dtoa_r+0x36>
 8002f28:	2010      	movs	r0, #16
 8002f2a:	f000 fe1d 	bl	8003b68 <malloc>
 8002f2e:	4602      	mov	r2, r0
 8002f30:	61e8      	str	r0, [r5, #28]
 8002f32:	b920      	cbnz	r0, 8002f3e <_dtoa_r+0x2e>
 8002f34:	21ef      	movs	r1, #239	; 0xef
 8002f36:	4bac      	ldr	r3, [pc, #688]	; (80031e8 <_dtoa_r+0x2d8>)
 8002f38:	48ac      	ldr	r0, [pc, #688]	; (80031ec <_dtoa_r+0x2dc>)
 8002f3a:	f002 fc55 	bl	80057e8 <__assert_func>
 8002f3e:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8002f42:	6004      	str	r4, [r0, #0]
 8002f44:	60c4      	str	r4, [r0, #12]
 8002f46:	69eb      	ldr	r3, [r5, #28]
 8002f48:	6819      	ldr	r1, [r3, #0]
 8002f4a:	b151      	cbz	r1, 8002f62 <_dtoa_r+0x52>
 8002f4c:	685a      	ldr	r2, [r3, #4]
 8002f4e:	2301      	movs	r3, #1
 8002f50:	4093      	lsls	r3, r2
 8002f52:	604a      	str	r2, [r1, #4]
 8002f54:	608b      	str	r3, [r1, #8]
 8002f56:	4628      	mov	r0, r5
 8002f58:	f000 fefa 	bl	8003d50 <_Bfree>
 8002f5c:	2200      	movs	r2, #0
 8002f5e:	69eb      	ldr	r3, [r5, #28]
 8002f60:	601a      	str	r2, [r3, #0]
 8002f62:	1e3b      	subs	r3, r7, #0
 8002f64:	bfaf      	iteee	ge
 8002f66:	2300      	movge	r3, #0
 8002f68:	2201      	movlt	r2, #1
 8002f6a:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002f6e:	9305      	strlt	r3, [sp, #20]
 8002f70:	bfa8      	it	ge
 8002f72:	f8c8 3000 	strge.w	r3, [r8]
 8002f76:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8002f7a:	4b9d      	ldr	r3, [pc, #628]	; (80031f0 <_dtoa_r+0x2e0>)
 8002f7c:	bfb8      	it	lt
 8002f7e:	f8c8 2000 	strlt.w	r2, [r8]
 8002f82:	ea33 0309 	bics.w	r3, r3, r9
 8002f86:	d119      	bne.n	8002fbc <_dtoa_r+0xac>
 8002f88:	f242 730f 	movw	r3, #9999	; 0x270f
 8002f8c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8002f8e:	6013      	str	r3, [r2, #0]
 8002f90:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8002f94:	4333      	orrs	r3, r6
 8002f96:	f000 8589 	beq.w	8003aac <_dtoa_r+0xb9c>
 8002f9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002f9c:	b953      	cbnz	r3, 8002fb4 <_dtoa_r+0xa4>
 8002f9e:	4b95      	ldr	r3, [pc, #596]	; (80031f4 <_dtoa_r+0x2e4>)
 8002fa0:	e023      	b.n	8002fea <_dtoa_r+0xda>
 8002fa2:	4b95      	ldr	r3, [pc, #596]	; (80031f8 <_dtoa_r+0x2e8>)
 8002fa4:	9303      	str	r3, [sp, #12]
 8002fa6:	3308      	adds	r3, #8
 8002fa8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8002faa:	6013      	str	r3, [r2, #0]
 8002fac:	9803      	ldr	r0, [sp, #12]
 8002fae:	b019      	add	sp, #100	; 0x64
 8002fb0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002fb4:	4b8f      	ldr	r3, [pc, #572]	; (80031f4 <_dtoa_r+0x2e4>)
 8002fb6:	9303      	str	r3, [sp, #12]
 8002fb8:	3303      	adds	r3, #3
 8002fba:	e7f5      	b.n	8002fa8 <_dtoa_r+0x98>
 8002fbc:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8002fc0:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8002fc4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8002fc8:	2200      	movs	r2, #0
 8002fca:	2300      	movs	r3, #0
 8002fcc:	f7fd fcec 	bl	80009a8 <__aeabi_dcmpeq>
 8002fd0:	4680      	mov	r8, r0
 8002fd2:	b160      	cbz	r0, 8002fee <_dtoa_r+0xde>
 8002fd4:	2301      	movs	r3, #1
 8002fd6:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8002fd8:	6013      	str	r3, [r2, #0]
 8002fda:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8002fdc:	2b00      	cmp	r3, #0
 8002fde:	f000 8562 	beq.w	8003aa6 <_dtoa_r+0xb96>
 8002fe2:	4b86      	ldr	r3, [pc, #536]	; (80031fc <_dtoa_r+0x2ec>)
 8002fe4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8002fe6:	6013      	str	r3, [r2, #0]
 8002fe8:	3b01      	subs	r3, #1
 8002fea:	9303      	str	r3, [sp, #12]
 8002fec:	e7de      	b.n	8002fac <_dtoa_r+0x9c>
 8002fee:	ab16      	add	r3, sp, #88	; 0x58
 8002ff0:	9301      	str	r3, [sp, #4]
 8002ff2:	ab17      	add	r3, sp, #92	; 0x5c
 8002ff4:	9300      	str	r3, [sp, #0]
 8002ff6:	4628      	mov	r0, r5
 8002ff8:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8002ffc:	f001 fa3c 	bl	8004478 <__d2b>
 8003000:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8003004:	4682      	mov	sl, r0
 8003006:	2c00      	cmp	r4, #0
 8003008:	d07e      	beq.n	8003108 <_dtoa_r+0x1f8>
 800300a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800300e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003010:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 8003014:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003018:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 800301c:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8003020:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 8003024:	4619      	mov	r1, r3
 8003026:	2200      	movs	r2, #0
 8003028:	4b75      	ldr	r3, [pc, #468]	; (8003200 <_dtoa_r+0x2f0>)
 800302a:	f7fd f89d 	bl	8000168 <__aeabi_dsub>
 800302e:	a368      	add	r3, pc, #416	; (adr r3, 80031d0 <_dtoa_r+0x2c0>)
 8003030:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003034:	f7fd fa50 	bl	80004d8 <__aeabi_dmul>
 8003038:	a367      	add	r3, pc, #412	; (adr r3, 80031d8 <_dtoa_r+0x2c8>)
 800303a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800303e:	f7fd f895 	bl	800016c <__adddf3>
 8003042:	4606      	mov	r6, r0
 8003044:	4620      	mov	r0, r4
 8003046:	460f      	mov	r7, r1
 8003048:	f7fd f9dc 	bl	8000404 <__aeabi_i2d>
 800304c:	a364      	add	r3, pc, #400	; (adr r3, 80031e0 <_dtoa_r+0x2d0>)
 800304e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003052:	f7fd fa41 	bl	80004d8 <__aeabi_dmul>
 8003056:	4602      	mov	r2, r0
 8003058:	460b      	mov	r3, r1
 800305a:	4630      	mov	r0, r6
 800305c:	4639      	mov	r1, r7
 800305e:	f7fd f885 	bl	800016c <__adddf3>
 8003062:	4606      	mov	r6, r0
 8003064:	460f      	mov	r7, r1
 8003066:	f7fd fce7 	bl	8000a38 <__aeabi_d2iz>
 800306a:	2200      	movs	r2, #0
 800306c:	4683      	mov	fp, r0
 800306e:	2300      	movs	r3, #0
 8003070:	4630      	mov	r0, r6
 8003072:	4639      	mov	r1, r7
 8003074:	f7fd fca2 	bl	80009bc <__aeabi_dcmplt>
 8003078:	b148      	cbz	r0, 800308e <_dtoa_r+0x17e>
 800307a:	4658      	mov	r0, fp
 800307c:	f7fd f9c2 	bl	8000404 <__aeabi_i2d>
 8003080:	4632      	mov	r2, r6
 8003082:	463b      	mov	r3, r7
 8003084:	f7fd fc90 	bl	80009a8 <__aeabi_dcmpeq>
 8003088:	b908      	cbnz	r0, 800308e <_dtoa_r+0x17e>
 800308a:	f10b 3bff 	add.w	fp, fp, #4294967295
 800308e:	f1bb 0f16 	cmp.w	fp, #22
 8003092:	d857      	bhi.n	8003144 <_dtoa_r+0x234>
 8003094:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003098:	4b5a      	ldr	r3, [pc, #360]	; (8003204 <_dtoa_r+0x2f4>)
 800309a:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800309e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80030a2:	f7fd fc8b 	bl	80009bc <__aeabi_dcmplt>
 80030a6:	2800      	cmp	r0, #0
 80030a8:	d04e      	beq.n	8003148 <_dtoa_r+0x238>
 80030aa:	2300      	movs	r3, #0
 80030ac:	f10b 3bff 	add.w	fp, fp, #4294967295
 80030b0:	930f      	str	r3, [sp, #60]	; 0x3c
 80030b2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80030b4:	1b1b      	subs	r3, r3, r4
 80030b6:	1e5a      	subs	r2, r3, #1
 80030b8:	bf46      	itte	mi
 80030ba:	f1c3 0901 	rsbmi	r9, r3, #1
 80030be:	2300      	movmi	r3, #0
 80030c0:	f04f 0900 	movpl.w	r9, #0
 80030c4:	9209      	str	r2, [sp, #36]	; 0x24
 80030c6:	bf48      	it	mi
 80030c8:	9309      	strmi	r3, [sp, #36]	; 0x24
 80030ca:	f1bb 0f00 	cmp.w	fp, #0
 80030ce:	db3d      	blt.n	800314c <_dtoa_r+0x23c>
 80030d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80030d2:	f8cd b038 	str.w	fp, [sp, #56]	; 0x38
 80030d6:	445b      	add	r3, fp
 80030d8:	9309      	str	r3, [sp, #36]	; 0x24
 80030da:	2300      	movs	r3, #0
 80030dc:	930a      	str	r3, [sp, #40]	; 0x28
 80030de:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80030e0:	2b09      	cmp	r3, #9
 80030e2:	d867      	bhi.n	80031b4 <_dtoa_r+0x2a4>
 80030e4:	2b05      	cmp	r3, #5
 80030e6:	bfc4      	itt	gt
 80030e8:	3b04      	subgt	r3, #4
 80030ea:	9322      	strgt	r3, [sp, #136]	; 0x88
 80030ec:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80030ee:	bfc8      	it	gt
 80030f0:	2400      	movgt	r4, #0
 80030f2:	f1a3 0302 	sub.w	r3, r3, #2
 80030f6:	bfd8      	it	le
 80030f8:	2401      	movle	r4, #1
 80030fa:	2b03      	cmp	r3, #3
 80030fc:	f200 8086 	bhi.w	800320c <_dtoa_r+0x2fc>
 8003100:	e8df f003 	tbb	[pc, r3]
 8003104:	5637392c 	.word	0x5637392c
 8003108:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 800310c:	441c      	add	r4, r3
 800310e:	f204 4332 	addw	r3, r4, #1074	; 0x432
 8003112:	2b20      	cmp	r3, #32
 8003114:	bfc1      	itttt	gt
 8003116:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800311a:	fa09 f903 	lslgt.w	r9, r9, r3
 800311e:	f204 4312 	addwgt	r3, r4, #1042	; 0x412
 8003122:	fa26 f303 	lsrgt.w	r3, r6, r3
 8003126:	bfd6      	itet	le
 8003128:	f1c3 0320 	rsble	r3, r3, #32
 800312c:	ea49 0003 	orrgt.w	r0, r9, r3
 8003130:	fa06 f003 	lslle.w	r0, r6, r3
 8003134:	f7fd f956 	bl	80003e4 <__aeabi_ui2d>
 8003138:	2201      	movs	r2, #1
 800313a:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 800313e:	3c01      	subs	r4, #1
 8003140:	9213      	str	r2, [sp, #76]	; 0x4c
 8003142:	e76f      	b.n	8003024 <_dtoa_r+0x114>
 8003144:	2301      	movs	r3, #1
 8003146:	e7b3      	b.n	80030b0 <_dtoa_r+0x1a0>
 8003148:	900f      	str	r0, [sp, #60]	; 0x3c
 800314a:	e7b2      	b.n	80030b2 <_dtoa_r+0x1a2>
 800314c:	f1cb 0300 	rsb	r3, fp, #0
 8003150:	930a      	str	r3, [sp, #40]	; 0x28
 8003152:	2300      	movs	r3, #0
 8003154:	eba9 090b 	sub.w	r9, r9, fp
 8003158:	930e      	str	r3, [sp, #56]	; 0x38
 800315a:	e7c0      	b.n	80030de <_dtoa_r+0x1ce>
 800315c:	2300      	movs	r3, #0
 800315e:	930b      	str	r3, [sp, #44]	; 0x2c
 8003160:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003162:	2b00      	cmp	r3, #0
 8003164:	dc55      	bgt.n	8003212 <_dtoa_r+0x302>
 8003166:	2301      	movs	r3, #1
 8003168:	461a      	mov	r2, r3
 800316a:	9306      	str	r3, [sp, #24]
 800316c:	9308      	str	r3, [sp, #32]
 800316e:	9223      	str	r2, [sp, #140]	; 0x8c
 8003170:	e00b      	b.n	800318a <_dtoa_r+0x27a>
 8003172:	2301      	movs	r3, #1
 8003174:	e7f3      	b.n	800315e <_dtoa_r+0x24e>
 8003176:	2300      	movs	r3, #0
 8003178:	930b      	str	r3, [sp, #44]	; 0x2c
 800317a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800317c:	445b      	add	r3, fp
 800317e:	9306      	str	r3, [sp, #24]
 8003180:	3301      	adds	r3, #1
 8003182:	2b01      	cmp	r3, #1
 8003184:	9308      	str	r3, [sp, #32]
 8003186:	bfb8      	it	lt
 8003188:	2301      	movlt	r3, #1
 800318a:	2100      	movs	r1, #0
 800318c:	2204      	movs	r2, #4
 800318e:	69e8      	ldr	r0, [r5, #28]
 8003190:	f102 0614 	add.w	r6, r2, #20
 8003194:	429e      	cmp	r6, r3
 8003196:	d940      	bls.n	800321a <_dtoa_r+0x30a>
 8003198:	6041      	str	r1, [r0, #4]
 800319a:	4628      	mov	r0, r5
 800319c:	f000 fd98 	bl	8003cd0 <_Balloc>
 80031a0:	9003      	str	r0, [sp, #12]
 80031a2:	2800      	cmp	r0, #0
 80031a4:	d13c      	bne.n	8003220 <_dtoa_r+0x310>
 80031a6:	4602      	mov	r2, r0
 80031a8:	f240 11af 	movw	r1, #431	; 0x1af
 80031ac:	4b16      	ldr	r3, [pc, #88]	; (8003208 <_dtoa_r+0x2f8>)
 80031ae:	e6c3      	b.n	8002f38 <_dtoa_r+0x28>
 80031b0:	2301      	movs	r3, #1
 80031b2:	e7e1      	b.n	8003178 <_dtoa_r+0x268>
 80031b4:	2401      	movs	r4, #1
 80031b6:	2300      	movs	r3, #0
 80031b8:	940b      	str	r4, [sp, #44]	; 0x2c
 80031ba:	9322      	str	r3, [sp, #136]	; 0x88
 80031bc:	f04f 33ff 	mov.w	r3, #4294967295
 80031c0:	2200      	movs	r2, #0
 80031c2:	9306      	str	r3, [sp, #24]
 80031c4:	9308      	str	r3, [sp, #32]
 80031c6:	2312      	movs	r3, #18
 80031c8:	e7d1      	b.n	800316e <_dtoa_r+0x25e>
 80031ca:	bf00      	nop
 80031cc:	f3af 8000 	nop.w
 80031d0:	636f4361 	.word	0x636f4361
 80031d4:	3fd287a7 	.word	0x3fd287a7
 80031d8:	8b60c8b3 	.word	0x8b60c8b3
 80031dc:	3fc68a28 	.word	0x3fc68a28
 80031e0:	509f79fb 	.word	0x509f79fb
 80031e4:	3fd34413 	.word	0x3fd34413
 80031e8:	080065a0 	.word	0x080065a0
 80031ec:	080065b7 	.word	0x080065b7
 80031f0:	7ff00000 	.word	0x7ff00000
 80031f4:	0800659c 	.word	0x0800659c
 80031f8:	08006593 	.word	0x08006593
 80031fc:	0800656b 	.word	0x0800656b
 8003200:	3ff80000 	.word	0x3ff80000
 8003204:	080066a8 	.word	0x080066a8
 8003208:	0800660f 	.word	0x0800660f
 800320c:	2301      	movs	r3, #1
 800320e:	930b      	str	r3, [sp, #44]	; 0x2c
 8003210:	e7d4      	b.n	80031bc <_dtoa_r+0x2ac>
 8003212:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003214:	9306      	str	r3, [sp, #24]
 8003216:	9308      	str	r3, [sp, #32]
 8003218:	e7b7      	b.n	800318a <_dtoa_r+0x27a>
 800321a:	3101      	adds	r1, #1
 800321c:	0052      	lsls	r2, r2, #1
 800321e:	e7b7      	b.n	8003190 <_dtoa_r+0x280>
 8003220:	69eb      	ldr	r3, [r5, #28]
 8003222:	9a03      	ldr	r2, [sp, #12]
 8003224:	601a      	str	r2, [r3, #0]
 8003226:	9b08      	ldr	r3, [sp, #32]
 8003228:	2b0e      	cmp	r3, #14
 800322a:	f200 80a8 	bhi.w	800337e <_dtoa_r+0x46e>
 800322e:	2c00      	cmp	r4, #0
 8003230:	f000 80a5 	beq.w	800337e <_dtoa_r+0x46e>
 8003234:	f1bb 0f00 	cmp.w	fp, #0
 8003238:	dd34      	ble.n	80032a4 <_dtoa_r+0x394>
 800323a:	4b9a      	ldr	r3, [pc, #616]	; (80034a4 <_dtoa_r+0x594>)
 800323c:	f00b 020f 	and.w	r2, fp, #15
 8003240:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003244:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8003248:	e9d3 3400 	ldrd	r3, r4, [r3]
 800324c:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8003250:	ea4f 142b 	mov.w	r4, fp, asr #4
 8003254:	d016      	beq.n	8003284 <_dtoa_r+0x374>
 8003256:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800325a:	4b93      	ldr	r3, [pc, #588]	; (80034a8 <_dtoa_r+0x598>)
 800325c:	2703      	movs	r7, #3
 800325e:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003262:	f7fd fa63 	bl	800072c <__aeabi_ddiv>
 8003266:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800326a:	f004 040f 	and.w	r4, r4, #15
 800326e:	4e8e      	ldr	r6, [pc, #568]	; (80034a8 <_dtoa_r+0x598>)
 8003270:	b954      	cbnz	r4, 8003288 <_dtoa_r+0x378>
 8003272:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003276:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800327a:	f7fd fa57 	bl	800072c <__aeabi_ddiv>
 800327e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003282:	e029      	b.n	80032d8 <_dtoa_r+0x3c8>
 8003284:	2702      	movs	r7, #2
 8003286:	e7f2      	b.n	800326e <_dtoa_r+0x35e>
 8003288:	07e1      	lsls	r1, r4, #31
 800328a:	d508      	bpl.n	800329e <_dtoa_r+0x38e>
 800328c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003290:	e9d6 2300 	ldrd	r2, r3, [r6]
 8003294:	f7fd f920 	bl	80004d8 <__aeabi_dmul>
 8003298:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800329c:	3701      	adds	r7, #1
 800329e:	1064      	asrs	r4, r4, #1
 80032a0:	3608      	adds	r6, #8
 80032a2:	e7e5      	b.n	8003270 <_dtoa_r+0x360>
 80032a4:	f000 80a5 	beq.w	80033f2 <_dtoa_r+0x4e2>
 80032a8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80032ac:	f1cb 0400 	rsb	r4, fp, #0
 80032b0:	4b7c      	ldr	r3, [pc, #496]	; (80034a4 <_dtoa_r+0x594>)
 80032b2:	f004 020f 	and.w	r2, r4, #15
 80032b6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80032ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80032be:	f7fd f90b 	bl	80004d8 <__aeabi_dmul>
 80032c2:	2702      	movs	r7, #2
 80032c4:	2300      	movs	r3, #0
 80032c6:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80032ca:	4e77      	ldr	r6, [pc, #476]	; (80034a8 <_dtoa_r+0x598>)
 80032cc:	1124      	asrs	r4, r4, #4
 80032ce:	2c00      	cmp	r4, #0
 80032d0:	f040 8084 	bne.w	80033dc <_dtoa_r+0x4cc>
 80032d4:	2b00      	cmp	r3, #0
 80032d6:	d1d2      	bne.n	800327e <_dtoa_r+0x36e>
 80032d8:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 80032dc:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 80032e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80032e2:	2b00      	cmp	r3, #0
 80032e4:	f000 8087 	beq.w	80033f6 <_dtoa_r+0x4e6>
 80032e8:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80032ec:	2200      	movs	r2, #0
 80032ee:	4b6f      	ldr	r3, [pc, #444]	; (80034ac <_dtoa_r+0x59c>)
 80032f0:	f7fd fb64 	bl	80009bc <__aeabi_dcmplt>
 80032f4:	2800      	cmp	r0, #0
 80032f6:	d07e      	beq.n	80033f6 <_dtoa_r+0x4e6>
 80032f8:	9b08      	ldr	r3, [sp, #32]
 80032fa:	2b00      	cmp	r3, #0
 80032fc:	d07b      	beq.n	80033f6 <_dtoa_r+0x4e6>
 80032fe:	9b06      	ldr	r3, [sp, #24]
 8003300:	2b00      	cmp	r3, #0
 8003302:	dd38      	ble.n	8003376 <_dtoa_r+0x466>
 8003304:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003308:	2200      	movs	r2, #0
 800330a:	4b69      	ldr	r3, [pc, #420]	; (80034b0 <_dtoa_r+0x5a0>)
 800330c:	f7fd f8e4 	bl	80004d8 <__aeabi_dmul>
 8003310:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003314:	9c06      	ldr	r4, [sp, #24]
 8003316:	f10b 38ff 	add.w	r8, fp, #4294967295
 800331a:	3701      	adds	r7, #1
 800331c:	4638      	mov	r0, r7
 800331e:	f7fd f871 	bl	8000404 <__aeabi_i2d>
 8003322:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003326:	f7fd f8d7 	bl	80004d8 <__aeabi_dmul>
 800332a:	2200      	movs	r2, #0
 800332c:	4b61      	ldr	r3, [pc, #388]	; (80034b4 <_dtoa_r+0x5a4>)
 800332e:	f7fc ff1d 	bl	800016c <__adddf3>
 8003332:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8003336:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800333a:	9611      	str	r6, [sp, #68]	; 0x44
 800333c:	2c00      	cmp	r4, #0
 800333e:	d15d      	bne.n	80033fc <_dtoa_r+0x4ec>
 8003340:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003344:	2200      	movs	r2, #0
 8003346:	4b5c      	ldr	r3, [pc, #368]	; (80034b8 <_dtoa_r+0x5a8>)
 8003348:	f7fc ff0e 	bl	8000168 <__aeabi_dsub>
 800334c:	4602      	mov	r2, r0
 800334e:	460b      	mov	r3, r1
 8003350:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8003354:	4633      	mov	r3, r6
 8003356:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003358:	f7fd fb4e 	bl	80009f8 <__aeabi_dcmpgt>
 800335c:	2800      	cmp	r0, #0
 800335e:	f040 8295 	bne.w	800388c <_dtoa_r+0x97c>
 8003362:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003366:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003368:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 800336c:	f7fd fb26 	bl	80009bc <__aeabi_dcmplt>
 8003370:	2800      	cmp	r0, #0
 8003372:	f040 8289 	bne.w	8003888 <_dtoa_r+0x978>
 8003376:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 800337a:	e9cd 3404 	strd	r3, r4, [sp, #16]
 800337e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003380:	2b00      	cmp	r3, #0
 8003382:	f2c0 8151 	blt.w	8003628 <_dtoa_r+0x718>
 8003386:	f1bb 0f0e 	cmp.w	fp, #14
 800338a:	f300 814d 	bgt.w	8003628 <_dtoa_r+0x718>
 800338e:	4b45      	ldr	r3, [pc, #276]	; (80034a4 <_dtoa_r+0x594>)
 8003390:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8003394:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003398:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800339c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800339e:	2b00      	cmp	r3, #0
 80033a0:	f280 80da 	bge.w	8003558 <_dtoa_r+0x648>
 80033a4:	9b08      	ldr	r3, [sp, #32]
 80033a6:	2b00      	cmp	r3, #0
 80033a8:	f300 80d6 	bgt.w	8003558 <_dtoa_r+0x648>
 80033ac:	f040 826b 	bne.w	8003886 <_dtoa_r+0x976>
 80033b0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80033b4:	2200      	movs	r2, #0
 80033b6:	4b40      	ldr	r3, [pc, #256]	; (80034b8 <_dtoa_r+0x5a8>)
 80033b8:	f7fd f88e 	bl	80004d8 <__aeabi_dmul>
 80033bc:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80033c0:	f7fd fb10 	bl	80009e4 <__aeabi_dcmpge>
 80033c4:	9c08      	ldr	r4, [sp, #32]
 80033c6:	4626      	mov	r6, r4
 80033c8:	2800      	cmp	r0, #0
 80033ca:	f040 8241 	bne.w	8003850 <_dtoa_r+0x940>
 80033ce:	2331      	movs	r3, #49	; 0x31
 80033d0:	9f03      	ldr	r7, [sp, #12]
 80033d2:	f10b 0b01 	add.w	fp, fp, #1
 80033d6:	f807 3b01 	strb.w	r3, [r7], #1
 80033da:	e23d      	b.n	8003858 <_dtoa_r+0x948>
 80033dc:	07e2      	lsls	r2, r4, #31
 80033de:	d505      	bpl.n	80033ec <_dtoa_r+0x4dc>
 80033e0:	e9d6 2300 	ldrd	r2, r3, [r6]
 80033e4:	f7fd f878 	bl	80004d8 <__aeabi_dmul>
 80033e8:	2301      	movs	r3, #1
 80033ea:	3701      	adds	r7, #1
 80033ec:	1064      	asrs	r4, r4, #1
 80033ee:	3608      	adds	r6, #8
 80033f0:	e76d      	b.n	80032ce <_dtoa_r+0x3be>
 80033f2:	2702      	movs	r7, #2
 80033f4:	e770      	b.n	80032d8 <_dtoa_r+0x3c8>
 80033f6:	46d8      	mov	r8, fp
 80033f8:	9c08      	ldr	r4, [sp, #32]
 80033fa:	e78f      	b.n	800331c <_dtoa_r+0x40c>
 80033fc:	9903      	ldr	r1, [sp, #12]
 80033fe:	4b29      	ldr	r3, [pc, #164]	; (80034a4 <_dtoa_r+0x594>)
 8003400:	4421      	add	r1, r4
 8003402:	9112      	str	r1, [sp, #72]	; 0x48
 8003404:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003406:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800340a:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 800340e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003412:	2900      	cmp	r1, #0
 8003414:	d054      	beq.n	80034c0 <_dtoa_r+0x5b0>
 8003416:	2000      	movs	r0, #0
 8003418:	4928      	ldr	r1, [pc, #160]	; (80034bc <_dtoa_r+0x5ac>)
 800341a:	f7fd f987 	bl	800072c <__aeabi_ddiv>
 800341e:	463b      	mov	r3, r7
 8003420:	4632      	mov	r2, r6
 8003422:	f7fc fea1 	bl	8000168 <__aeabi_dsub>
 8003426:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 800342a:	9f03      	ldr	r7, [sp, #12]
 800342c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003430:	f7fd fb02 	bl	8000a38 <__aeabi_d2iz>
 8003434:	4604      	mov	r4, r0
 8003436:	f7fc ffe5 	bl	8000404 <__aeabi_i2d>
 800343a:	4602      	mov	r2, r0
 800343c:	460b      	mov	r3, r1
 800343e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003442:	f7fc fe91 	bl	8000168 <__aeabi_dsub>
 8003446:	4602      	mov	r2, r0
 8003448:	460b      	mov	r3, r1
 800344a:	3430      	adds	r4, #48	; 0x30
 800344c:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8003450:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003454:	f807 4b01 	strb.w	r4, [r7], #1
 8003458:	f7fd fab0 	bl	80009bc <__aeabi_dcmplt>
 800345c:	2800      	cmp	r0, #0
 800345e:	d173      	bne.n	8003548 <_dtoa_r+0x638>
 8003460:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003464:	2000      	movs	r0, #0
 8003466:	4911      	ldr	r1, [pc, #68]	; (80034ac <_dtoa_r+0x59c>)
 8003468:	f7fc fe7e 	bl	8000168 <__aeabi_dsub>
 800346c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003470:	f7fd faa4 	bl	80009bc <__aeabi_dcmplt>
 8003474:	2800      	cmp	r0, #0
 8003476:	f040 80b6 	bne.w	80035e6 <_dtoa_r+0x6d6>
 800347a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800347c:	429f      	cmp	r7, r3
 800347e:	f43f af7a 	beq.w	8003376 <_dtoa_r+0x466>
 8003482:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003486:	2200      	movs	r2, #0
 8003488:	4b09      	ldr	r3, [pc, #36]	; (80034b0 <_dtoa_r+0x5a0>)
 800348a:	f7fd f825 	bl	80004d8 <__aeabi_dmul>
 800348e:	2200      	movs	r2, #0
 8003490:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003494:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003498:	4b05      	ldr	r3, [pc, #20]	; (80034b0 <_dtoa_r+0x5a0>)
 800349a:	f7fd f81d 	bl	80004d8 <__aeabi_dmul>
 800349e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80034a2:	e7c3      	b.n	800342c <_dtoa_r+0x51c>
 80034a4:	080066a8 	.word	0x080066a8
 80034a8:	08006680 	.word	0x08006680
 80034ac:	3ff00000 	.word	0x3ff00000
 80034b0:	40240000 	.word	0x40240000
 80034b4:	401c0000 	.word	0x401c0000
 80034b8:	40140000 	.word	0x40140000
 80034bc:	3fe00000 	.word	0x3fe00000
 80034c0:	4630      	mov	r0, r6
 80034c2:	4639      	mov	r1, r7
 80034c4:	f7fd f808 	bl	80004d8 <__aeabi_dmul>
 80034c8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80034ca:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80034ce:	9c03      	ldr	r4, [sp, #12]
 80034d0:	9314      	str	r3, [sp, #80]	; 0x50
 80034d2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80034d6:	f7fd faaf 	bl	8000a38 <__aeabi_d2iz>
 80034da:	9015      	str	r0, [sp, #84]	; 0x54
 80034dc:	f7fc ff92 	bl	8000404 <__aeabi_i2d>
 80034e0:	4602      	mov	r2, r0
 80034e2:	460b      	mov	r3, r1
 80034e4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80034e8:	f7fc fe3e 	bl	8000168 <__aeabi_dsub>
 80034ec:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80034ee:	4606      	mov	r6, r0
 80034f0:	3330      	adds	r3, #48	; 0x30
 80034f2:	f804 3b01 	strb.w	r3, [r4], #1
 80034f6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80034f8:	460f      	mov	r7, r1
 80034fa:	429c      	cmp	r4, r3
 80034fc:	f04f 0200 	mov.w	r2, #0
 8003500:	d124      	bne.n	800354c <_dtoa_r+0x63c>
 8003502:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003506:	4baf      	ldr	r3, [pc, #700]	; (80037c4 <_dtoa_r+0x8b4>)
 8003508:	f7fc fe30 	bl	800016c <__adddf3>
 800350c:	4602      	mov	r2, r0
 800350e:	460b      	mov	r3, r1
 8003510:	4630      	mov	r0, r6
 8003512:	4639      	mov	r1, r7
 8003514:	f7fd fa70 	bl	80009f8 <__aeabi_dcmpgt>
 8003518:	2800      	cmp	r0, #0
 800351a:	d163      	bne.n	80035e4 <_dtoa_r+0x6d4>
 800351c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003520:	2000      	movs	r0, #0
 8003522:	49a8      	ldr	r1, [pc, #672]	; (80037c4 <_dtoa_r+0x8b4>)
 8003524:	f7fc fe20 	bl	8000168 <__aeabi_dsub>
 8003528:	4602      	mov	r2, r0
 800352a:	460b      	mov	r3, r1
 800352c:	4630      	mov	r0, r6
 800352e:	4639      	mov	r1, r7
 8003530:	f7fd fa44 	bl	80009bc <__aeabi_dcmplt>
 8003534:	2800      	cmp	r0, #0
 8003536:	f43f af1e 	beq.w	8003376 <_dtoa_r+0x466>
 800353a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 800353c:	1e7b      	subs	r3, r7, #1
 800353e:	9314      	str	r3, [sp, #80]	; 0x50
 8003540:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 8003544:	2b30      	cmp	r3, #48	; 0x30
 8003546:	d0f8      	beq.n	800353a <_dtoa_r+0x62a>
 8003548:	46c3      	mov	fp, r8
 800354a:	e03b      	b.n	80035c4 <_dtoa_r+0x6b4>
 800354c:	4b9e      	ldr	r3, [pc, #632]	; (80037c8 <_dtoa_r+0x8b8>)
 800354e:	f7fc ffc3 	bl	80004d8 <__aeabi_dmul>
 8003552:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003556:	e7bc      	b.n	80034d2 <_dtoa_r+0x5c2>
 8003558:	9f03      	ldr	r7, [sp, #12]
 800355a:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 800355e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003562:	4640      	mov	r0, r8
 8003564:	4649      	mov	r1, r9
 8003566:	f7fd f8e1 	bl	800072c <__aeabi_ddiv>
 800356a:	f7fd fa65 	bl	8000a38 <__aeabi_d2iz>
 800356e:	4604      	mov	r4, r0
 8003570:	f7fc ff48 	bl	8000404 <__aeabi_i2d>
 8003574:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003578:	f7fc ffae 	bl	80004d8 <__aeabi_dmul>
 800357c:	4602      	mov	r2, r0
 800357e:	460b      	mov	r3, r1
 8003580:	4640      	mov	r0, r8
 8003582:	4649      	mov	r1, r9
 8003584:	f7fc fdf0 	bl	8000168 <__aeabi_dsub>
 8003588:	f104 0630 	add.w	r6, r4, #48	; 0x30
 800358c:	f807 6b01 	strb.w	r6, [r7], #1
 8003590:	9e03      	ldr	r6, [sp, #12]
 8003592:	f8dd c020 	ldr.w	ip, [sp, #32]
 8003596:	1bbe      	subs	r6, r7, r6
 8003598:	45b4      	cmp	ip, r6
 800359a:	4602      	mov	r2, r0
 800359c:	460b      	mov	r3, r1
 800359e:	d136      	bne.n	800360e <_dtoa_r+0x6fe>
 80035a0:	f7fc fde4 	bl	800016c <__adddf3>
 80035a4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80035a8:	4680      	mov	r8, r0
 80035aa:	4689      	mov	r9, r1
 80035ac:	f7fd fa24 	bl	80009f8 <__aeabi_dcmpgt>
 80035b0:	bb58      	cbnz	r0, 800360a <_dtoa_r+0x6fa>
 80035b2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80035b6:	4640      	mov	r0, r8
 80035b8:	4649      	mov	r1, r9
 80035ba:	f7fd f9f5 	bl	80009a8 <__aeabi_dcmpeq>
 80035be:	b108      	cbz	r0, 80035c4 <_dtoa_r+0x6b4>
 80035c0:	07e3      	lsls	r3, r4, #31
 80035c2:	d422      	bmi.n	800360a <_dtoa_r+0x6fa>
 80035c4:	4651      	mov	r1, sl
 80035c6:	4628      	mov	r0, r5
 80035c8:	f000 fbc2 	bl	8003d50 <_Bfree>
 80035cc:	2300      	movs	r3, #0
 80035ce:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80035d0:	703b      	strb	r3, [r7, #0]
 80035d2:	f10b 0301 	add.w	r3, fp, #1
 80035d6:	6013      	str	r3, [r2, #0]
 80035d8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80035da:	2b00      	cmp	r3, #0
 80035dc:	f43f ace6 	beq.w	8002fac <_dtoa_r+0x9c>
 80035e0:	601f      	str	r7, [r3, #0]
 80035e2:	e4e3      	b.n	8002fac <_dtoa_r+0x9c>
 80035e4:	4627      	mov	r7, r4
 80035e6:	463b      	mov	r3, r7
 80035e8:	461f      	mov	r7, r3
 80035ea:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80035ee:	2a39      	cmp	r2, #57	; 0x39
 80035f0:	d107      	bne.n	8003602 <_dtoa_r+0x6f2>
 80035f2:	9a03      	ldr	r2, [sp, #12]
 80035f4:	429a      	cmp	r2, r3
 80035f6:	d1f7      	bne.n	80035e8 <_dtoa_r+0x6d8>
 80035f8:	2230      	movs	r2, #48	; 0x30
 80035fa:	9903      	ldr	r1, [sp, #12]
 80035fc:	f108 0801 	add.w	r8, r8, #1
 8003600:	700a      	strb	r2, [r1, #0]
 8003602:	781a      	ldrb	r2, [r3, #0]
 8003604:	3201      	adds	r2, #1
 8003606:	701a      	strb	r2, [r3, #0]
 8003608:	e79e      	b.n	8003548 <_dtoa_r+0x638>
 800360a:	46d8      	mov	r8, fp
 800360c:	e7eb      	b.n	80035e6 <_dtoa_r+0x6d6>
 800360e:	2200      	movs	r2, #0
 8003610:	4b6d      	ldr	r3, [pc, #436]	; (80037c8 <_dtoa_r+0x8b8>)
 8003612:	f7fc ff61 	bl	80004d8 <__aeabi_dmul>
 8003616:	2200      	movs	r2, #0
 8003618:	2300      	movs	r3, #0
 800361a:	4680      	mov	r8, r0
 800361c:	4689      	mov	r9, r1
 800361e:	f7fd f9c3 	bl	80009a8 <__aeabi_dcmpeq>
 8003622:	2800      	cmp	r0, #0
 8003624:	d09b      	beq.n	800355e <_dtoa_r+0x64e>
 8003626:	e7cd      	b.n	80035c4 <_dtoa_r+0x6b4>
 8003628:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800362a:	2a00      	cmp	r2, #0
 800362c:	f000 80c4 	beq.w	80037b8 <_dtoa_r+0x8a8>
 8003630:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8003632:	2a01      	cmp	r2, #1
 8003634:	f300 80a8 	bgt.w	8003788 <_dtoa_r+0x878>
 8003638:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800363a:	2a00      	cmp	r2, #0
 800363c:	f000 80a0 	beq.w	8003780 <_dtoa_r+0x870>
 8003640:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8003644:	464f      	mov	r7, r9
 8003646:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8003648:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800364a:	2101      	movs	r1, #1
 800364c:	441a      	add	r2, r3
 800364e:	4628      	mov	r0, r5
 8003650:	4499      	add	r9, r3
 8003652:	9209      	str	r2, [sp, #36]	; 0x24
 8003654:	f000 fc7c 	bl	8003f50 <__i2b>
 8003658:	4606      	mov	r6, r0
 800365a:	b15f      	cbz	r7, 8003674 <_dtoa_r+0x764>
 800365c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800365e:	2b00      	cmp	r3, #0
 8003660:	dd08      	ble.n	8003674 <_dtoa_r+0x764>
 8003662:	42bb      	cmp	r3, r7
 8003664:	bfa8      	it	ge
 8003666:	463b      	movge	r3, r7
 8003668:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800366a:	eba9 0903 	sub.w	r9, r9, r3
 800366e:	1aff      	subs	r7, r7, r3
 8003670:	1ad3      	subs	r3, r2, r3
 8003672:	9309      	str	r3, [sp, #36]	; 0x24
 8003674:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003676:	b1f3      	cbz	r3, 80036b6 <_dtoa_r+0x7a6>
 8003678:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800367a:	2b00      	cmp	r3, #0
 800367c:	f000 80a0 	beq.w	80037c0 <_dtoa_r+0x8b0>
 8003680:	2c00      	cmp	r4, #0
 8003682:	dd10      	ble.n	80036a6 <_dtoa_r+0x796>
 8003684:	4631      	mov	r1, r6
 8003686:	4622      	mov	r2, r4
 8003688:	4628      	mov	r0, r5
 800368a:	f000 fd1f 	bl	80040cc <__pow5mult>
 800368e:	4652      	mov	r2, sl
 8003690:	4601      	mov	r1, r0
 8003692:	4606      	mov	r6, r0
 8003694:	4628      	mov	r0, r5
 8003696:	f000 fc71 	bl	8003f7c <__multiply>
 800369a:	4680      	mov	r8, r0
 800369c:	4651      	mov	r1, sl
 800369e:	4628      	mov	r0, r5
 80036a0:	f000 fb56 	bl	8003d50 <_Bfree>
 80036a4:	46c2      	mov	sl, r8
 80036a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80036a8:	1b1a      	subs	r2, r3, r4
 80036aa:	d004      	beq.n	80036b6 <_dtoa_r+0x7a6>
 80036ac:	4651      	mov	r1, sl
 80036ae:	4628      	mov	r0, r5
 80036b0:	f000 fd0c 	bl	80040cc <__pow5mult>
 80036b4:	4682      	mov	sl, r0
 80036b6:	2101      	movs	r1, #1
 80036b8:	4628      	mov	r0, r5
 80036ba:	f000 fc49 	bl	8003f50 <__i2b>
 80036be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80036c0:	4604      	mov	r4, r0
 80036c2:	2b00      	cmp	r3, #0
 80036c4:	f340 8082 	ble.w	80037cc <_dtoa_r+0x8bc>
 80036c8:	461a      	mov	r2, r3
 80036ca:	4601      	mov	r1, r0
 80036cc:	4628      	mov	r0, r5
 80036ce:	f000 fcfd 	bl	80040cc <__pow5mult>
 80036d2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80036d4:	4604      	mov	r4, r0
 80036d6:	2b01      	cmp	r3, #1
 80036d8:	dd7b      	ble.n	80037d2 <_dtoa_r+0x8c2>
 80036da:	f04f 0800 	mov.w	r8, #0
 80036de:	6923      	ldr	r3, [r4, #16]
 80036e0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80036e4:	6918      	ldr	r0, [r3, #16]
 80036e6:	f000 fbe5 	bl	8003eb4 <__hi0bits>
 80036ea:	f1c0 0020 	rsb	r0, r0, #32
 80036ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80036f0:	4418      	add	r0, r3
 80036f2:	f010 001f 	ands.w	r0, r0, #31
 80036f6:	f000 8092 	beq.w	800381e <_dtoa_r+0x90e>
 80036fa:	f1c0 0320 	rsb	r3, r0, #32
 80036fe:	2b04      	cmp	r3, #4
 8003700:	f340 8085 	ble.w	800380e <_dtoa_r+0x8fe>
 8003704:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003706:	f1c0 001c 	rsb	r0, r0, #28
 800370a:	4403      	add	r3, r0
 800370c:	4481      	add	r9, r0
 800370e:	4407      	add	r7, r0
 8003710:	9309      	str	r3, [sp, #36]	; 0x24
 8003712:	f1b9 0f00 	cmp.w	r9, #0
 8003716:	dd05      	ble.n	8003724 <_dtoa_r+0x814>
 8003718:	4651      	mov	r1, sl
 800371a:	464a      	mov	r2, r9
 800371c:	4628      	mov	r0, r5
 800371e:	f000 fd2f 	bl	8004180 <__lshift>
 8003722:	4682      	mov	sl, r0
 8003724:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003726:	2b00      	cmp	r3, #0
 8003728:	dd05      	ble.n	8003736 <_dtoa_r+0x826>
 800372a:	4621      	mov	r1, r4
 800372c:	461a      	mov	r2, r3
 800372e:	4628      	mov	r0, r5
 8003730:	f000 fd26 	bl	8004180 <__lshift>
 8003734:	4604      	mov	r4, r0
 8003736:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003738:	2b00      	cmp	r3, #0
 800373a:	d072      	beq.n	8003822 <_dtoa_r+0x912>
 800373c:	4621      	mov	r1, r4
 800373e:	4650      	mov	r0, sl
 8003740:	f000 fd8a 	bl	8004258 <__mcmp>
 8003744:	2800      	cmp	r0, #0
 8003746:	da6c      	bge.n	8003822 <_dtoa_r+0x912>
 8003748:	2300      	movs	r3, #0
 800374a:	4651      	mov	r1, sl
 800374c:	220a      	movs	r2, #10
 800374e:	4628      	mov	r0, r5
 8003750:	f000 fb20 	bl	8003d94 <__multadd>
 8003754:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003756:	4682      	mov	sl, r0
 8003758:	f10b 3bff 	add.w	fp, fp, #4294967295
 800375c:	2b00      	cmp	r3, #0
 800375e:	f000 81ac 	beq.w	8003aba <_dtoa_r+0xbaa>
 8003762:	2300      	movs	r3, #0
 8003764:	4631      	mov	r1, r6
 8003766:	220a      	movs	r2, #10
 8003768:	4628      	mov	r0, r5
 800376a:	f000 fb13 	bl	8003d94 <__multadd>
 800376e:	9b06      	ldr	r3, [sp, #24]
 8003770:	4606      	mov	r6, r0
 8003772:	2b00      	cmp	r3, #0
 8003774:	f300 8093 	bgt.w	800389e <_dtoa_r+0x98e>
 8003778:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800377a:	2b02      	cmp	r3, #2
 800377c:	dc59      	bgt.n	8003832 <_dtoa_r+0x922>
 800377e:	e08e      	b.n	800389e <_dtoa_r+0x98e>
 8003780:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8003782:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8003786:	e75d      	b.n	8003644 <_dtoa_r+0x734>
 8003788:	9b08      	ldr	r3, [sp, #32]
 800378a:	1e5c      	subs	r4, r3, #1
 800378c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800378e:	42a3      	cmp	r3, r4
 8003790:	bfbf      	itttt	lt
 8003792:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8003794:	9a0e      	ldrlt	r2, [sp, #56]	; 0x38
 8003796:	1ae3      	sublt	r3, r4, r3
 8003798:	18d2      	addlt	r2, r2, r3
 800379a:	bfa8      	it	ge
 800379c:	1b1c      	subge	r4, r3, r4
 800379e:	9b08      	ldr	r3, [sp, #32]
 80037a0:	bfbe      	ittt	lt
 80037a2:	940a      	strlt	r4, [sp, #40]	; 0x28
 80037a4:	920e      	strlt	r2, [sp, #56]	; 0x38
 80037a6:	2400      	movlt	r4, #0
 80037a8:	2b00      	cmp	r3, #0
 80037aa:	bfb5      	itete	lt
 80037ac:	eba9 0703 	sublt.w	r7, r9, r3
 80037b0:	464f      	movge	r7, r9
 80037b2:	2300      	movlt	r3, #0
 80037b4:	9b08      	ldrge	r3, [sp, #32]
 80037b6:	e747      	b.n	8003648 <_dtoa_r+0x738>
 80037b8:	464f      	mov	r7, r9
 80037ba:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80037bc:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80037be:	e74c      	b.n	800365a <_dtoa_r+0x74a>
 80037c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80037c2:	e773      	b.n	80036ac <_dtoa_r+0x79c>
 80037c4:	3fe00000 	.word	0x3fe00000
 80037c8:	40240000 	.word	0x40240000
 80037cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80037ce:	2b01      	cmp	r3, #1
 80037d0:	dc18      	bgt.n	8003804 <_dtoa_r+0x8f4>
 80037d2:	9b04      	ldr	r3, [sp, #16]
 80037d4:	b9b3      	cbnz	r3, 8003804 <_dtoa_r+0x8f4>
 80037d6:	9b05      	ldr	r3, [sp, #20]
 80037d8:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80037dc:	b993      	cbnz	r3, 8003804 <_dtoa_r+0x8f4>
 80037de:	9b05      	ldr	r3, [sp, #20]
 80037e0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80037e4:	0d1b      	lsrs	r3, r3, #20
 80037e6:	051b      	lsls	r3, r3, #20
 80037e8:	b17b      	cbz	r3, 800380a <_dtoa_r+0x8fa>
 80037ea:	f04f 0801 	mov.w	r8, #1
 80037ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80037f0:	f109 0901 	add.w	r9, r9, #1
 80037f4:	3301      	adds	r3, #1
 80037f6:	9309      	str	r3, [sp, #36]	; 0x24
 80037f8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80037fa:	2b00      	cmp	r3, #0
 80037fc:	f47f af6f 	bne.w	80036de <_dtoa_r+0x7ce>
 8003800:	2001      	movs	r0, #1
 8003802:	e774      	b.n	80036ee <_dtoa_r+0x7de>
 8003804:	f04f 0800 	mov.w	r8, #0
 8003808:	e7f6      	b.n	80037f8 <_dtoa_r+0x8e8>
 800380a:	4698      	mov	r8, r3
 800380c:	e7f4      	b.n	80037f8 <_dtoa_r+0x8e8>
 800380e:	d080      	beq.n	8003712 <_dtoa_r+0x802>
 8003810:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003812:	331c      	adds	r3, #28
 8003814:	441a      	add	r2, r3
 8003816:	4499      	add	r9, r3
 8003818:	441f      	add	r7, r3
 800381a:	9209      	str	r2, [sp, #36]	; 0x24
 800381c:	e779      	b.n	8003712 <_dtoa_r+0x802>
 800381e:	4603      	mov	r3, r0
 8003820:	e7f6      	b.n	8003810 <_dtoa_r+0x900>
 8003822:	9b08      	ldr	r3, [sp, #32]
 8003824:	2b00      	cmp	r3, #0
 8003826:	dc34      	bgt.n	8003892 <_dtoa_r+0x982>
 8003828:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800382a:	2b02      	cmp	r3, #2
 800382c:	dd31      	ble.n	8003892 <_dtoa_r+0x982>
 800382e:	9b08      	ldr	r3, [sp, #32]
 8003830:	9306      	str	r3, [sp, #24]
 8003832:	9b06      	ldr	r3, [sp, #24]
 8003834:	b963      	cbnz	r3, 8003850 <_dtoa_r+0x940>
 8003836:	4621      	mov	r1, r4
 8003838:	2205      	movs	r2, #5
 800383a:	4628      	mov	r0, r5
 800383c:	f000 faaa 	bl	8003d94 <__multadd>
 8003840:	4601      	mov	r1, r0
 8003842:	4604      	mov	r4, r0
 8003844:	4650      	mov	r0, sl
 8003846:	f000 fd07 	bl	8004258 <__mcmp>
 800384a:	2800      	cmp	r0, #0
 800384c:	f73f adbf 	bgt.w	80033ce <_dtoa_r+0x4be>
 8003850:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003852:	9f03      	ldr	r7, [sp, #12]
 8003854:	ea6f 0b03 	mvn.w	fp, r3
 8003858:	f04f 0800 	mov.w	r8, #0
 800385c:	4621      	mov	r1, r4
 800385e:	4628      	mov	r0, r5
 8003860:	f000 fa76 	bl	8003d50 <_Bfree>
 8003864:	2e00      	cmp	r6, #0
 8003866:	f43f aead 	beq.w	80035c4 <_dtoa_r+0x6b4>
 800386a:	f1b8 0f00 	cmp.w	r8, #0
 800386e:	d005      	beq.n	800387c <_dtoa_r+0x96c>
 8003870:	45b0      	cmp	r8, r6
 8003872:	d003      	beq.n	800387c <_dtoa_r+0x96c>
 8003874:	4641      	mov	r1, r8
 8003876:	4628      	mov	r0, r5
 8003878:	f000 fa6a 	bl	8003d50 <_Bfree>
 800387c:	4631      	mov	r1, r6
 800387e:	4628      	mov	r0, r5
 8003880:	f000 fa66 	bl	8003d50 <_Bfree>
 8003884:	e69e      	b.n	80035c4 <_dtoa_r+0x6b4>
 8003886:	2400      	movs	r4, #0
 8003888:	4626      	mov	r6, r4
 800388a:	e7e1      	b.n	8003850 <_dtoa_r+0x940>
 800388c:	46c3      	mov	fp, r8
 800388e:	4626      	mov	r6, r4
 8003890:	e59d      	b.n	80033ce <_dtoa_r+0x4be>
 8003892:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003894:	2b00      	cmp	r3, #0
 8003896:	f000 80c8 	beq.w	8003a2a <_dtoa_r+0xb1a>
 800389a:	9b08      	ldr	r3, [sp, #32]
 800389c:	9306      	str	r3, [sp, #24]
 800389e:	2f00      	cmp	r7, #0
 80038a0:	dd05      	ble.n	80038ae <_dtoa_r+0x99e>
 80038a2:	4631      	mov	r1, r6
 80038a4:	463a      	mov	r2, r7
 80038a6:	4628      	mov	r0, r5
 80038a8:	f000 fc6a 	bl	8004180 <__lshift>
 80038ac:	4606      	mov	r6, r0
 80038ae:	f1b8 0f00 	cmp.w	r8, #0
 80038b2:	d05b      	beq.n	800396c <_dtoa_r+0xa5c>
 80038b4:	4628      	mov	r0, r5
 80038b6:	6871      	ldr	r1, [r6, #4]
 80038b8:	f000 fa0a 	bl	8003cd0 <_Balloc>
 80038bc:	4607      	mov	r7, r0
 80038be:	b928      	cbnz	r0, 80038cc <_dtoa_r+0x9bc>
 80038c0:	4602      	mov	r2, r0
 80038c2:	f240 21ef 	movw	r1, #751	; 0x2ef
 80038c6:	4b81      	ldr	r3, [pc, #516]	; (8003acc <_dtoa_r+0xbbc>)
 80038c8:	f7ff bb36 	b.w	8002f38 <_dtoa_r+0x28>
 80038cc:	6932      	ldr	r2, [r6, #16]
 80038ce:	f106 010c 	add.w	r1, r6, #12
 80038d2:	3202      	adds	r2, #2
 80038d4:	0092      	lsls	r2, r2, #2
 80038d6:	300c      	adds	r0, #12
 80038d8:	f001 ff72 	bl	80057c0 <memcpy>
 80038dc:	2201      	movs	r2, #1
 80038de:	4639      	mov	r1, r7
 80038e0:	4628      	mov	r0, r5
 80038e2:	f000 fc4d 	bl	8004180 <__lshift>
 80038e6:	46b0      	mov	r8, r6
 80038e8:	4606      	mov	r6, r0
 80038ea:	9b03      	ldr	r3, [sp, #12]
 80038ec:	9a03      	ldr	r2, [sp, #12]
 80038ee:	3301      	adds	r3, #1
 80038f0:	9308      	str	r3, [sp, #32]
 80038f2:	9b06      	ldr	r3, [sp, #24]
 80038f4:	4413      	add	r3, r2
 80038f6:	930b      	str	r3, [sp, #44]	; 0x2c
 80038f8:	9b04      	ldr	r3, [sp, #16]
 80038fa:	f003 0301 	and.w	r3, r3, #1
 80038fe:	930a      	str	r3, [sp, #40]	; 0x28
 8003900:	9b08      	ldr	r3, [sp, #32]
 8003902:	4621      	mov	r1, r4
 8003904:	3b01      	subs	r3, #1
 8003906:	4650      	mov	r0, sl
 8003908:	9304      	str	r3, [sp, #16]
 800390a:	f7ff fa75 	bl	8002df8 <quorem>
 800390e:	4641      	mov	r1, r8
 8003910:	9006      	str	r0, [sp, #24]
 8003912:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8003916:	4650      	mov	r0, sl
 8003918:	f000 fc9e 	bl	8004258 <__mcmp>
 800391c:	4632      	mov	r2, r6
 800391e:	9009      	str	r0, [sp, #36]	; 0x24
 8003920:	4621      	mov	r1, r4
 8003922:	4628      	mov	r0, r5
 8003924:	f000 fcb4 	bl	8004290 <__mdiff>
 8003928:	68c2      	ldr	r2, [r0, #12]
 800392a:	4607      	mov	r7, r0
 800392c:	bb02      	cbnz	r2, 8003970 <_dtoa_r+0xa60>
 800392e:	4601      	mov	r1, r0
 8003930:	4650      	mov	r0, sl
 8003932:	f000 fc91 	bl	8004258 <__mcmp>
 8003936:	4602      	mov	r2, r0
 8003938:	4639      	mov	r1, r7
 800393a:	4628      	mov	r0, r5
 800393c:	920c      	str	r2, [sp, #48]	; 0x30
 800393e:	f000 fa07 	bl	8003d50 <_Bfree>
 8003942:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003944:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003946:	9f08      	ldr	r7, [sp, #32]
 8003948:	ea43 0102 	orr.w	r1, r3, r2
 800394c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800394e:	4319      	orrs	r1, r3
 8003950:	d110      	bne.n	8003974 <_dtoa_r+0xa64>
 8003952:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8003956:	d029      	beq.n	80039ac <_dtoa_r+0xa9c>
 8003958:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800395a:	2b00      	cmp	r3, #0
 800395c:	dd02      	ble.n	8003964 <_dtoa_r+0xa54>
 800395e:	9b06      	ldr	r3, [sp, #24]
 8003960:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8003964:	9b04      	ldr	r3, [sp, #16]
 8003966:	f883 9000 	strb.w	r9, [r3]
 800396a:	e777      	b.n	800385c <_dtoa_r+0x94c>
 800396c:	4630      	mov	r0, r6
 800396e:	e7ba      	b.n	80038e6 <_dtoa_r+0x9d6>
 8003970:	2201      	movs	r2, #1
 8003972:	e7e1      	b.n	8003938 <_dtoa_r+0xa28>
 8003974:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003976:	2b00      	cmp	r3, #0
 8003978:	db04      	blt.n	8003984 <_dtoa_r+0xa74>
 800397a:	9922      	ldr	r1, [sp, #136]	; 0x88
 800397c:	430b      	orrs	r3, r1
 800397e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003980:	430b      	orrs	r3, r1
 8003982:	d120      	bne.n	80039c6 <_dtoa_r+0xab6>
 8003984:	2a00      	cmp	r2, #0
 8003986:	dded      	ble.n	8003964 <_dtoa_r+0xa54>
 8003988:	4651      	mov	r1, sl
 800398a:	2201      	movs	r2, #1
 800398c:	4628      	mov	r0, r5
 800398e:	f000 fbf7 	bl	8004180 <__lshift>
 8003992:	4621      	mov	r1, r4
 8003994:	4682      	mov	sl, r0
 8003996:	f000 fc5f 	bl	8004258 <__mcmp>
 800399a:	2800      	cmp	r0, #0
 800399c:	dc03      	bgt.n	80039a6 <_dtoa_r+0xa96>
 800399e:	d1e1      	bne.n	8003964 <_dtoa_r+0xa54>
 80039a0:	f019 0f01 	tst.w	r9, #1
 80039a4:	d0de      	beq.n	8003964 <_dtoa_r+0xa54>
 80039a6:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80039aa:	d1d8      	bne.n	800395e <_dtoa_r+0xa4e>
 80039ac:	2339      	movs	r3, #57	; 0x39
 80039ae:	9a04      	ldr	r2, [sp, #16]
 80039b0:	7013      	strb	r3, [r2, #0]
 80039b2:	463b      	mov	r3, r7
 80039b4:	461f      	mov	r7, r3
 80039b6:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 80039ba:	3b01      	subs	r3, #1
 80039bc:	2a39      	cmp	r2, #57	; 0x39
 80039be:	d06b      	beq.n	8003a98 <_dtoa_r+0xb88>
 80039c0:	3201      	adds	r2, #1
 80039c2:	701a      	strb	r2, [r3, #0]
 80039c4:	e74a      	b.n	800385c <_dtoa_r+0x94c>
 80039c6:	2a00      	cmp	r2, #0
 80039c8:	dd07      	ble.n	80039da <_dtoa_r+0xaca>
 80039ca:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80039ce:	d0ed      	beq.n	80039ac <_dtoa_r+0xa9c>
 80039d0:	9a04      	ldr	r2, [sp, #16]
 80039d2:	f109 0301 	add.w	r3, r9, #1
 80039d6:	7013      	strb	r3, [r2, #0]
 80039d8:	e740      	b.n	800385c <_dtoa_r+0x94c>
 80039da:	9b08      	ldr	r3, [sp, #32]
 80039dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80039de:	f803 9c01 	strb.w	r9, [r3, #-1]
 80039e2:	4293      	cmp	r3, r2
 80039e4:	d042      	beq.n	8003a6c <_dtoa_r+0xb5c>
 80039e6:	4651      	mov	r1, sl
 80039e8:	2300      	movs	r3, #0
 80039ea:	220a      	movs	r2, #10
 80039ec:	4628      	mov	r0, r5
 80039ee:	f000 f9d1 	bl	8003d94 <__multadd>
 80039f2:	45b0      	cmp	r8, r6
 80039f4:	4682      	mov	sl, r0
 80039f6:	f04f 0300 	mov.w	r3, #0
 80039fa:	f04f 020a 	mov.w	r2, #10
 80039fe:	4641      	mov	r1, r8
 8003a00:	4628      	mov	r0, r5
 8003a02:	d107      	bne.n	8003a14 <_dtoa_r+0xb04>
 8003a04:	f000 f9c6 	bl	8003d94 <__multadd>
 8003a08:	4680      	mov	r8, r0
 8003a0a:	4606      	mov	r6, r0
 8003a0c:	9b08      	ldr	r3, [sp, #32]
 8003a0e:	3301      	adds	r3, #1
 8003a10:	9308      	str	r3, [sp, #32]
 8003a12:	e775      	b.n	8003900 <_dtoa_r+0x9f0>
 8003a14:	f000 f9be 	bl	8003d94 <__multadd>
 8003a18:	4631      	mov	r1, r6
 8003a1a:	4680      	mov	r8, r0
 8003a1c:	2300      	movs	r3, #0
 8003a1e:	220a      	movs	r2, #10
 8003a20:	4628      	mov	r0, r5
 8003a22:	f000 f9b7 	bl	8003d94 <__multadd>
 8003a26:	4606      	mov	r6, r0
 8003a28:	e7f0      	b.n	8003a0c <_dtoa_r+0xafc>
 8003a2a:	9b08      	ldr	r3, [sp, #32]
 8003a2c:	9306      	str	r3, [sp, #24]
 8003a2e:	9f03      	ldr	r7, [sp, #12]
 8003a30:	4621      	mov	r1, r4
 8003a32:	4650      	mov	r0, sl
 8003a34:	f7ff f9e0 	bl	8002df8 <quorem>
 8003a38:	9b03      	ldr	r3, [sp, #12]
 8003a3a:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8003a3e:	f807 9b01 	strb.w	r9, [r7], #1
 8003a42:	1afa      	subs	r2, r7, r3
 8003a44:	9b06      	ldr	r3, [sp, #24]
 8003a46:	4293      	cmp	r3, r2
 8003a48:	dd07      	ble.n	8003a5a <_dtoa_r+0xb4a>
 8003a4a:	4651      	mov	r1, sl
 8003a4c:	2300      	movs	r3, #0
 8003a4e:	220a      	movs	r2, #10
 8003a50:	4628      	mov	r0, r5
 8003a52:	f000 f99f 	bl	8003d94 <__multadd>
 8003a56:	4682      	mov	sl, r0
 8003a58:	e7ea      	b.n	8003a30 <_dtoa_r+0xb20>
 8003a5a:	9b06      	ldr	r3, [sp, #24]
 8003a5c:	f04f 0800 	mov.w	r8, #0
 8003a60:	2b00      	cmp	r3, #0
 8003a62:	bfcc      	ite	gt
 8003a64:	461f      	movgt	r7, r3
 8003a66:	2701      	movle	r7, #1
 8003a68:	9b03      	ldr	r3, [sp, #12]
 8003a6a:	441f      	add	r7, r3
 8003a6c:	4651      	mov	r1, sl
 8003a6e:	2201      	movs	r2, #1
 8003a70:	4628      	mov	r0, r5
 8003a72:	f000 fb85 	bl	8004180 <__lshift>
 8003a76:	4621      	mov	r1, r4
 8003a78:	4682      	mov	sl, r0
 8003a7a:	f000 fbed 	bl	8004258 <__mcmp>
 8003a7e:	2800      	cmp	r0, #0
 8003a80:	dc97      	bgt.n	80039b2 <_dtoa_r+0xaa2>
 8003a82:	d102      	bne.n	8003a8a <_dtoa_r+0xb7a>
 8003a84:	f019 0f01 	tst.w	r9, #1
 8003a88:	d193      	bne.n	80039b2 <_dtoa_r+0xaa2>
 8003a8a:	463b      	mov	r3, r7
 8003a8c:	461f      	mov	r7, r3
 8003a8e:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003a92:	2a30      	cmp	r2, #48	; 0x30
 8003a94:	d0fa      	beq.n	8003a8c <_dtoa_r+0xb7c>
 8003a96:	e6e1      	b.n	800385c <_dtoa_r+0x94c>
 8003a98:	9a03      	ldr	r2, [sp, #12]
 8003a9a:	429a      	cmp	r2, r3
 8003a9c:	d18a      	bne.n	80039b4 <_dtoa_r+0xaa4>
 8003a9e:	2331      	movs	r3, #49	; 0x31
 8003aa0:	f10b 0b01 	add.w	fp, fp, #1
 8003aa4:	e797      	b.n	80039d6 <_dtoa_r+0xac6>
 8003aa6:	4b0a      	ldr	r3, [pc, #40]	; (8003ad0 <_dtoa_r+0xbc0>)
 8003aa8:	f7ff ba9f 	b.w	8002fea <_dtoa_r+0xda>
 8003aac:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003aae:	2b00      	cmp	r3, #0
 8003ab0:	f47f aa77 	bne.w	8002fa2 <_dtoa_r+0x92>
 8003ab4:	4b07      	ldr	r3, [pc, #28]	; (8003ad4 <_dtoa_r+0xbc4>)
 8003ab6:	f7ff ba98 	b.w	8002fea <_dtoa_r+0xda>
 8003aba:	9b06      	ldr	r3, [sp, #24]
 8003abc:	2b00      	cmp	r3, #0
 8003abe:	dcb6      	bgt.n	8003a2e <_dtoa_r+0xb1e>
 8003ac0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003ac2:	2b02      	cmp	r3, #2
 8003ac4:	f73f aeb5 	bgt.w	8003832 <_dtoa_r+0x922>
 8003ac8:	e7b1      	b.n	8003a2e <_dtoa_r+0xb1e>
 8003aca:	bf00      	nop
 8003acc:	0800660f 	.word	0x0800660f
 8003ad0:	0800656a 	.word	0x0800656a
 8003ad4:	08006593 	.word	0x08006593

08003ad8 <_free_r>:
 8003ad8:	b538      	push	{r3, r4, r5, lr}
 8003ada:	4605      	mov	r5, r0
 8003adc:	2900      	cmp	r1, #0
 8003ade:	d040      	beq.n	8003b62 <_free_r+0x8a>
 8003ae0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003ae4:	1f0c      	subs	r4, r1, #4
 8003ae6:	2b00      	cmp	r3, #0
 8003ae8:	bfb8      	it	lt
 8003aea:	18e4      	addlt	r4, r4, r3
 8003aec:	f000 f8e4 	bl	8003cb8 <__malloc_lock>
 8003af0:	4a1c      	ldr	r2, [pc, #112]	; (8003b64 <_free_r+0x8c>)
 8003af2:	6813      	ldr	r3, [r2, #0]
 8003af4:	b933      	cbnz	r3, 8003b04 <_free_r+0x2c>
 8003af6:	6063      	str	r3, [r4, #4]
 8003af8:	6014      	str	r4, [r2, #0]
 8003afa:	4628      	mov	r0, r5
 8003afc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003b00:	f000 b8e0 	b.w	8003cc4 <__malloc_unlock>
 8003b04:	42a3      	cmp	r3, r4
 8003b06:	d908      	bls.n	8003b1a <_free_r+0x42>
 8003b08:	6820      	ldr	r0, [r4, #0]
 8003b0a:	1821      	adds	r1, r4, r0
 8003b0c:	428b      	cmp	r3, r1
 8003b0e:	bf01      	itttt	eq
 8003b10:	6819      	ldreq	r1, [r3, #0]
 8003b12:	685b      	ldreq	r3, [r3, #4]
 8003b14:	1809      	addeq	r1, r1, r0
 8003b16:	6021      	streq	r1, [r4, #0]
 8003b18:	e7ed      	b.n	8003af6 <_free_r+0x1e>
 8003b1a:	461a      	mov	r2, r3
 8003b1c:	685b      	ldr	r3, [r3, #4]
 8003b1e:	b10b      	cbz	r3, 8003b24 <_free_r+0x4c>
 8003b20:	42a3      	cmp	r3, r4
 8003b22:	d9fa      	bls.n	8003b1a <_free_r+0x42>
 8003b24:	6811      	ldr	r1, [r2, #0]
 8003b26:	1850      	adds	r0, r2, r1
 8003b28:	42a0      	cmp	r0, r4
 8003b2a:	d10b      	bne.n	8003b44 <_free_r+0x6c>
 8003b2c:	6820      	ldr	r0, [r4, #0]
 8003b2e:	4401      	add	r1, r0
 8003b30:	1850      	adds	r0, r2, r1
 8003b32:	4283      	cmp	r3, r0
 8003b34:	6011      	str	r1, [r2, #0]
 8003b36:	d1e0      	bne.n	8003afa <_free_r+0x22>
 8003b38:	6818      	ldr	r0, [r3, #0]
 8003b3a:	685b      	ldr	r3, [r3, #4]
 8003b3c:	4408      	add	r0, r1
 8003b3e:	6010      	str	r0, [r2, #0]
 8003b40:	6053      	str	r3, [r2, #4]
 8003b42:	e7da      	b.n	8003afa <_free_r+0x22>
 8003b44:	d902      	bls.n	8003b4c <_free_r+0x74>
 8003b46:	230c      	movs	r3, #12
 8003b48:	602b      	str	r3, [r5, #0]
 8003b4a:	e7d6      	b.n	8003afa <_free_r+0x22>
 8003b4c:	6820      	ldr	r0, [r4, #0]
 8003b4e:	1821      	adds	r1, r4, r0
 8003b50:	428b      	cmp	r3, r1
 8003b52:	bf01      	itttt	eq
 8003b54:	6819      	ldreq	r1, [r3, #0]
 8003b56:	685b      	ldreq	r3, [r3, #4]
 8003b58:	1809      	addeq	r1, r1, r0
 8003b5a:	6021      	streq	r1, [r4, #0]
 8003b5c:	6063      	str	r3, [r4, #4]
 8003b5e:	6054      	str	r4, [r2, #4]
 8003b60:	e7cb      	b.n	8003afa <_free_r+0x22>
 8003b62:	bd38      	pop	{r3, r4, r5, pc}
 8003b64:	2000033c 	.word	0x2000033c

08003b68 <malloc>:
 8003b68:	4b02      	ldr	r3, [pc, #8]	; (8003b74 <malloc+0xc>)
 8003b6a:	4601      	mov	r1, r0
 8003b6c:	6818      	ldr	r0, [r3, #0]
 8003b6e:	f000 b823 	b.w	8003bb8 <_malloc_r>
 8003b72:	bf00      	nop
 8003b74:	20000064 	.word	0x20000064

08003b78 <sbrk_aligned>:
 8003b78:	b570      	push	{r4, r5, r6, lr}
 8003b7a:	4e0e      	ldr	r6, [pc, #56]	; (8003bb4 <sbrk_aligned+0x3c>)
 8003b7c:	460c      	mov	r4, r1
 8003b7e:	6831      	ldr	r1, [r6, #0]
 8003b80:	4605      	mov	r5, r0
 8003b82:	b911      	cbnz	r1, 8003b8a <sbrk_aligned+0x12>
 8003b84:	f001 fe0c 	bl	80057a0 <_sbrk_r>
 8003b88:	6030      	str	r0, [r6, #0]
 8003b8a:	4621      	mov	r1, r4
 8003b8c:	4628      	mov	r0, r5
 8003b8e:	f001 fe07 	bl	80057a0 <_sbrk_r>
 8003b92:	1c43      	adds	r3, r0, #1
 8003b94:	d00a      	beq.n	8003bac <sbrk_aligned+0x34>
 8003b96:	1cc4      	adds	r4, r0, #3
 8003b98:	f024 0403 	bic.w	r4, r4, #3
 8003b9c:	42a0      	cmp	r0, r4
 8003b9e:	d007      	beq.n	8003bb0 <sbrk_aligned+0x38>
 8003ba0:	1a21      	subs	r1, r4, r0
 8003ba2:	4628      	mov	r0, r5
 8003ba4:	f001 fdfc 	bl	80057a0 <_sbrk_r>
 8003ba8:	3001      	adds	r0, #1
 8003baa:	d101      	bne.n	8003bb0 <sbrk_aligned+0x38>
 8003bac:	f04f 34ff 	mov.w	r4, #4294967295
 8003bb0:	4620      	mov	r0, r4
 8003bb2:	bd70      	pop	{r4, r5, r6, pc}
 8003bb4:	20000340 	.word	0x20000340

08003bb8 <_malloc_r>:
 8003bb8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003bbc:	1ccd      	adds	r5, r1, #3
 8003bbe:	f025 0503 	bic.w	r5, r5, #3
 8003bc2:	3508      	adds	r5, #8
 8003bc4:	2d0c      	cmp	r5, #12
 8003bc6:	bf38      	it	cc
 8003bc8:	250c      	movcc	r5, #12
 8003bca:	2d00      	cmp	r5, #0
 8003bcc:	4607      	mov	r7, r0
 8003bce:	db01      	blt.n	8003bd4 <_malloc_r+0x1c>
 8003bd0:	42a9      	cmp	r1, r5
 8003bd2:	d905      	bls.n	8003be0 <_malloc_r+0x28>
 8003bd4:	230c      	movs	r3, #12
 8003bd6:	2600      	movs	r6, #0
 8003bd8:	603b      	str	r3, [r7, #0]
 8003bda:	4630      	mov	r0, r6
 8003bdc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003be0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8003cb4 <_malloc_r+0xfc>
 8003be4:	f000 f868 	bl	8003cb8 <__malloc_lock>
 8003be8:	f8d8 3000 	ldr.w	r3, [r8]
 8003bec:	461c      	mov	r4, r3
 8003bee:	bb5c      	cbnz	r4, 8003c48 <_malloc_r+0x90>
 8003bf0:	4629      	mov	r1, r5
 8003bf2:	4638      	mov	r0, r7
 8003bf4:	f7ff ffc0 	bl	8003b78 <sbrk_aligned>
 8003bf8:	1c43      	adds	r3, r0, #1
 8003bfa:	4604      	mov	r4, r0
 8003bfc:	d155      	bne.n	8003caa <_malloc_r+0xf2>
 8003bfe:	f8d8 4000 	ldr.w	r4, [r8]
 8003c02:	4626      	mov	r6, r4
 8003c04:	2e00      	cmp	r6, #0
 8003c06:	d145      	bne.n	8003c94 <_malloc_r+0xdc>
 8003c08:	2c00      	cmp	r4, #0
 8003c0a:	d048      	beq.n	8003c9e <_malloc_r+0xe6>
 8003c0c:	6823      	ldr	r3, [r4, #0]
 8003c0e:	4631      	mov	r1, r6
 8003c10:	4638      	mov	r0, r7
 8003c12:	eb04 0903 	add.w	r9, r4, r3
 8003c16:	f001 fdc3 	bl	80057a0 <_sbrk_r>
 8003c1a:	4581      	cmp	r9, r0
 8003c1c:	d13f      	bne.n	8003c9e <_malloc_r+0xe6>
 8003c1e:	6821      	ldr	r1, [r4, #0]
 8003c20:	4638      	mov	r0, r7
 8003c22:	1a6d      	subs	r5, r5, r1
 8003c24:	4629      	mov	r1, r5
 8003c26:	f7ff ffa7 	bl	8003b78 <sbrk_aligned>
 8003c2a:	3001      	adds	r0, #1
 8003c2c:	d037      	beq.n	8003c9e <_malloc_r+0xe6>
 8003c2e:	6823      	ldr	r3, [r4, #0]
 8003c30:	442b      	add	r3, r5
 8003c32:	6023      	str	r3, [r4, #0]
 8003c34:	f8d8 3000 	ldr.w	r3, [r8]
 8003c38:	2b00      	cmp	r3, #0
 8003c3a:	d038      	beq.n	8003cae <_malloc_r+0xf6>
 8003c3c:	685a      	ldr	r2, [r3, #4]
 8003c3e:	42a2      	cmp	r2, r4
 8003c40:	d12b      	bne.n	8003c9a <_malloc_r+0xe2>
 8003c42:	2200      	movs	r2, #0
 8003c44:	605a      	str	r2, [r3, #4]
 8003c46:	e00f      	b.n	8003c68 <_malloc_r+0xb0>
 8003c48:	6822      	ldr	r2, [r4, #0]
 8003c4a:	1b52      	subs	r2, r2, r5
 8003c4c:	d41f      	bmi.n	8003c8e <_malloc_r+0xd6>
 8003c4e:	2a0b      	cmp	r2, #11
 8003c50:	d917      	bls.n	8003c82 <_malloc_r+0xca>
 8003c52:	1961      	adds	r1, r4, r5
 8003c54:	42a3      	cmp	r3, r4
 8003c56:	6025      	str	r5, [r4, #0]
 8003c58:	bf18      	it	ne
 8003c5a:	6059      	strne	r1, [r3, #4]
 8003c5c:	6863      	ldr	r3, [r4, #4]
 8003c5e:	bf08      	it	eq
 8003c60:	f8c8 1000 	streq.w	r1, [r8]
 8003c64:	5162      	str	r2, [r4, r5]
 8003c66:	604b      	str	r3, [r1, #4]
 8003c68:	4638      	mov	r0, r7
 8003c6a:	f104 060b 	add.w	r6, r4, #11
 8003c6e:	f000 f829 	bl	8003cc4 <__malloc_unlock>
 8003c72:	f026 0607 	bic.w	r6, r6, #7
 8003c76:	1d23      	adds	r3, r4, #4
 8003c78:	1af2      	subs	r2, r6, r3
 8003c7a:	d0ae      	beq.n	8003bda <_malloc_r+0x22>
 8003c7c:	1b9b      	subs	r3, r3, r6
 8003c7e:	50a3      	str	r3, [r4, r2]
 8003c80:	e7ab      	b.n	8003bda <_malloc_r+0x22>
 8003c82:	42a3      	cmp	r3, r4
 8003c84:	6862      	ldr	r2, [r4, #4]
 8003c86:	d1dd      	bne.n	8003c44 <_malloc_r+0x8c>
 8003c88:	f8c8 2000 	str.w	r2, [r8]
 8003c8c:	e7ec      	b.n	8003c68 <_malloc_r+0xb0>
 8003c8e:	4623      	mov	r3, r4
 8003c90:	6864      	ldr	r4, [r4, #4]
 8003c92:	e7ac      	b.n	8003bee <_malloc_r+0x36>
 8003c94:	4634      	mov	r4, r6
 8003c96:	6876      	ldr	r6, [r6, #4]
 8003c98:	e7b4      	b.n	8003c04 <_malloc_r+0x4c>
 8003c9a:	4613      	mov	r3, r2
 8003c9c:	e7cc      	b.n	8003c38 <_malloc_r+0x80>
 8003c9e:	230c      	movs	r3, #12
 8003ca0:	4638      	mov	r0, r7
 8003ca2:	603b      	str	r3, [r7, #0]
 8003ca4:	f000 f80e 	bl	8003cc4 <__malloc_unlock>
 8003ca8:	e797      	b.n	8003bda <_malloc_r+0x22>
 8003caa:	6025      	str	r5, [r4, #0]
 8003cac:	e7dc      	b.n	8003c68 <_malloc_r+0xb0>
 8003cae:	605b      	str	r3, [r3, #4]
 8003cb0:	deff      	udf	#255	; 0xff
 8003cb2:	bf00      	nop
 8003cb4:	2000033c 	.word	0x2000033c

08003cb8 <__malloc_lock>:
 8003cb8:	4801      	ldr	r0, [pc, #4]	; (8003cc0 <__malloc_lock+0x8>)
 8003cba:	f7ff b888 	b.w	8002dce <__retarget_lock_acquire_recursive>
 8003cbe:	bf00      	nop
 8003cc0:	20000338 	.word	0x20000338

08003cc4 <__malloc_unlock>:
 8003cc4:	4801      	ldr	r0, [pc, #4]	; (8003ccc <__malloc_unlock+0x8>)
 8003cc6:	f7ff b883 	b.w	8002dd0 <__retarget_lock_release_recursive>
 8003cca:	bf00      	nop
 8003ccc:	20000338 	.word	0x20000338

08003cd0 <_Balloc>:
 8003cd0:	b570      	push	{r4, r5, r6, lr}
 8003cd2:	69c6      	ldr	r6, [r0, #28]
 8003cd4:	4604      	mov	r4, r0
 8003cd6:	460d      	mov	r5, r1
 8003cd8:	b976      	cbnz	r6, 8003cf8 <_Balloc+0x28>
 8003cda:	2010      	movs	r0, #16
 8003cdc:	f7ff ff44 	bl	8003b68 <malloc>
 8003ce0:	4602      	mov	r2, r0
 8003ce2:	61e0      	str	r0, [r4, #28]
 8003ce4:	b920      	cbnz	r0, 8003cf0 <_Balloc+0x20>
 8003ce6:	216b      	movs	r1, #107	; 0x6b
 8003ce8:	4b17      	ldr	r3, [pc, #92]	; (8003d48 <_Balloc+0x78>)
 8003cea:	4818      	ldr	r0, [pc, #96]	; (8003d4c <_Balloc+0x7c>)
 8003cec:	f001 fd7c 	bl	80057e8 <__assert_func>
 8003cf0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003cf4:	6006      	str	r6, [r0, #0]
 8003cf6:	60c6      	str	r6, [r0, #12]
 8003cf8:	69e6      	ldr	r6, [r4, #28]
 8003cfa:	68f3      	ldr	r3, [r6, #12]
 8003cfc:	b183      	cbz	r3, 8003d20 <_Balloc+0x50>
 8003cfe:	69e3      	ldr	r3, [r4, #28]
 8003d00:	68db      	ldr	r3, [r3, #12]
 8003d02:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003d06:	b9b8      	cbnz	r0, 8003d38 <_Balloc+0x68>
 8003d08:	2101      	movs	r1, #1
 8003d0a:	fa01 f605 	lsl.w	r6, r1, r5
 8003d0e:	1d72      	adds	r2, r6, #5
 8003d10:	4620      	mov	r0, r4
 8003d12:	0092      	lsls	r2, r2, #2
 8003d14:	f001 fd86 	bl	8005824 <_calloc_r>
 8003d18:	b160      	cbz	r0, 8003d34 <_Balloc+0x64>
 8003d1a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003d1e:	e00e      	b.n	8003d3e <_Balloc+0x6e>
 8003d20:	2221      	movs	r2, #33	; 0x21
 8003d22:	2104      	movs	r1, #4
 8003d24:	4620      	mov	r0, r4
 8003d26:	f001 fd7d 	bl	8005824 <_calloc_r>
 8003d2a:	69e3      	ldr	r3, [r4, #28]
 8003d2c:	60f0      	str	r0, [r6, #12]
 8003d2e:	68db      	ldr	r3, [r3, #12]
 8003d30:	2b00      	cmp	r3, #0
 8003d32:	d1e4      	bne.n	8003cfe <_Balloc+0x2e>
 8003d34:	2000      	movs	r0, #0
 8003d36:	bd70      	pop	{r4, r5, r6, pc}
 8003d38:	6802      	ldr	r2, [r0, #0]
 8003d3a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003d3e:	2300      	movs	r3, #0
 8003d40:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003d44:	e7f7      	b.n	8003d36 <_Balloc+0x66>
 8003d46:	bf00      	nop
 8003d48:	080065a0 	.word	0x080065a0
 8003d4c:	08006620 	.word	0x08006620

08003d50 <_Bfree>:
 8003d50:	b570      	push	{r4, r5, r6, lr}
 8003d52:	69c6      	ldr	r6, [r0, #28]
 8003d54:	4605      	mov	r5, r0
 8003d56:	460c      	mov	r4, r1
 8003d58:	b976      	cbnz	r6, 8003d78 <_Bfree+0x28>
 8003d5a:	2010      	movs	r0, #16
 8003d5c:	f7ff ff04 	bl	8003b68 <malloc>
 8003d60:	4602      	mov	r2, r0
 8003d62:	61e8      	str	r0, [r5, #28]
 8003d64:	b920      	cbnz	r0, 8003d70 <_Bfree+0x20>
 8003d66:	218f      	movs	r1, #143	; 0x8f
 8003d68:	4b08      	ldr	r3, [pc, #32]	; (8003d8c <_Bfree+0x3c>)
 8003d6a:	4809      	ldr	r0, [pc, #36]	; (8003d90 <_Bfree+0x40>)
 8003d6c:	f001 fd3c 	bl	80057e8 <__assert_func>
 8003d70:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003d74:	6006      	str	r6, [r0, #0]
 8003d76:	60c6      	str	r6, [r0, #12]
 8003d78:	b13c      	cbz	r4, 8003d8a <_Bfree+0x3a>
 8003d7a:	69eb      	ldr	r3, [r5, #28]
 8003d7c:	6862      	ldr	r2, [r4, #4]
 8003d7e:	68db      	ldr	r3, [r3, #12]
 8003d80:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003d84:	6021      	str	r1, [r4, #0]
 8003d86:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003d8a:	bd70      	pop	{r4, r5, r6, pc}
 8003d8c:	080065a0 	.word	0x080065a0
 8003d90:	08006620 	.word	0x08006620

08003d94 <__multadd>:
 8003d94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d98:	4607      	mov	r7, r0
 8003d9a:	460c      	mov	r4, r1
 8003d9c:	461e      	mov	r6, r3
 8003d9e:	2000      	movs	r0, #0
 8003da0:	690d      	ldr	r5, [r1, #16]
 8003da2:	f101 0c14 	add.w	ip, r1, #20
 8003da6:	f8dc 3000 	ldr.w	r3, [ip]
 8003daa:	3001      	adds	r0, #1
 8003dac:	b299      	uxth	r1, r3
 8003dae:	fb02 6101 	mla	r1, r2, r1, r6
 8003db2:	0c1e      	lsrs	r6, r3, #16
 8003db4:	0c0b      	lsrs	r3, r1, #16
 8003db6:	fb02 3306 	mla	r3, r2, r6, r3
 8003dba:	b289      	uxth	r1, r1
 8003dbc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003dc0:	4285      	cmp	r5, r0
 8003dc2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003dc6:	f84c 1b04 	str.w	r1, [ip], #4
 8003dca:	dcec      	bgt.n	8003da6 <__multadd+0x12>
 8003dcc:	b30e      	cbz	r6, 8003e12 <__multadd+0x7e>
 8003dce:	68a3      	ldr	r3, [r4, #8]
 8003dd0:	42ab      	cmp	r3, r5
 8003dd2:	dc19      	bgt.n	8003e08 <__multadd+0x74>
 8003dd4:	6861      	ldr	r1, [r4, #4]
 8003dd6:	4638      	mov	r0, r7
 8003dd8:	3101      	adds	r1, #1
 8003dda:	f7ff ff79 	bl	8003cd0 <_Balloc>
 8003dde:	4680      	mov	r8, r0
 8003de0:	b928      	cbnz	r0, 8003dee <__multadd+0x5a>
 8003de2:	4602      	mov	r2, r0
 8003de4:	21ba      	movs	r1, #186	; 0xba
 8003de6:	4b0c      	ldr	r3, [pc, #48]	; (8003e18 <__multadd+0x84>)
 8003de8:	480c      	ldr	r0, [pc, #48]	; (8003e1c <__multadd+0x88>)
 8003dea:	f001 fcfd 	bl	80057e8 <__assert_func>
 8003dee:	6922      	ldr	r2, [r4, #16]
 8003df0:	f104 010c 	add.w	r1, r4, #12
 8003df4:	3202      	adds	r2, #2
 8003df6:	0092      	lsls	r2, r2, #2
 8003df8:	300c      	adds	r0, #12
 8003dfa:	f001 fce1 	bl	80057c0 <memcpy>
 8003dfe:	4621      	mov	r1, r4
 8003e00:	4638      	mov	r0, r7
 8003e02:	f7ff ffa5 	bl	8003d50 <_Bfree>
 8003e06:	4644      	mov	r4, r8
 8003e08:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003e0c:	3501      	adds	r5, #1
 8003e0e:	615e      	str	r6, [r3, #20]
 8003e10:	6125      	str	r5, [r4, #16]
 8003e12:	4620      	mov	r0, r4
 8003e14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003e18:	0800660f 	.word	0x0800660f
 8003e1c:	08006620 	.word	0x08006620

08003e20 <__s2b>:
 8003e20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003e24:	4615      	mov	r5, r2
 8003e26:	2209      	movs	r2, #9
 8003e28:	461f      	mov	r7, r3
 8003e2a:	3308      	adds	r3, #8
 8003e2c:	460c      	mov	r4, r1
 8003e2e:	fb93 f3f2 	sdiv	r3, r3, r2
 8003e32:	4606      	mov	r6, r0
 8003e34:	2201      	movs	r2, #1
 8003e36:	2100      	movs	r1, #0
 8003e38:	429a      	cmp	r2, r3
 8003e3a:	db09      	blt.n	8003e50 <__s2b+0x30>
 8003e3c:	4630      	mov	r0, r6
 8003e3e:	f7ff ff47 	bl	8003cd0 <_Balloc>
 8003e42:	b940      	cbnz	r0, 8003e56 <__s2b+0x36>
 8003e44:	4602      	mov	r2, r0
 8003e46:	21d3      	movs	r1, #211	; 0xd3
 8003e48:	4b18      	ldr	r3, [pc, #96]	; (8003eac <__s2b+0x8c>)
 8003e4a:	4819      	ldr	r0, [pc, #100]	; (8003eb0 <__s2b+0x90>)
 8003e4c:	f001 fccc 	bl	80057e8 <__assert_func>
 8003e50:	0052      	lsls	r2, r2, #1
 8003e52:	3101      	adds	r1, #1
 8003e54:	e7f0      	b.n	8003e38 <__s2b+0x18>
 8003e56:	9b08      	ldr	r3, [sp, #32]
 8003e58:	2d09      	cmp	r5, #9
 8003e5a:	6143      	str	r3, [r0, #20]
 8003e5c:	f04f 0301 	mov.w	r3, #1
 8003e60:	6103      	str	r3, [r0, #16]
 8003e62:	dd16      	ble.n	8003e92 <__s2b+0x72>
 8003e64:	f104 0909 	add.w	r9, r4, #9
 8003e68:	46c8      	mov	r8, r9
 8003e6a:	442c      	add	r4, r5
 8003e6c:	f818 3b01 	ldrb.w	r3, [r8], #1
 8003e70:	4601      	mov	r1, r0
 8003e72:	220a      	movs	r2, #10
 8003e74:	4630      	mov	r0, r6
 8003e76:	3b30      	subs	r3, #48	; 0x30
 8003e78:	f7ff ff8c 	bl	8003d94 <__multadd>
 8003e7c:	45a0      	cmp	r8, r4
 8003e7e:	d1f5      	bne.n	8003e6c <__s2b+0x4c>
 8003e80:	f1a5 0408 	sub.w	r4, r5, #8
 8003e84:	444c      	add	r4, r9
 8003e86:	1b2d      	subs	r5, r5, r4
 8003e88:	1963      	adds	r3, r4, r5
 8003e8a:	42bb      	cmp	r3, r7
 8003e8c:	db04      	blt.n	8003e98 <__s2b+0x78>
 8003e8e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003e92:	2509      	movs	r5, #9
 8003e94:	340a      	adds	r4, #10
 8003e96:	e7f6      	b.n	8003e86 <__s2b+0x66>
 8003e98:	f814 3b01 	ldrb.w	r3, [r4], #1
 8003e9c:	4601      	mov	r1, r0
 8003e9e:	220a      	movs	r2, #10
 8003ea0:	4630      	mov	r0, r6
 8003ea2:	3b30      	subs	r3, #48	; 0x30
 8003ea4:	f7ff ff76 	bl	8003d94 <__multadd>
 8003ea8:	e7ee      	b.n	8003e88 <__s2b+0x68>
 8003eaa:	bf00      	nop
 8003eac:	0800660f 	.word	0x0800660f
 8003eb0:	08006620 	.word	0x08006620

08003eb4 <__hi0bits>:
 8003eb4:	0c02      	lsrs	r2, r0, #16
 8003eb6:	0412      	lsls	r2, r2, #16
 8003eb8:	4603      	mov	r3, r0
 8003eba:	b9ca      	cbnz	r2, 8003ef0 <__hi0bits+0x3c>
 8003ebc:	0403      	lsls	r3, r0, #16
 8003ebe:	2010      	movs	r0, #16
 8003ec0:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8003ec4:	bf04      	itt	eq
 8003ec6:	021b      	lsleq	r3, r3, #8
 8003ec8:	3008      	addeq	r0, #8
 8003eca:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8003ece:	bf04      	itt	eq
 8003ed0:	011b      	lsleq	r3, r3, #4
 8003ed2:	3004      	addeq	r0, #4
 8003ed4:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8003ed8:	bf04      	itt	eq
 8003eda:	009b      	lsleq	r3, r3, #2
 8003edc:	3002      	addeq	r0, #2
 8003ede:	2b00      	cmp	r3, #0
 8003ee0:	db05      	blt.n	8003eee <__hi0bits+0x3a>
 8003ee2:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8003ee6:	f100 0001 	add.w	r0, r0, #1
 8003eea:	bf08      	it	eq
 8003eec:	2020      	moveq	r0, #32
 8003eee:	4770      	bx	lr
 8003ef0:	2000      	movs	r0, #0
 8003ef2:	e7e5      	b.n	8003ec0 <__hi0bits+0xc>

08003ef4 <__lo0bits>:
 8003ef4:	6803      	ldr	r3, [r0, #0]
 8003ef6:	4602      	mov	r2, r0
 8003ef8:	f013 0007 	ands.w	r0, r3, #7
 8003efc:	d00b      	beq.n	8003f16 <__lo0bits+0x22>
 8003efe:	07d9      	lsls	r1, r3, #31
 8003f00:	d421      	bmi.n	8003f46 <__lo0bits+0x52>
 8003f02:	0798      	lsls	r0, r3, #30
 8003f04:	bf49      	itett	mi
 8003f06:	085b      	lsrmi	r3, r3, #1
 8003f08:	089b      	lsrpl	r3, r3, #2
 8003f0a:	2001      	movmi	r0, #1
 8003f0c:	6013      	strmi	r3, [r2, #0]
 8003f0e:	bf5c      	itt	pl
 8003f10:	2002      	movpl	r0, #2
 8003f12:	6013      	strpl	r3, [r2, #0]
 8003f14:	4770      	bx	lr
 8003f16:	b299      	uxth	r1, r3
 8003f18:	b909      	cbnz	r1, 8003f1e <__lo0bits+0x2a>
 8003f1a:	2010      	movs	r0, #16
 8003f1c:	0c1b      	lsrs	r3, r3, #16
 8003f1e:	b2d9      	uxtb	r1, r3
 8003f20:	b909      	cbnz	r1, 8003f26 <__lo0bits+0x32>
 8003f22:	3008      	adds	r0, #8
 8003f24:	0a1b      	lsrs	r3, r3, #8
 8003f26:	0719      	lsls	r1, r3, #28
 8003f28:	bf04      	itt	eq
 8003f2a:	091b      	lsreq	r3, r3, #4
 8003f2c:	3004      	addeq	r0, #4
 8003f2e:	0799      	lsls	r1, r3, #30
 8003f30:	bf04      	itt	eq
 8003f32:	089b      	lsreq	r3, r3, #2
 8003f34:	3002      	addeq	r0, #2
 8003f36:	07d9      	lsls	r1, r3, #31
 8003f38:	d403      	bmi.n	8003f42 <__lo0bits+0x4e>
 8003f3a:	085b      	lsrs	r3, r3, #1
 8003f3c:	f100 0001 	add.w	r0, r0, #1
 8003f40:	d003      	beq.n	8003f4a <__lo0bits+0x56>
 8003f42:	6013      	str	r3, [r2, #0]
 8003f44:	4770      	bx	lr
 8003f46:	2000      	movs	r0, #0
 8003f48:	4770      	bx	lr
 8003f4a:	2020      	movs	r0, #32
 8003f4c:	4770      	bx	lr
	...

08003f50 <__i2b>:
 8003f50:	b510      	push	{r4, lr}
 8003f52:	460c      	mov	r4, r1
 8003f54:	2101      	movs	r1, #1
 8003f56:	f7ff febb 	bl	8003cd0 <_Balloc>
 8003f5a:	4602      	mov	r2, r0
 8003f5c:	b928      	cbnz	r0, 8003f6a <__i2b+0x1a>
 8003f5e:	f240 1145 	movw	r1, #325	; 0x145
 8003f62:	4b04      	ldr	r3, [pc, #16]	; (8003f74 <__i2b+0x24>)
 8003f64:	4804      	ldr	r0, [pc, #16]	; (8003f78 <__i2b+0x28>)
 8003f66:	f001 fc3f 	bl	80057e8 <__assert_func>
 8003f6a:	2301      	movs	r3, #1
 8003f6c:	6144      	str	r4, [r0, #20]
 8003f6e:	6103      	str	r3, [r0, #16]
 8003f70:	bd10      	pop	{r4, pc}
 8003f72:	bf00      	nop
 8003f74:	0800660f 	.word	0x0800660f
 8003f78:	08006620 	.word	0x08006620

08003f7c <__multiply>:
 8003f7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f80:	4691      	mov	r9, r2
 8003f82:	690a      	ldr	r2, [r1, #16]
 8003f84:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8003f88:	460c      	mov	r4, r1
 8003f8a:	429a      	cmp	r2, r3
 8003f8c:	bfbe      	ittt	lt
 8003f8e:	460b      	movlt	r3, r1
 8003f90:	464c      	movlt	r4, r9
 8003f92:	4699      	movlt	r9, r3
 8003f94:	6927      	ldr	r7, [r4, #16]
 8003f96:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8003f9a:	68a3      	ldr	r3, [r4, #8]
 8003f9c:	6861      	ldr	r1, [r4, #4]
 8003f9e:	eb07 060a 	add.w	r6, r7, sl
 8003fa2:	42b3      	cmp	r3, r6
 8003fa4:	b085      	sub	sp, #20
 8003fa6:	bfb8      	it	lt
 8003fa8:	3101      	addlt	r1, #1
 8003faa:	f7ff fe91 	bl	8003cd0 <_Balloc>
 8003fae:	b930      	cbnz	r0, 8003fbe <__multiply+0x42>
 8003fb0:	4602      	mov	r2, r0
 8003fb2:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8003fb6:	4b43      	ldr	r3, [pc, #268]	; (80040c4 <__multiply+0x148>)
 8003fb8:	4843      	ldr	r0, [pc, #268]	; (80040c8 <__multiply+0x14c>)
 8003fba:	f001 fc15 	bl	80057e8 <__assert_func>
 8003fbe:	f100 0514 	add.w	r5, r0, #20
 8003fc2:	462b      	mov	r3, r5
 8003fc4:	2200      	movs	r2, #0
 8003fc6:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003fca:	4543      	cmp	r3, r8
 8003fcc:	d321      	bcc.n	8004012 <__multiply+0x96>
 8003fce:	f104 0314 	add.w	r3, r4, #20
 8003fd2:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8003fd6:	f109 0314 	add.w	r3, r9, #20
 8003fda:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8003fde:	9202      	str	r2, [sp, #8]
 8003fe0:	1b3a      	subs	r2, r7, r4
 8003fe2:	3a15      	subs	r2, #21
 8003fe4:	f022 0203 	bic.w	r2, r2, #3
 8003fe8:	3204      	adds	r2, #4
 8003fea:	f104 0115 	add.w	r1, r4, #21
 8003fee:	428f      	cmp	r7, r1
 8003ff0:	bf38      	it	cc
 8003ff2:	2204      	movcc	r2, #4
 8003ff4:	9201      	str	r2, [sp, #4]
 8003ff6:	9a02      	ldr	r2, [sp, #8]
 8003ff8:	9303      	str	r3, [sp, #12]
 8003ffa:	429a      	cmp	r2, r3
 8003ffc:	d80c      	bhi.n	8004018 <__multiply+0x9c>
 8003ffe:	2e00      	cmp	r6, #0
 8004000:	dd03      	ble.n	800400a <__multiply+0x8e>
 8004002:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8004006:	2b00      	cmp	r3, #0
 8004008:	d05a      	beq.n	80040c0 <__multiply+0x144>
 800400a:	6106      	str	r6, [r0, #16]
 800400c:	b005      	add	sp, #20
 800400e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004012:	f843 2b04 	str.w	r2, [r3], #4
 8004016:	e7d8      	b.n	8003fca <__multiply+0x4e>
 8004018:	f8b3 a000 	ldrh.w	sl, [r3]
 800401c:	f1ba 0f00 	cmp.w	sl, #0
 8004020:	d023      	beq.n	800406a <__multiply+0xee>
 8004022:	46a9      	mov	r9, r5
 8004024:	f04f 0c00 	mov.w	ip, #0
 8004028:	f104 0e14 	add.w	lr, r4, #20
 800402c:	f85e 2b04 	ldr.w	r2, [lr], #4
 8004030:	f8d9 1000 	ldr.w	r1, [r9]
 8004034:	fa1f fb82 	uxth.w	fp, r2
 8004038:	b289      	uxth	r1, r1
 800403a:	fb0a 110b 	mla	r1, sl, fp, r1
 800403e:	4461      	add	r1, ip
 8004040:	f8d9 c000 	ldr.w	ip, [r9]
 8004044:	0c12      	lsrs	r2, r2, #16
 8004046:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 800404a:	fb0a c202 	mla	r2, sl, r2, ip
 800404e:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8004052:	b289      	uxth	r1, r1
 8004054:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004058:	4577      	cmp	r7, lr
 800405a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800405e:	f849 1b04 	str.w	r1, [r9], #4
 8004062:	d8e3      	bhi.n	800402c <__multiply+0xb0>
 8004064:	9a01      	ldr	r2, [sp, #4]
 8004066:	f845 c002 	str.w	ip, [r5, r2]
 800406a:	9a03      	ldr	r2, [sp, #12]
 800406c:	3304      	adds	r3, #4
 800406e:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8004072:	f1b9 0f00 	cmp.w	r9, #0
 8004076:	d021      	beq.n	80040bc <__multiply+0x140>
 8004078:	46ae      	mov	lr, r5
 800407a:	f04f 0a00 	mov.w	sl, #0
 800407e:	6829      	ldr	r1, [r5, #0]
 8004080:	f104 0c14 	add.w	ip, r4, #20
 8004084:	f8bc b000 	ldrh.w	fp, [ip]
 8004088:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800408c:	b289      	uxth	r1, r1
 800408e:	fb09 220b 	mla	r2, r9, fp, r2
 8004092:	4452      	add	r2, sl
 8004094:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004098:	f84e 1b04 	str.w	r1, [lr], #4
 800409c:	f85c 1b04 	ldr.w	r1, [ip], #4
 80040a0:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80040a4:	f8be 1000 	ldrh.w	r1, [lr]
 80040a8:	4567      	cmp	r7, ip
 80040aa:	fb09 110a 	mla	r1, r9, sl, r1
 80040ae:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 80040b2:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80040b6:	d8e5      	bhi.n	8004084 <__multiply+0x108>
 80040b8:	9a01      	ldr	r2, [sp, #4]
 80040ba:	50a9      	str	r1, [r5, r2]
 80040bc:	3504      	adds	r5, #4
 80040be:	e79a      	b.n	8003ff6 <__multiply+0x7a>
 80040c0:	3e01      	subs	r6, #1
 80040c2:	e79c      	b.n	8003ffe <__multiply+0x82>
 80040c4:	0800660f 	.word	0x0800660f
 80040c8:	08006620 	.word	0x08006620

080040cc <__pow5mult>:
 80040cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80040d0:	4615      	mov	r5, r2
 80040d2:	f012 0203 	ands.w	r2, r2, #3
 80040d6:	4606      	mov	r6, r0
 80040d8:	460f      	mov	r7, r1
 80040da:	d007      	beq.n	80040ec <__pow5mult+0x20>
 80040dc:	4c25      	ldr	r4, [pc, #148]	; (8004174 <__pow5mult+0xa8>)
 80040de:	3a01      	subs	r2, #1
 80040e0:	2300      	movs	r3, #0
 80040e2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80040e6:	f7ff fe55 	bl	8003d94 <__multadd>
 80040ea:	4607      	mov	r7, r0
 80040ec:	10ad      	asrs	r5, r5, #2
 80040ee:	d03d      	beq.n	800416c <__pow5mult+0xa0>
 80040f0:	69f4      	ldr	r4, [r6, #28]
 80040f2:	b97c      	cbnz	r4, 8004114 <__pow5mult+0x48>
 80040f4:	2010      	movs	r0, #16
 80040f6:	f7ff fd37 	bl	8003b68 <malloc>
 80040fa:	4602      	mov	r2, r0
 80040fc:	61f0      	str	r0, [r6, #28]
 80040fe:	b928      	cbnz	r0, 800410c <__pow5mult+0x40>
 8004100:	f240 11b3 	movw	r1, #435	; 0x1b3
 8004104:	4b1c      	ldr	r3, [pc, #112]	; (8004178 <__pow5mult+0xac>)
 8004106:	481d      	ldr	r0, [pc, #116]	; (800417c <__pow5mult+0xb0>)
 8004108:	f001 fb6e 	bl	80057e8 <__assert_func>
 800410c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004110:	6004      	str	r4, [r0, #0]
 8004112:	60c4      	str	r4, [r0, #12]
 8004114:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8004118:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800411c:	b94c      	cbnz	r4, 8004132 <__pow5mult+0x66>
 800411e:	f240 2171 	movw	r1, #625	; 0x271
 8004122:	4630      	mov	r0, r6
 8004124:	f7ff ff14 	bl	8003f50 <__i2b>
 8004128:	2300      	movs	r3, #0
 800412a:	4604      	mov	r4, r0
 800412c:	f8c8 0008 	str.w	r0, [r8, #8]
 8004130:	6003      	str	r3, [r0, #0]
 8004132:	f04f 0900 	mov.w	r9, #0
 8004136:	07eb      	lsls	r3, r5, #31
 8004138:	d50a      	bpl.n	8004150 <__pow5mult+0x84>
 800413a:	4639      	mov	r1, r7
 800413c:	4622      	mov	r2, r4
 800413e:	4630      	mov	r0, r6
 8004140:	f7ff ff1c 	bl	8003f7c <__multiply>
 8004144:	4680      	mov	r8, r0
 8004146:	4639      	mov	r1, r7
 8004148:	4630      	mov	r0, r6
 800414a:	f7ff fe01 	bl	8003d50 <_Bfree>
 800414e:	4647      	mov	r7, r8
 8004150:	106d      	asrs	r5, r5, #1
 8004152:	d00b      	beq.n	800416c <__pow5mult+0xa0>
 8004154:	6820      	ldr	r0, [r4, #0]
 8004156:	b938      	cbnz	r0, 8004168 <__pow5mult+0x9c>
 8004158:	4622      	mov	r2, r4
 800415a:	4621      	mov	r1, r4
 800415c:	4630      	mov	r0, r6
 800415e:	f7ff ff0d 	bl	8003f7c <__multiply>
 8004162:	6020      	str	r0, [r4, #0]
 8004164:	f8c0 9000 	str.w	r9, [r0]
 8004168:	4604      	mov	r4, r0
 800416a:	e7e4      	b.n	8004136 <__pow5mult+0x6a>
 800416c:	4638      	mov	r0, r7
 800416e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004172:	bf00      	nop
 8004174:	08006770 	.word	0x08006770
 8004178:	080065a0 	.word	0x080065a0
 800417c:	08006620 	.word	0x08006620

08004180 <__lshift>:
 8004180:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004184:	460c      	mov	r4, r1
 8004186:	4607      	mov	r7, r0
 8004188:	4691      	mov	r9, r2
 800418a:	6923      	ldr	r3, [r4, #16]
 800418c:	6849      	ldr	r1, [r1, #4]
 800418e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8004192:	68a3      	ldr	r3, [r4, #8]
 8004194:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004198:	f108 0601 	add.w	r6, r8, #1
 800419c:	42b3      	cmp	r3, r6
 800419e:	db0b      	blt.n	80041b8 <__lshift+0x38>
 80041a0:	4638      	mov	r0, r7
 80041a2:	f7ff fd95 	bl	8003cd0 <_Balloc>
 80041a6:	4605      	mov	r5, r0
 80041a8:	b948      	cbnz	r0, 80041be <__lshift+0x3e>
 80041aa:	4602      	mov	r2, r0
 80041ac:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 80041b0:	4b27      	ldr	r3, [pc, #156]	; (8004250 <__lshift+0xd0>)
 80041b2:	4828      	ldr	r0, [pc, #160]	; (8004254 <__lshift+0xd4>)
 80041b4:	f001 fb18 	bl	80057e8 <__assert_func>
 80041b8:	3101      	adds	r1, #1
 80041ba:	005b      	lsls	r3, r3, #1
 80041bc:	e7ee      	b.n	800419c <__lshift+0x1c>
 80041be:	2300      	movs	r3, #0
 80041c0:	f100 0114 	add.w	r1, r0, #20
 80041c4:	f100 0210 	add.w	r2, r0, #16
 80041c8:	4618      	mov	r0, r3
 80041ca:	4553      	cmp	r3, sl
 80041cc:	db33      	blt.n	8004236 <__lshift+0xb6>
 80041ce:	6920      	ldr	r0, [r4, #16]
 80041d0:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80041d4:	f104 0314 	add.w	r3, r4, #20
 80041d8:	f019 091f 	ands.w	r9, r9, #31
 80041dc:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80041e0:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80041e4:	d02b      	beq.n	800423e <__lshift+0xbe>
 80041e6:	468a      	mov	sl, r1
 80041e8:	2200      	movs	r2, #0
 80041ea:	f1c9 0e20 	rsb	lr, r9, #32
 80041ee:	6818      	ldr	r0, [r3, #0]
 80041f0:	fa00 f009 	lsl.w	r0, r0, r9
 80041f4:	4310      	orrs	r0, r2
 80041f6:	f84a 0b04 	str.w	r0, [sl], #4
 80041fa:	f853 2b04 	ldr.w	r2, [r3], #4
 80041fe:	459c      	cmp	ip, r3
 8004200:	fa22 f20e 	lsr.w	r2, r2, lr
 8004204:	d8f3      	bhi.n	80041ee <__lshift+0x6e>
 8004206:	ebac 0304 	sub.w	r3, ip, r4
 800420a:	3b15      	subs	r3, #21
 800420c:	f023 0303 	bic.w	r3, r3, #3
 8004210:	3304      	adds	r3, #4
 8004212:	f104 0015 	add.w	r0, r4, #21
 8004216:	4584      	cmp	ip, r0
 8004218:	bf38      	it	cc
 800421a:	2304      	movcc	r3, #4
 800421c:	50ca      	str	r2, [r1, r3]
 800421e:	b10a      	cbz	r2, 8004224 <__lshift+0xa4>
 8004220:	f108 0602 	add.w	r6, r8, #2
 8004224:	3e01      	subs	r6, #1
 8004226:	4638      	mov	r0, r7
 8004228:	4621      	mov	r1, r4
 800422a:	612e      	str	r6, [r5, #16]
 800422c:	f7ff fd90 	bl	8003d50 <_Bfree>
 8004230:	4628      	mov	r0, r5
 8004232:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004236:	f842 0f04 	str.w	r0, [r2, #4]!
 800423a:	3301      	adds	r3, #1
 800423c:	e7c5      	b.n	80041ca <__lshift+0x4a>
 800423e:	3904      	subs	r1, #4
 8004240:	f853 2b04 	ldr.w	r2, [r3], #4
 8004244:	459c      	cmp	ip, r3
 8004246:	f841 2f04 	str.w	r2, [r1, #4]!
 800424a:	d8f9      	bhi.n	8004240 <__lshift+0xc0>
 800424c:	e7ea      	b.n	8004224 <__lshift+0xa4>
 800424e:	bf00      	nop
 8004250:	0800660f 	.word	0x0800660f
 8004254:	08006620 	.word	0x08006620

08004258 <__mcmp>:
 8004258:	4603      	mov	r3, r0
 800425a:	690a      	ldr	r2, [r1, #16]
 800425c:	6900      	ldr	r0, [r0, #16]
 800425e:	b530      	push	{r4, r5, lr}
 8004260:	1a80      	subs	r0, r0, r2
 8004262:	d10d      	bne.n	8004280 <__mcmp+0x28>
 8004264:	3314      	adds	r3, #20
 8004266:	3114      	adds	r1, #20
 8004268:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800426c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8004270:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004274:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004278:	4295      	cmp	r5, r2
 800427a:	d002      	beq.n	8004282 <__mcmp+0x2a>
 800427c:	d304      	bcc.n	8004288 <__mcmp+0x30>
 800427e:	2001      	movs	r0, #1
 8004280:	bd30      	pop	{r4, r5, pc}
 8004282:	42a3      	cmp	r3, r4
 8004284:	d3f4      	bcc.n	8004270 <__mcmp+0x18>
 8004286:	e7fb      	b.n	8004280 <__mcmp+0x28>
 8004288:	f04f 30ff 	mov.w	r0, #4294967295
 800428c:	e7f8      	b.n	8004280 <__mcmp+0x28>
	...

08004290 <__mdiff>:
 8004290:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004294:	460d      	mov	r5, r1
 8004296:	4607      	mov	r7, r0
 8004298:	4611      	mov	r1, r2
 800429a:	4628      	mov	r0, r5
 800429c:	4614      	mov	r4, r2
 800429e:	f7ff ffdb 	bl	8004258 <__mcmp>
 80042a2:	1e06      	subs	r6, r0, #0
 80042a4:	d111      	bne.n	80042ca <__mdiff+0x3a>
 80042a6:	4631      	mov	r1, r6
 80042a8:	4638      	mov	r0, r7
 80042aa:	f7ff fd11 	bl	8003cd0 <_Balloc>
 80042ae:	4602      	mov	r2, r0
 80042b0:	b928      	cbnz	r0, 80042be <__mdiff+0x2e>
 80042b2:	f240 2137 	movw	r1, #567	; 0x237
 80042b6:	4b3a      	ldr	r3, [pc, #232]	; (80043a0 <__mdiff+0x110>)
 80042b8:	483a      	ldr	r0, [pc, #232]	; (80043a4 <__mdiff+0x114>)
 80042ba:	f001 fa95 	bl	80057e8 <__assert_func>
 80042be:	2301      	movs	r3, #1
 80042c0:	e9c0 3604 	strd	r3, r6, [r0, #16]
 80042c4:	4610      	mov	r0, r2
 80042c6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80042ca:	bfa4      	itt	ge
 80042cc:	4623      	movge	r3, r4
 80042ce:	462c      	movge	r4, r5
 80042d0:	4638      	mov	r0, r7
 80042d2:	6861      	ldr	r1, [r4, #4]
 80042d4:	bfa6      	itte	ge
 80042d6:	461d      	movge	r5, r3
 80042d8:	2600      	movge	r6, #0
 80042da:	2601      	movlt	r6, #1
 80042dc:	f7ff fcf8 	bl	8003cd0 <_Balloc>
 80042e0:	4602      	mov	r2, r0
 80042e2:	b918      	cbnz	r0, 80042ec <__mdiff+0x5c>
 80042e4:	f240 2145 	movw	r1, #581	; 0x245
 80042e8:	4b2d      	ldr	r3, [pc, #180]	; (80043a0 <__mdiff+0x110>)
 80042ea:	e7e5      	b.n	80042b8 <__mdiff+0x28>
 80042ec:	f102 0814 	add.w	r8, r2, #20
 80042f0:	46c2      	mov	sl, r8
 80042f2:	f04f 0c00 	mov.w	ip, #0
 80042f6:	6927      	ldr	r7, [r4, #16]
 80042f8:	60c6      	str	r6, [r0, #12]
 80042fa:	692e      	ldr	r6, [r5, #16]
 80042fc:	f104 0014 	add.w	r0, r4, #20
 8004300:	f105 0914 	add.w	r9, r5, #20
 8004304:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 8004308:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800430c:	3410      	adds	r4, #16
 800430e:	f854 bf04 	ldr.w	fp, [r4, #4]!
 8004312:	f859 3b04 	ldr.w	r3, [r9], #4
 8004316:	fa1f f18b 	uxth.w	r1, fp
 800431a:	4461      	add	r1, ip
 800431c:	fa1f fc83 	uxth.w	ip, r3
 8004320:	0c1b      	lsrs	r3, r3, #16
 8004322:	eba1 010c 	sub.w	r1, r1, ip
 8004326:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800432a:	eb03 4321 	add.w	r3, r3, r1, asr #16
 800432e:	b289      	uxth	r1, r1
 8004330:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8004334:	454e      	cmp	r6, r9
 8004336:	ea4f 4c23 	mov.w	ip, r3, asr #16
 800433a:	f84a 1b04 	str.w	r1, [sl], #4
 800433e:	d8e6      	bhi.n	800430e <__mdiff+0x7e>
 8004340:	1b73      	subs	r3, r6, r5
 8004342:	3b15      	subs	r3, #21
 8004344:	f023 0303 	bic.w	r3, r3, #3
 8004348:	3515      	adds	r5, #21
 800434a:	3304      	adds	r3, #4
 800434c:	42ae      	cmp	r6, r5
 800434e:	bf38      	it	cc
 8004350:	2304      	movcc	r3, #4
 8004352:	4418      	add	r0, r3
 8004354:	4443      	add	r3, r8
 8004356:	461e      	mov	r6, r3
 8004358:	4605      	mov	r5, r0
 800435a:	4575      	cmp	r5, lr
 800435c:	d30e      	bcc.n	800437c <__mdiff+0xec>
 800435e:	f10e 0103 	add.w	r1, lr, #3
 8004362:	1a09      	subs	r1, r1, r0
 8004364:	f021 0103 	bic.w	r1, r1, #3
 8004368:	3803      	subs	r0, #3
 800436a:	4586      	cmp	lr, r0
 800436c:	bf38      	it	cc
 800436e:	2100      	movcc	r1, #0
 8004370:	440b      	add	r3, r1
 8004372:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004376:	b189      	cbz	r1, 800439c <__mdiff+0x10c>
 8004378:	6117      	str	r7, [r2, #16]
 800437a:	e7a3      	b.n	80042c4 <__mdiff+0x34>
 800437c:	f855 8b04 	ldr.w	r8, [r5], #4
 8004380:	fa1f f188 	uxth.w	r1, r8
 8004384:	4461      	add	r1, ip
 8004386:	140c      	asrs	r4, r1, #16
 8004388:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800438c:	b289      	uxth	r1, r1
 800438e:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8004392:	ea4f 4c24 	mov.w	ip, r4, asr #16
 8004396:	f846 1b04 	str.w	r1, [r6], #4
 800439a:	e7de      	b.n	800435a <__mdiff+0xca>
 800439c:	3f01      	subs	r7, #1
 800439e:	e7e8      	b.n	8004372 <__mdiff+0xe2>
 80043a0:	0800660f 	.word	0x0800660f
 80043a4:	08006620 	.word	0x08006620

080043a8 <__ulp>:
 80043a8:	4b0e      	ldr	r3, [pc, #56]	; (80043e4 <__ulp+0x3c>)
 80043aa:	400b      	ands	r3, r1
 80043ac:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 80043b0:	2b00      	cmp	r3, #0
 80043b2:	dc08      	bgt.n	80043c6 <__ulp+0x1e>
 80043b4:	425b      	negs	r3, r3
 80043b6:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 80043ba:	ea4f 5223 	mov.w	r2, r3, asr #20
 80043be:	da04      	bge.n	80043ca <__ulp+0x22>
 80043c0:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 80043c4:	4113      	asrs	r3, r2
 80043c6:	2200      	movs	r2, #0
 80043c8:	e008      	b.n	80043dc <__ulp+0x34>
 80043ca:	f1a2 0314 	sub.w	r3, r2, #20
 80043ce:	2b1e      	cmp	r3, #30
 80043d0:	bfd6      	itet	le
 80043d2:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 80043d6:	2201      	movgt	r2, #1
 80043d8:	40da      	lsrle	r2, r3
 80043da:	2300      	movs	r3, #0
 80043dc:	4619      	mov	r1, r3
 80043de:	4610      	mov	r0, r2
 80043e0:	4770      	bx	lr
 80043e2:	bf00      	nop
 80043e4:	7ff00000 	.word	0x7ff00000

080043e8 <__b2d>:
 80043e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043ea:	6905      	ldr	r5, [r0, #16]
 80043ec:	f100 0714 	add.w	r7, r0, #20
 80043f0:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 80043f4:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80043f8:	1f2e      	subs	r6, r5, #4
 80043fa:	4620      	mov	r0, r4
 80043fc:	f7ff fd5a 	bl	8003eb4 <__hi0bits>
 8004400:	f1c0 0220 	rsb	r2, r0, #32
 8004404:	280a      	cmp	r0, #10
 8004406:	4603      	mov	r3, r0
 8004408:	f8df c068 	ldr.w	ip, [pc, #104]	; 8004474 <__b2d+0x8c>
 800440c:	600a      	str	r2, [r1, #0]
 800440e:	dc12      	bgt.n	8004436 <__b2d+0x4e>
 8004410:	f1c0 0e0b 	rsb	lr, r0, #11
 8004414:	fa24 f20e 	lsr.w	r2, r4, lr
 8004418:	42b7      	cmp	r7, r6
 800441a:	ea42 010c 	orr.w	r1, r2, ip
 800441e:	bf2c      	ite	cs
 8004420:	2200      	movcs	r2, #0
 8004422:	f855 2c08 	ldrcc.w	r2, [r5, #-8]
 8004426:	3315      	adds	r3, #21
 8004428:	fa04 f303 	lsl.w	r3, r4, r3
 800442c:	fa22 f20e 	lsr.w	r2, r2, lr
 8004430:	431a      	orrs	r2, r3
 8004432:	4610      	mov	r0, r2
 8004434:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004436:	42b7      	cmp	r7, r6
 8004438:	bf2e      	itee	cs
 800443a:	2200      	movcs	r2, #0
 800443c:	f855 2c08 	ldrcc.w	r2, [r5, #-8]
 8004440:	f1a5 0608 	subcc.w	r6, r5, #8
 8004444:	3b0b      	subs	r3, #11
 8004446:	d012      	beq.n	800446e <__b2d+0x86>
 8004448:	f1c3 0520 	rsb	r5, r3, #32
 800444c:	fa22 f105 	lsr.w	r1, r2, r5
 8004450:	409c      	lsls	r4, r3
 8004452:	430c      	orrs	r4, r1
 8004454:	42be      	cmp	r6, r7
 8004456:	f044 517f 	orr.w	r1, r4, #1069547520	; 0x3fc00000
 800445a:	bf94      	ite	ls
 800445c:	2400      	movls	r4, #0
 800445e:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8004462:	409a      	lsls	r2, r3
 8004464:	40ec      	lsrs	r4, r5
 8004466:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 800446a:	4322      	orrs	r2, r4
 800446c:	e7e1      	b.n	8004432 <__b2d+0x4a>
 800446e:	ea44 010c 	orr.w	r1, r4, ip
 8004472:	e7de      	b.n	8004432 <__b2d+0x4a>
 8004474:	3ff00000 	.word	0x3ff00000

08004478 <__d2b>:
 8004478:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800447a:	2101      	movs	r1, #1
 800447c:	4617      	mov	r7, r2
 800447e:	461c      	mov	r4, r3
 8004480:	9e08      	ldr	r6, [sp, #32]
 8004482:	f7ff fc25 	bl	8003cd0 <_Balloc>
 8004486:	4605      	mov	r5, r0
 8004488:	b930      	cbnz	r0, 8004498 <__d2b+0x20>
 800448a:	4602      	mov	r2, r0
 800448c:	f240 310f 	movw	r1, #783	; 0x30f
 8004490:	4b22      	ldr	r3, [pc, #136]	; (800451c <__d2b+0xa4>)
 8004492:	4823      	ldr	r0, [pc, #140]	; (8004520 <__d2b+0xa8>)
 8004494:	f001 f9a8 	bl	80057e8 <__assert_func>
 8004498:	f3c4 0313 	ubfx	r3, r4, #0, #20
 800449c:	f3c4 540a 	ubfx	r4, r4, #20, #11
 80044a0:	bb24      	cbnz	r4, 80044ec <__d2b+0x74>
 80044a2:	2f00      	cmp	r7, #0
 80044a4:	9301      	str	r3, [sp, #4]
 80044a6:	d026      	beq.n	80044f6 <__d2b+0x7e>
 80044a8:	4668      	mov	r0, sp
 80044aa:	9700      	str	r7, [sp, #0]
 80044ac:	f7ff fd22 	bl	8003ef4 <__lo0bits>
 80044b0:	e9dd 1200 	ldrd	r1, r2, [sp]
 80044b4:	b1e8      	cbz	r0, 80044f2 <__d2b+0x7a>
 80044b6:	f1c0 0320 	rsb	r3, r0, #32
 80044ba:	fa02 f303 	lsl.w	r3, r2, r3
 80044be:	430b      	orrs	r3, r1
 80044c0:	40c2      	lsrs	r2, r0
 80044c2:	616b      	str	r3, [r5, #20]
 80044c4:	9201      	str	r2, [sp, #4]
 80044c6:	9b01      	ldr	r3, [sp, #4]
 80044c8:	2b00      	cmp	r3, #0
 80044ca:	bf14      	ite	ne
 80044cc:	2102      	movne	r1, #2
 80044ce:	2101      	moveq	r1, #1
 80044d0:	61ab      	str	r3, [r5, #24]
 80044d2:	6129      	str	r1, [r5, #16]
 80044d4:	b1bc      	cbz	r4, 8004506 <__d2b+0x8e>
 80044d6:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 80044da:	4404      	add	r4, r0
 80044dc:	6034      	str	r4, [r6, #0]
 80044de:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80044e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80044e4:	6018      	str	r0, [r3, #0]
 80044e6:	4628      	mov	r0, r5
 80044e8:	b003      	add	sp, #12
 80044ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80044ec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80044f0:	e7d7      	b.n	80044a2 <__d2b+0x2a>
 80044f2:	6169      	str	r1, [r5, #20]
 80044f4:	e7e7      	b.n	80044c6 <__d2b+0x4e>
 80044f6:	a801      	add	r0, sp, #4
 80044f8:	f7ff fcfc 	bl	8003ef4 <__lo0bits>
 80044fc:	9b01      	ldr	r3, [sp, #4]
 80044fe:	2101      	movs	r1, #1
 8004500:	616b      	str	r3, [r5, #20]
 8004502:	3020      	adds	r0, #32
 8004504:	e7e5      	b.n	80044d2 <__d2b+0x5a>
 8004506:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800450a:	eb05 0381 	add.w	r3, r5, r1, lsl #2
 800450e:	6030      	str	r0, [r6, #0]
 8004510:	6918      	ldr	r0, [r3, #16]
 8004512:	f7ff fccf 	bl	8003eb4 <__hi0bits>
 8004516:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 800451a:	e7e2      	b.n	80044e2 <__d2b+0x6a>
 800451c:	0800660f 	.word	0x0800660f
 8004520:	08006620 	.word	0x08006620

08004524 <__ratio>:
 8004524:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004528:	4688      	mov	r8, r1
 800452a:	4669      	mov	r1, sp
 800452c:	4681      	mov	r9, r0
 800452e:	f7ff ff5b 	bl	80043e8 <__b2d>
 8004532:	460f      	mov	r7, r1
 8004534:	4604      	mov	r4, r0
 8004536:	460d      	mov	r5, r1
 8004538:	4640      	mov	r0, r8
 800453a:	a901      	add	r1, sp, #4
 800453c:	f7ff ff54 	bl	80043e8 <__b2d>
 8004540:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8004544:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8004548:	468b      	mov	fp, r1
 800454a:	eba3 0c02 	sub.w	ip, r3, r2
 800454e:	e9dd 3200 	ldrd	r3, r2, [sp]
 8004552:	1a9b      	subs	r3, r3, r2
 8004554:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8004558:	2b00      	cmp	r3, #0
 800455a:	bfd5      	itete	le
 800455c:	460a      	movle	r2, r1
 800455e:	462a      	movgt	r2, r5
 8004560:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8004564:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8004568:	bfd8      	it	le
 800456a:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800456e:	465b      	mov	r3, fp
 8004570:	4602      	mov	r2, r0
 8004572:	4639      	mov	r1, r7
 8004574:	4620      	mov	r0, r4
 8004576:	f7fc f8d9 	bl	800072c <__aeabi_ddiv>
 800457a:	b003      	add	sp, #12
 800457c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004580 <__copybits>:
 8004580:	3901      	subs	r1, #1
 8004582:	b570      	push	{r4, r5, r6, lr}
 8004584:	1149      	asrs	r1, r1, #5
 8004586:	6914      	ldr	r4, [r2, #16]
 8004588:	3101      	adds	r1, #1
 800458a:	f102 0314 	add.w	r3, r2, #20
 800458e:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8004592:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8004596:	1f05      	subs	r5, r0, #4
 8004598:	42a3      	cmp	r3, r4
 800459a:	d30c      	bcc.n	80045b6 <__copybits+0x36>
 800459c:	1aa3      	subs	r3, r4, r2
 800459e:	3b11      	subs	r3, #17
 80045a0:	f023 0303 	bic.w	r3, r3, #3
 80045a4:	3211      	adds	r2, #17
 80045a6:	42a2      	cmp	r2, r4
 80045a8:	bf88      	it	hi
 80045aa:	2300      	movhi	r3, #0
 80045ac:	4418      	add	r0, r3
 80045ae:	2300      	movs	r3, #0
 80045b0:	4288      	cmp	r0, r1
 80045b2:	d305      	bcc.n	80045c0 <__copybits+0x40>
 80045b4:	bd70      	pop	{r4, r5, r6, pc}
 80045b6:	f853 6b04 	ldr.w	r6, [r3], #4
 80045ba:	f845 6f04 	str.w	r6, [r5, #4]!
 80045be:	e7eb      	b.n	8004598 <__copybits+0x18>
 80045c0:	f840 3b04 	str.w	r3, [r0], #4
 80045c4:	e7f4      	b.n	80045b0 <__copybits+0x30>

080045c6 <__any_on>:
 80045c6:	f100 0214 	add.w	r2, r0, #20
 80045ca:	6900      	ldr	r0, [r0, #16]
 80045cc:	114b      	asrs	r3, r1, #5
 80045ce:	4298      	cmp	r0, r3
 80045d0:	b510      	push	{r4, lr}
 80045d2:	db11      	blt.n	80045f8 <__any_on+0x32>
 80045d4:	dd0a      	ble.n	80045ec <__any_on+0x26>
 80045d6:	f011 011f 	ands.w	r1, r1, #31
 80045da:	d007      	beq.n	80045ec <__any_on+0x26>
 80045dc:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80045e0:	fa24 f001 	lsr.w	r0, r4, r1
 80045e4:	fa00 f101 	lsl.w	r1, r0, r1
 80045e8:	428c      	cmp	r4, r1
 80045ea:	d10b      	bne.n	8004604 <__any_on+0x3e>
 80045ec:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80045f0:	4293      	cmp	r3, r2
 80045f2:	d803      	bhi.n	80045fc <__any_on+0x36>
 80045f4:	2000      	movs	r0, #0
 80045f6:	bd10      	pop	{r4, pc}
 80045f8:	4603      	mov	r3, r0
 80045fa:	e7f7      	b.n	80045ec <__any_on+0x26>
 80045fc:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8004600:	2900      	cmp	r1, #0
 8004602:	d0f5      	beq.n	80045f0 <__any_on+0x2a>
 8004604:	2001      	movs	r0, #1
 8004606:	e7f6      	b.n	80045f6 <__any_on+0x30>

08004608 <sulp>:
 8004608:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800460c:	460f      	mov	r7, r1
 800460e:	4690      	mov	r8, r2
 8004610:	f7ff feca 	bl	80043a8 <__ulp>
 8004614:	4604      	mov	r4, r0
 8004616:	460d      	mov	r5, r1
 8004618:	f1b8 0f00 	cmp.w	r8, #0
 800461c:	d011      	beq.n	8004642 <sulp+0x3a>
 800461e:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8004622:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8004626:	2b00      	cmp	r3, #0
 8004628:	dd0b      	ble.n	8004642 <sulp+0x3a>
 800462a:	2400      	movs	r4, #0
 800462c:	051b      	lsls	r3, r3, #20
 800462e:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8004632:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8004636:	4622      	mov	r2, r4
 8004638:	462b      	mov	r3, r5
 800463a:	f7fb ff4d 	bl	80004d8 <__aeabi_dmul>
 800463e:	4604      	mov	r4, r0
 8004640:	460d      	mov	r5, r1
 8004642:	4620      	mov	r0, r4
 8004644:	4629      	mov	r1, r5
 8004646:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800464a:	0000      	movs	r0, r0
 800464c:	0000      	movs	r0, r0
	...

08004650 <_strtod_l>:
 8004650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004654:	b09f      	sub	sp, #124	; 0x7c
 8004656:	9217      	str	r2, [sp, #92]	; 0x5c
 8004658:	2200      	movs	r2, #0
 800465a:	4604      	mov	r4, r0
 800465c:	921a      	str	r2, [sp, #104]	; 0x68
 800465e:	460d      	mov	r5, r1
 8004660:	f04f 0800 	mov.w	r8, #0
 8004664:	f04f 0900 	mov.w	r9, #0
 8004668:	460a      	mov	r2, r1
 800466a:	9219      	str	r2, [sp, #100]	; 0x64
 800466c:	7811      	ldrb	r1, [r2, #0]
 800466e:	292b      	cmp	r1, #43	; 0x2b
 8004670:	d04a      	beq.n	8004708 <_strtod_l+0xb8>
 8004672:	d838      	bhi.n	80046e6 <_strtod_l+0x96>
 8004674:	290d      	cmp	r1, #13
 8004676:	d832      	bhi.n	80046de <_strtod_l+0x8e>
 8004678:	2908      	cmp	r1, #8
 800467a:	d832      	bhi.n	80046e2 <_strtod_l+0x92>
 800467c:	2900      	cmp	r1, #0
 800467e:	d03b      	beq.n	80046f8 <_strtod_l+0xa8>
 8004680:	2200      	movs	r2, #0
 8004682:	920e      	str	r2, [sp, #56]	; 0x38
 8004684:	9e19      	ldr	r6, [sp, #100]	; 0x64
 8004686:	7832      	ldrb	r2, [r6, #0]
 8004688:	2a30      	cmp	r2, #48	; 0x30
 800468a:	f040 80b2 	bne.w	80047f2 <_strtod_l+0x1a2>
 800468e:	7872      	ldrb	r2, [r6, #1]
 8004690:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 8004694:	2a58      	cmp	r2, #88	; 0x58
 8004696:	d16e      	bne.n	8004776 <_strtod_l+0x126>
 8004698:	9302      	str	r3, [sp, #8]
 800469a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800469c:	4620      	mov	r0, r4
 800469e:	9301      	str	r3, [sp, #4]
 80046a0:	ab1a      	add	r3, sp, #104	; 0x68
 80046a2:	9300      	str	r3, [sp, #0]
 80046a4:	4a8c      	ldr	r2, [pc, #560]	; (80048d8 <_strtod_l+0x288>)
 80046a6:	ab1b      	add	r3, sp, #108	; 0x6c
 80046a8:	a919      	add	r1, sp, #100	; 0x64
 80046aa:	f001 f937 	bl	800591c <__gethex>
 80046ae:	f010 070f 	ands.w	r7, r0, #15
 80046b2:	4605      	mov	r5, r0
 80046b4:	d005      	beq.n	80046c2 <_strtod_l+0x72>
 80046b6:	2f06      	cmp	r7, #6
 80046b8:	d128      	bne.n	800470c <_strtod_l+0xbc>
 80046ba:	2300      	movs	r3, #0
 80046bc:	3601      	adds	r6, #1
 80046be:	9619      	str	r6, [sp, #100]	; 0x64
 80046c0:	930e      	str	r3, [sp, #56]	; 0x38
 80046c2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80046c4:	2b00      	cmp	r3, #0
 80046c6:	f040 85a0 	bne.w	800520a <_strtod_l+0xbba>
 80046ca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80046cc:	b1cb      	cbz	r3, 8004702 <_strtod_l+0xb2>
 80046ce:	4642      	mov	r2, r8
 80046d0:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 80046d4:	4610      	mov	r0, r2
 80046d6:	4619      	mov	r1, r3
 80046d8:	b01f      	add	sp, #124	; 0x7c
 80046da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80046de:	2920      	cmp	r1, #32
 80046e0:	d1ce      	bne.n	8004680 <_strtod_l+0x30>
 80046e2:	3201      	adds	r2, #1
 80046e4:	e7c1      	b.n	800466a <_strtod_l+0x1a>
 80046e6:	292d      	cmp	r1, #45	; 0x2d
 80046e8:	d1ca      	bne.n	8004680 <_strtod_l+0x30>
 80046ea:	2101      	movs	r1, #1
 80046ec:	910e      	str	r1, [sp, #56]	; 0x38
 80046ee:	1c51      	adds	r1, r2, #1
 80046f0:	9119      	str	r1, [sp, #100]	; 0x64
 80046f2:	7852      	ldrb	r2, [r2, #1]
 80046f4:	2a00      	cmp	r2, #0
 80046f6:	d1c5      	bne.n	8004684 <_strtod_l+0x34>
 80046f8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80046fa:	9519      	str	r5, [sp, #100]	; 0x64
 80046fc:	2b00      	cmp	r3, #0
 80046fe:	f040 8582 	bne.w	8005206 <_strtod_l+0xbb6>
 8004702:	4642      	mov	r2, r8
 8004704:	464b      	mov	r3, r9
 8004706:	e7e5      	b.n	80046d4 <_strtod_l+0x84>
 8004708:	2100      	movs	r1, #0
 800470a:	e7ef      	b.n	80046ec <_strtod_l+0x9c>
 800470c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800470e:	b13a      	cbz	r2, 8004720 <_strtod_l+0xd0>
 8004710:	2135      	movs	r1, #53	; 0x35
 8004712:	a81c      	add	r0, sp, #112	; 0x70
 8004714:	f7ff ff34 	bl	8004580 <__copybits>
 8004718:	4620      	mov	r0, r4
 800471a:	991a      	ldr	r1, [sp, #104]	; 0x68
 800471c:	f7ff fb18 	bl	8003d50 <_Bfree>
 8004720:	3f01      	subs	r7, #1
 8004722:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8004724:	2f04      	cmp	r7, #4
 8004726:	d806      	bhi.n	8004736 <_strtod_l+0xe6>
 8004728:	e8df f007 	tbb	[pc, r7]
 800472c:	201d0314 	.word	0x201d0314
 8004730:	14          	.byte	0x14
 8004731:	00          	.byte	0x00
 8004732:	e9dd 891c 	ldrd	r8, r9, [sp, #112]	; 0x70
 8004736:	05e9      	lsls	r1, r5, #23
 8004738:	bf48      	it	mi
 800473a:	f049 4900 	orrmi.w	r9, r9, #2147483648	; 0x80000000
 800473e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8004742:	0d1b      	lsrs	r3, r3, #20
 8004744:	051b      	lsls	r3, r3, #20
 8004746:	2b00      	cmp	r3, #0
 8004748:	d1bb      	bne.n	80046c2 <_strtod_l+0x72>
 800474a:	f7fe fb15 	bl	8002d78 <__errno>
 800474e:	2322      	movs	r3, #34	; 0x22
 8004750:	6003      	str	r3, [r0, #0]
 8004752:	e7b6      	b.n	80046c2 <_strtod_l+0x72>
 8004754:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8004758:	e9dd 831c 	ldrd	r8, r3, [sp, #112]	; 0x70
 800475c:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8004760:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 8004764:	e7e7      	b.n	8004736 <_strtod_l+0xe6>
 8004766:	f8df 9174 	ldr.w	r9, [pc, #372]	; 80048dc <_strtod_l+0x28c>
 800476a:	e7e4      	b.n	8004736 <_strtod_l+0xe6>
 800476c:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 8004770:	f04f 38ff 	mov.w	r8, #4294967295
 8004774:	e7df      	b.n	8004736 <_strtod_l+0xe6>
 8004776:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004778:	1c5a      	adds	r2, r3, #1
 800477a:	9219      	str	r2, [sp, #100]	; 0x64
 800477c:	785b      	ldrb	r3, [r3, #1]
 800477e:	2b30      	cmp	r3, #48	; 0x30
 8004780:	d0f9      	beq.n	8004776 <_strtod_l+0x126>
 8004782:	2b00      	cmp	r3, #0
 8004784:	d09d      	beq.n	80046c2 <_strtod_l+0x72>
 8004786:	2301      	movs	r3, #1
 8004788:	f04f 0a00 	mov.w	sl, #0
 800478c:	220a      	movs	r2, #10
 800478e:	46d3      	mov	fp, sl
 8004790:	9305      	str	r3, [sp, #20]
 8004792:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004794:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
 8004798:	930b      	str	r3, [sp, #44]	; 0x2c
 800479a:	9819      	ldr	r0, [sp, #100]	; 0x64
 800479c:	7806      	ldrb	r6, [r0, #0]
 800479e:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 80047a2:	b2d9      	uxtb	r1, r3
 80047a4:	2909      	cmp	r1, #9
 80047a6:	d926      	bls.n	80047f6 <_strtod_l+0x1a6>
 80047a8:	2201      	movs	r2, #1
 80047aa:	494d      	ldr	r1, [pc, #308]	; (80048e0 <_strtod_l+0x290>)
 80047ac:	f000 ffe6 	bl	800577c <strncmp>
 80047b0:	2800      	cmp	r0, #0
 80047b2:	d030      	beq.n	8004816 <_strtod_l+0x1c6>
 80047b4:	2000      	movs	r0, #0
 80047b6:	4632      	mov	r2, r6
 80047b8:	4603      	mov	r3, r0
 80047ba:	465e      	mov	r6, fp
 80047bc:	9008      	str	r0, [sp, #32]
 80047be:	2a65      	cmp	r2, #101	; 0x65
 80047c0:	d001      	beq.n	80047c6 <_strtod_l+0x176>
 80047c2:	2a45      	cmp	r2, #69	; 0x45
 80047c4:	d113      	bne.n	80047ee <_strtod_l+0x19e>
 80047c6:	b91e      	cbnz	r6, 80047d0 <_strtod_l+0x180>
 80047c8:	9a05      	ldr	r2, [sp, #20]
 80047ca:	4302      	orrs	r2, r0
 80047cc:	d094      	beq.n	80046f8 <_strtod_l+0xa8>
 80047ce:	2600      	movs	r6, #0
 80047d0:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80047d2:	1c6a      	adds	r2, r5, #1
 80047d4:	9219      	str	r2, [sp, #100]	; 0x64
 80047d6:	786a      	ldrb	r2, [r5, #1]
 80047d8:	2a2b      	cmp	r2, #43	; 0x2b
 80047da:	d074      	beq.n	80048c6 <_strtod_l+0x276>
 80047dc:	2a2d      	cmp	r2, #45	; 0x2d
 80047de:	d078      	beq.n	80048d2 <_strtod_l+0x282>
 80047e0:	f04f 0c00 	mov.w	ip, #0
 80047e4:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 80047e8:	2909      	cmp	r1, #9
 80047ea:	d97f      	bls.n	80048ec <_strtod_l+0x29c>
 80047ec:	9519      	str	r5, [sp, #100]	; 0x64
 80047ee:	2700      	movs	r7, #0
 80047f0:	e09e      	b.n	8004930 <_strtod_l+0x2e0>
 80047f2:	2300      	movs	r3, #0
 80047f4:	e7c8      	b.n	8004788 <_strtod_l+0x138>
 80047f6:	f1bb 0f08 	cmp.w	fp, #8
 80047fa:	bfd8      	it	le
 80047fc:	990a      	ldrle	r1, [sp, #40]	; 0x28
 80047fe:	f100 0001 	add.w	r0, r0, #1
 8004802:	bfd6      	itet	le
 8004804:	fb02 3301 	mlale	r3, r2, r1, r3
 8004808:	fb02 3a0a 	mlagt	sl, r2, sl, r3
 800480c:	930a      	strle	r3, [sp, #40]	; 0x28
 800480e:	f10b 0b01 	add.w	fp, fp, #1
 8004812:	9019      	str	r0, [sp, #100]	; 0x64
 8004814:	e7c1      	b.n	800479a <_strtod_l+0x14a>
 8004816:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004818:	1c5a      	adds	r2, r3, #1
 800481a:	9219      	str	r2, [sp, #100]	; 0x64
 800481c:	785a      	ldrb	r2, [r3, #1]
 800481e:	f1bb 0f00 	cmp.w	fp, #0
 8004822:	d037      	beq.n	8004894 <_strtod_l+0x244>
 8004824:	465e      	mov	r6, fp
 8004826:	9008      	str	r0, [sp, #32]
 8004828:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800482c:	2b09      	cmp	r3, #9
 800482e:	d912      	bls.n	8004856 <_strtod_l+0x206>
 8004830:	2301      	movs	r3, #1
 8004832:	e7c4      	b.n	80047be <_strtod_l+0x16e>
 8004834:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004836:	3001      	adds	r0, #1
 8004838:	1c5a      	adds	r2, r3, #1
 800483a:	9219      	str	r2, [sp, #100]	; 0x64
 800483c:	785a      	ldrb	r2, [r3, #1]
 800483e:	2a30      	cmp	r2, #48	; 0x30
 8004840:	d0f8      	beq.n	8004834 <_strtod_l+0x1e4>
 8004842:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 8004846:	2b08      	cmp	r3, #8
 8004848:	f200 84e4 	bhi.w	8005214 <_strtod_l+0xbc4>
 800484c:	9008      	str	r0, [sp, #32]
 800484e:	2000      	movs	r0, #0
 8004850:	4606      	mov	r6, r0
 8004852:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004854:	930b      	str	r3, [sp, #44]	; 0x2c
 8004856:	3a30      	subs	r2, #48	; 0x30
 8004858:	f100 0301 	add.w	r3, r0, #1
 800485c:	d014      	beq.n	8004888 <_strtod_l+0x238>
 800485e:	9908      	ldr	r1, [sp, #32]
 8004860:	eb00 0c06 	add.w	ip, r0, r6
 8004864:	4419      	add	r1, r3
 8004866:	9108      	str	r1, [sp, #32]
 8004868:	4633      	mov	r3, r6
 800486a:	210a      	movs	r1, #10
 800486c:	4563      	cmp	r3, ip
 800486e:	d113      	bne.n	8004898 <_strtod_l+0x248>
 8004870:	1833      	adds	r3, r6, r0
 8004872:	2b08      	cmp	r3, #8
 8004874:	f106 0601 	add.w	r6, r6, #1
 8004878:	4406      	add	r6, r0
 800487a:	dc1a      	bgt.n	80048b2 <_strtod_l+0x262>
 800487c:	230a      	movs	r3, #10
 800487e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004880:	fb03 2301 	mla	r3, r3, r1, r2
 8004884:	930a      	str	r3, [sp, #40]	; 0x28
 8004886:	2300      	movs	r3, #0
 8004888:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800488a:	4618      	mov	r0, r3
 800488c:	1c51      	adds	r1, r2, #1
 800488e:	9119      	str	r1, [sp, #100]	; 0x64
 8004890:	7852      	ldrb	r2, [r2, #1]
 8004892:	e7c9      	b.n	8004828 <_strtod_l+0x1d8>
 8004894:	4658      	mov	r0, fp
 8004896:	e7d2      	b.n	800483e <_strtod_l+0x1ee>
 8004898:	2b08      	cmp	r3, #8
 800489a:	f103 0301 	add.w	r3, r3, #1
 800489e:	dc03      	bgt.n	80048a8 <_strtod_l+0x258>
 80048a0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80048a2:	434f      	muls	r7, r1
 80048a4:	970a      	str	r7, [sp, #40]	; 0x28
 80048a6:	e7e1      	b.n	800486c <_strtod_l+0x21c>
 80048a8:	2b10      	cmp	r3, #16
 80048aa:	bfd8      	it	le
 80048ac:	fb01 fa0a 	mulle.w	sl, r1, sl
 80048b0:	e7dc      	b.n	800486c <_strtod_l+0x21c>
 80048b2:	2e10      	cmp	r6, #16
 80048b4:	bfdc      	itt	le
 80048b6:	230a      	movle	r3, #10
 80048b8:	fb03 2a0a 	mlale	sl, r3, sl, r2
 80048bc:	e7e3      	b.n	8004886 <_strtod_l+0x236>
 80048be:	2300      	movs	r3, #0
 80048c0:	9308      	str	r3, [sp, #32]
 80048c2:	2301      	movs	r3, #1
 80048c4:	e780      	b.n	80047c8 <_strtod_l+0x178>
 80048c6:	f04f 0c00 	mov.w	ip, #0
 80048ca:	1caa      	adds	r2, r5, #2
 80048cc:	9219      	str	r2, [sp, #100]	; 0x64
 80048ce:	78aa      	ldrb	r2, [r5, #2]
 80048d0:	e788      	b.n	80047e4 <_strtod_l+0x194>
 80048d2:	f04f 0c01 	mov.w	ip, #1
 80048d6:	e7f8      	b.n	80048ca <_strtod_l+0x27a>
 80048d8:	08006780 	.word	0x08006780
 80048dc:	7ff00000 	.word	0x7ff00000
 80048e0:	0800677c 	.word	0x0800677c
 80048e4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80048e6:	1c51      	adds	r1, r2, #1
 80048e8:	9119      	str	r1, [sp, #100]	; 0x64
 80048ea:	7852      	ldrb	r2, [r2, #1]
 80048ec:	2a30      	cmp	r2, #48	; 0x30
 80048ee:	d0f9      	beq.n	80048e4 <_strtod_l+0x294>
 80048f0:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 80048f4:	2908      	cmp	r1, #8
 80048f6:	f63f af7a 	bhi.w	80047ee <_strtod_l+0x19e>
 80048fa:	3a30      	subs	r2, #48	; 0x30
 80048fc:	9209      	str	r2, [sp, #36]	; 0x24
 80048fe:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8004900:	920c      	str	r2, [sp, #48]	; 0x30
 8004902:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8004904:	1c57      	adds	r7, r2, #1
 8004906:	9719      	str	r7, [sp, #100]	; 0x64
 8004908:	7852      	ldrb	r2, [r2, #1]
 800490a:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 800490e:	f1be 0f09 	cmp.w	lr, #9
 8004912:	d938      	bls.n	8004986 <_strtod_l+0x336>
 8004914:	990c      	ldr	r1, [sp, #48]	; 0x30
 8004916:	1a7f      	subs	r7, r7, r1
 8004918:	2f08      	cmp	r7, #8
 800491a:	f644 671f 	movw	r7, #19999	; 0x4e1f
 800491e:	dc03      	bgt.n	8004928 <_strtod_l+0x2d8>
 8004920:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004922:	428f      	cmp	r7, r1
 8004924:	bfa8      	it	ge
 8004926:	460f      	movge	r7, r1
 8004928:	f1bc 0f00 	cmp.w	ip, #0
 800492c:	d000      	beq.n	8004930 <_strtod_l+0x2e0>
 800492e:	427f      	negs	r7, r7
 8004930:	2e00      	cmp	r6, #0
 8004932:	d14f      	bne.n	80049d4 <_strtod_l+0x384>
 8004934:	9905      	ldr	r1, [sp, #20]
 8004936:	4301      	orrs	r1, r0
 8004938:	f47f aec3 	bne.w	80046c2 <_strtod_l+0x72>
 800493c:	2b00      	cmp	r3, #0
 800493e:	f47f aedb 	bne.w	80046f8 <_strtod_l+0xa8>
 8004942:	2a69      	cmp	r2, #105	; 0x69
 8004944:	d029      	beq.n	800499a <_strtod_l+0x34a>
 8004946:	dc26      	bgt.n	8004996 <_strtod_l+0x346>
 8004948:	2a49      	cmp	r2, #73	; 0x49
 800494a:	d026      	beq.n	800499a <_strtod_l+0x34a>
 800494c:	2a4e      	cmp	r2, #78	; 0x4e
 800494e:	f47f aed3 	bne.w	80046f8 <_strtod_l+0xa8>
 8004952:	499a      	ldr	r1, [pc, #616]	; (8004bbc <_strtod_l+0x56c>)
 8004954:	a819      	add	r0, sp, #100	; 0x64
 8004956:	f001 fa23 	bl	8005da0 <__match>
 800495a:	2800      	cmp	r0, #0
 800495c:	f43f aecc 	beq.w	80046f8 <_strtod_l+0xa8>
 8004960:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004962:	781b      	ldrb	r3, [r3, #0]
 8004964:	2b28      	cmp	r3, #40	; 0x28
 8004966:	d12f      	bne.n	80049c8 <_strtod_l+0x378>
 8004968:	4995      	ldr	r1, [pc, #596]	; (8004bc0 <_strtod_l+0x570>)
 800496a:	aa1c      	add	r2, sp, #112	; 0x70
 800496c:	a819      	add	r0, sp, #100	; 0x64
 800496e:	f001 fa2b 	bl	8005dc8 <__hexnan>
 8004972:	2805      	cmp	r0, #5
 8004974:	d128      	bne.n	80049c8 <_strtod_l+0x378>
 8004976:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8004978:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 800497c:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8004980:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 8004984:	e69d      	b.n	80046c2 <_strtod_l+0x72>
 8004986:	210a      	movs	r1, #10
 8004988:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800498a:	fb01 2107 	mla	r1, r1, r7, r2
 800498e:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 8004992:	9209      	str	r2, [sp, #36]	; 0x24
 8004994:	e7b5      	b.n	8004902 <_strtod_l+0x2b2>
 8004996:	2a6e      	cmp	r2, #110	; 0x6e
 8004998:	e7d9      	b.n	800494e <_strtod_l+0x2fe>
 800499a:	498a      	ldr	r1, [pc, #552]	; (8004bc4 <_strtod_l+0x574>)
 800499c:	a819      	add	r0, sp, #100	; 0x64
 800499e:	f001 f9ff 	bl	8005da0 <__match>
 80049a2:	2800      	cmp	r0, #0
 80049a4:	f43f aea8 	beq.w	80046f8 <_strtod_l+0xa8>
 80049a8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80049aa:	4987      	ldr	r1, [pc, #540]	; (8004bc8 <_strtod_l+0x578>)
 80049ac:	3b01      	subs	r3, #1
 80049ae:	a819      	add	r0, sp, #100	; 0x64
 80049b0:	9319      	str	r3, [sp, #100]	; 0x64
 80049b2:	f001 f9f5 	bl	8005da0 <__match>
 80049b6:	b910      	cbnz	r0, 80049be <_strtod_l+0x36e>
 80049b8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80049ba:	3301      	adds	r3, #1
 80049bc:	9319      	str	r3, [sp, #100]	; 0x64
 80049be:	f04f 0800 	mov.w	r8, #0
 80049c2:	f8df 9208 	ldr.w	r9, [pc, #520]	; 8004bcc <_strtod_l+0x57c>
 80049c6:	e67c      	b.n	80046c2 <_strtod_l+0x72>
 80049c8:	4881      	ldr	r0, [pc, #516]	; (8004bd0 <_strtod_l+0x580>)
 80049ca:	f000 ff07 	bl	80057dc <nan>
 80049ce:	4680      	mov	r8, r0
 80049d0:	4689      	mov	r9, r1
 80049d2:	e676      	b.n	80046c2 <_strtod_l+0x72>
 80049d4:	9b08      	ldr	r3, [sp, #32]
 80049d6:	f1bb 0f00 	cmp.w	fp, #0
 80049da:	bf08      	it	eq
 80049dc:	46b3      	moveq	fp, r6
 80049de:	1afb      	subs	r3, r7, r3
 80049e0:	2e10      	cmp	r6, #16
 80049e2:	980a      	ldr	r0, [sp, #40]	; 0x28
 80049e4:	4635      	mov	r5, r6
 80049e6:	9309      	str	r3, [sp, #36]	; 0x24
 80049e8:	bfa8      	it	ge
 80049ea:	2510      	movge	r5, #16
 80049ec:	f7fb fcfa 	bl	80003e4 <__aeabi_ui2d>
 80049f0:	2e09      	cmp	r6, #9
 80049f2:	4680      	mov	r8, r0
 80049f4:	4689      	mov	r9, r1
 80049f6:	dd13      	ble.n	8004a20 <_strtod_l+0x3d0>
 80049f8:	4b76      	ldr	r3, [pc, #472]	; (8004bd4 <_strtod_l+0x584>)
 80049fa:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80049fe:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8004a02:	f7fb fd69 	bl	80004d8 <__aeabi_dmul>
 8004a06:	4680      	mov	r8, r0
 8004a08:	4650      	mov	r0, sl
 8004a0a:	4689      	mov	r9, r1
 8004a0c:	f7fb fcea 	bl	80003e4 <__aeabi_ui2d>
 8004a10:	4602      	mov	r2, r0
 8004a12:	460b      	mov	r3, r1
 8004a14:	4640      	mov	r0, r8
 8004a16:	4649      	mov	r1, r9
 8004a18:	f7fb fba8 	bl	800016c <__adddf3>
 8004a1c:	4680      	mov	r8, r0
 8004a1e:	4689      	mov	r9, r1
 8004a20:	2e0f      	cmp	r6, #15
 8004a22:	dc36      	bgt.n	8004a92 <_strtod_l+0x442>
 8004a24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004a26:	2b00      	cmp	r3, #0
 8004a28:	f43f ae4b 	beq.w	80046c2 <_strtod_l+0x72>
 8004a2c:	dd22      	ble.n	8004a74 <_strtod_l+0x424>
 8004a2e:	2b16      	cmp	r3, #22
 8004a30:	dc09      	bgt.n	8004a46 <_strtod_l+0x3f6>
 8004a32:	4968      	ldr	r1, [pc, #416]	; (8004bd4 <_strtod_l+0x584>)
 8004a34:	4642      	mov	r2, r8
 8004a36:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004a3a:	464b      	mov	r3, r9
 8004a3c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004a40:	f7fb fd4a 	bl	80004d8 <__aeabi_dmul>
 8004a44:	e7c3      	b.n	80049ce <_strtod_l+0x37e>
 8004a46:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004a48:	f1c6 0325 	rsb	r3, r6, #37	; 0x25
 8004a4c:	4293      	cmp	r3, r2
 8004a4e:	db20      	blt.n	8004a92 <_strtod_l+0x442>
 8004a50:	4c60      	ldr	r4, [pc, #384]	; (8004bd4 <_strtod_l+0x584>)
 8004a52:	f1c6 060f 	rsb	r6, r6, #15
 8004a56:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 8004a5a:	4642      	mov	r2, r8
 8004a5c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004a60:	464b      	mov	r3, r9
 8004a62:	f7fb fd39 	bl	80004d8 <__aeabi_dmul>
 8004a66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004a68:	1b9e      	subs	r6, r3, r6
 8004a6a:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 8004a6e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8004a72:	e7e5      	b.n	8004a40 <_strtod_l+0x3f0>
 8004a74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004a76:	3316      	adds	r3, #22
 8004a78:	db0b      	blt.n	8004a92 <_strtod_l+0x442>
 8004a7a:	9b08      	ldr	r3, [sp, #32]
 8004a7c:	4640      	mov	r0, r8
 8004a7e:	1bdf      	subs	r7, r3, r7
 8004a80:	4b54      	ldr	r3, [pc, #336]	; (8004bd4 <_strtod_l+0x584>)
 8004a82:	4649      	mov	r1, r9
 8004a84:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8004a88:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004a8c:	f7fb fe4e 	bl	800072c <__aeabi_ddiv>
 8004a90:	e79d      	b.n	80049ce <_strtod_l+0x37e>
 8004a92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004a94:	1b75      	subs	r5, r6, r5
 8004a96:	441d      	add	r5, r3
 8004a98:	2d00      	cmp	r5, #0
 8004a9a:	dd70      	ble.n	8004b7e <_strtod_l+0x52e>
 8004a9c:	f015 030f 	ands.w	r3, r5, #15
 8004aa0:	d00a      	beq.n	8004ab8 <_strtod_l+0x468>
 8004aa2:	494c      	ldr	r1, [pc, #304]	; (8004bd4 <_strtod_l+0x584>)
 8004aa4:	4642      	mov	r2, r8
 8004aa6:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8004aaa:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004aae:	464b      	mov	r3, r9
 8004ab0:	f7fb fd12 	bl	80004d8 <__aeabi_dmul>
 8004ab4:	4680      	mov	r8, r0
 8004ab6:	4689      	mov	r9, r1
 8004ab8:	f035 050f 	bics.w	r5, r5, #15
 8004abc:	d04d      	beq.n	8004b5a <_strtod_l+0x50a>
 8004abe:	f5b5 7f9a 	cmp.w	r5, #308	; 0x134
 8004ac2:	dd22      	ble.n	8004b0a <_strtod_l+0x4ba>
 8004ac4:	2600      	movs	r6, #0
 8004ac6:	46b3      	mov	fp, r6
 8004ac8:	960b      	str	r6, [sp, #44]	; 0x2c
 8004aca:	9608      	str	r6, [sp, #32]
 8004acc:	2322      	movs	r3, #34	; 0x22
 8004ace:	f04f 0800 	mov.w	r8, #0
 8004ad2:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004bcc <_strtod_l+0x57c>
 8004ad6:	6023      	str	r3, [r4, #0]
 8004ad8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004ada:	2b00      	cmp	r3, #0
 8004adc:	f43f adf1 	beq.w	80046c2 <_strtod_l+0x72>
 8004ae0:	4620      	mov	r0, r4
 8004ae2:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004ae4:	f7ff f934 	bl	8003d50 <_Bfree>
 8004ae8:	4620      	mov	r0, r4
 8004aea:	9908      	ldr	r1, [sp, #32]
 8004aec:	f7ff f930 	bl	8003d50 <_Bfree>
 8004af0:	4659      	mov	r1, fp
 8004af2:	4620      	mov	r0, r4
 8004af4:	f7ff f92c 	bl	8003d50 <_Bfree>
 8004af8:	4620      	mov	r0, r4
 8004afa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004afc:	f7ff f928 	bl	8003d50 <_Bfree>
 8004b00:	4631      	mov	r1, r6
 8004b02:	4620      	mov	r0, r4
 8004b04:	f7ff f924 	bl	8003d50 <_Bfree>
 8004b08:	e5db      	b.n	80046c2 <_strtod_l+0x72>
 8004b0a:	4b33      	ldr	r3, [pc, #204]	; (8004bd8 <_strtod_l+0x588>)
 8004b0c:	4640      	mov	r0, r8
 8004b0e:	9305      	str	r3, [sp, #20]
 8004b10:	2300      	movs	r3, #0
 8004b12:	4649      	mov	r1, r9
 8004b14:	469a      	mov	sl, r3
 8004b16:	112d      	asrs	r5, r5, #4
 8004b18:	2d01      	cmp	r5, #1
 8004b1a:	dc21      	bgt.n	8004b60 <_strtod_l+0x510>
 8004b1c:	b10b      	cbz	r3, 8004b22 <_strtod_l+0x4d2>
 8004b1e:	4680      	mov	r8, r0
 8004b20:	4689      	mov	r9, r1
 8004b22:	492d      	ldr	r1, [pc, #180]	; (8004bd8 <_strtod_l+0x588>)
 8004b24:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8004b28:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8004b2c:	4642      	mov	r2, r8
 8004b2e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004b32:	464b      	mov	r3, r9
 8004b34:	f7fb fcd0 	bl	80004d8 <__aeabi_dmul>
 8004b38:	4b24      	ldr	r3, [pc, #144]	; (8004bcc <_strtod_l+0x57c>)
 8004b3a:	460a      	mov	r2, r1
 8004b3c:	400b      	ands	r3, r1
 8004b3e:	4927      	ldr	r1, [pc, #156]	; (8004bdc <_strtod_l+0x58c>)
 8004b40:	4680      	mov	r8, r0
 8004b42:	428b      	cmp	r3, r1
 8004b44:	d8be      	bhi.n	8004ac4 <_strtod_l+0x474>
 8004b46:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8004b4a:	428b      	cmp	r3, r1
 8004b4c:	bf86      	itte	hi
 8004b4e:	f04f 38ff 	movhi.w	r8, #4294967295
 8004b52:	f8df 908c 	ldrhi.w	r9, [pc, #140]	; 8004be0 <_strtod_l+0x590>
 8004b56:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 8004b5a:	2300      	movs	r3, #0
 8004b5c:	9305      	str	r3, [sp, #20]
 8004b5e:	e07b      	b.n	8004c58 <_strtod_l+0x608>
 8004b60:	07ea      	lsls	r2, r5, #31
 8004b62:	d505      	bpl.n	8004b70 <_strtod_l+0x520>
 8004b64:	9b05      	ldr	r3, [sp, #20]
 8004b66:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b6a:	f7fb fcb5 	bl	80004d8 <__aeabi_dmul>
 8004b6e:	2301      	movs	r3, #1
 8004b70:	9a05      	ldr	r2, [sp, #20]
 8004b72:	f10a 0a01 	add.w	sl, sl, #1
 8004b76:	3208      	adds	r2, #8
 8004b78:	106d      	asrs	r5, r5, #1
 8004b7a:	9205      	str	r2, [sp, #20]
 8004b7c:	e7cc      	b.n	8004b18 <_strtod_l+0x4c8>
 8004b7e:	d0ec      	beq.n	8004b5a <_strtod_l+0x50a>
 8004b80:	426d      	negs	r5, r5
 8004b82:	f015 020f 	ands.w	r2, r5, #15
 8004b86:	d00a      	beq.n	8004b9e <_strtod_l+0x54e>
 8004b88:	4b12      	ldr	r3, [pc, #72]	; (8004bd4 <_strtod_l+0x584>)
 8004b8a:	4640      	mov	r0, r8
 8004b8c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004b90:	4649      	mov	r1, r9
 8004b92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004b96:	f7fb fdc9 	bl	800072c <__aeabi_ddiv>
 8004b9a:	4680      	mov	r8, r0
 8004b9c:	4689      	mov	r9, r1
 8004b9e:	112d      	asrs	r5, r5, #4
 8004ba0:	d0db      	beq.n	8004b5a <_strtod_l+0x50a>
 8004ba2:	2d1f      	cmp	r5, #31
 8004ba4:	dd1e      	ble.n	8004be4 <_strtod_l+0x594>
 8004ba6:	2600      	movs	r6, #0
 8004ba8:	46b3      	mov	fp, r6
 8004baa:	960b      	str	r6, [sp, #44]	; 0x2c
 8004bac:	9608      	str	r6, [sp, #32]
 8004bae:	2322      	movs	r3, #34	; 0x22
 8004bb0:	f04f 0800 	mov.w	r8, #0
 8004bb4:	f04f 0900 	mov.w	r9, #0
 8004bb8:	6023      	str	r3, [r4, #0]
 8004bba:	e78d      	b.n	8004ad8 <_strtod_l+0x488>
 8004bbc:	08006567 	.word	0x08006567
 8004bc0:	08006794 	.word	0x08006794
 8004bc4:	0800655f 	.word	0x0800655f
 8004bc8:	08006596 	.word	0x08006596
 8004bcc:	7ff00000 	.word	0x7ff00000
 8004bd0:	08006925 	.word	0x08006925
 8004bd4:	080066a8 	.word	0x080066a8
 8004bd8:	08006680 	.word	0x08006680
 8004bdc:	7ca00000 	.word	0x7ca00000
 8004be0:	7fefffff 	.word	0x7fefffff
 8004be4:	f015 0310 	ands.w	r3, r5, #16
 8004be8:	bf18      	it	ne
 8004bea:	236a      	movne	r3, #106	; 0x6a
 8004bec:	4640      	mov	r0, r8
 8004bee:	9305      	str	r3, [sp, #20]
 8004bf0:	4649      	mov	r1, r9
 8004bf2:	2300      	movs	r3, #0
 8004bf4:	f8df a2c8 	ldr.w	sl, [pc, #712]	; 8004ec0 <_strtod_l+0x870>
 8004bf8:	07ea      	lsls	r2, r5, #31
 8004bfa:	d504      	bpl.n	8004c06 <_strtod_l+0x5b6>
 8004bfc:	e9da 2300 	ldrd	r2, r3, [sl]
 8004c00:	f7fb fc6a 	bl	80004d8 <__aeabi_dmul>
 8004c04:	2301      	movs	r3, #1
 8004c06:	106d      	asrs	r5, r5, #1
 8004c08:	f10a 0a08 	add.w	sl, sl, #8
 8004c0c:	d1f4      	bne.n	8004bf8 <_strtod_l+0x5a8>
 8004c0e:	b10b      	cbz	r3, 8004c14 <_strtod_l+0x5c4>
 8004c10:	4680      	mov	r8, r0
 8004c12:	4689      	mov	r9, r1
 8004c14:	9b05      	ldr	r3, [sp, #20]
 8004c16:	b1bb      	cbz	r3, 8004c48 <_strtod_l+0x5f8>
 8004c18:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8004c1c:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8004c20:	2b00      	cmp	r3, #0
 8004c22:	4649      	mov	r1, r9
 8004c24:	dd10      	ble.n	8004c48 <_strtod_l+0x5f8>
 8004c26:	2b1f      	cmp	r3, #31
 8004c28:	f340 8128 	ble.w	8004e7c <_strtod_l+0x82c>
 8004c2c:	2b34      	cmp	r3, #52	; 0x34
 8004c2e:	bfd8      	it	le
 8004c30:	f04f 33ff 	movle.w	r3, #4294967295
 8004c34:	f04f 0800 	mov.w	r8, #0
 8004c38:	bfcf      	iteee	gt
 8004c3a:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8004c3e:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8004c42:	4093      	lslle	r3, r2
 8004c44:	ea03 0901 	andle.w	r9, r3, r1
 8004c48:	2200      	movs	r2, #0
 8004c4a:	2300      	movs	r3, #0
 8004c4c:	4640      	mov	r0, r8
 8004c4e:	4649      	mov	r1, r9
 8004c50:	f7fb feaa 	bl	80009a8 <__aeabi_dcmpeq>
 8004c54:	2800      	cmp	r0, #0
 8004c56:	d1a6      	bne.n	8004ba6 <_strtod_l+0x556>
 8004c58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004c5a:	465a      	mov	r2, fp
 8004c5c:	9300      	str	r3, [sp, #0]
 8004c5e:	4620      	mov	r0, r4
 8004c60:	4633      	mov	r3, r6
 8004c62:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004c64:	f7ff f8dc 	bl	8003e20 <__s2b>
 8004c68:	900b      	str	r0, [sp, #44]	; 0x2c
 8004c6a:	2800      	cmp	r0, #0
 8004c6c:	f43f af2a 	beq.w	8004ac4 <_strtod_l+0x474>
 8004c70:	2600      	movs	r6, #0
 8004c72:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004c74:	9b08      	ldr	r3, [sp, #32]
 8004c76:	2a00      	cmp	r2, #0
 8004c78:	eba3 0307 	sub.w	r3, r3, r7
 8004c7c:	bfa8      	it	ge
 8004c7e:	2300      	movge	r3, #0
 8004c80:	46b3      	mov	fp, r6
 8004c82:	9312      	str	r3, [sp, #72]	; 0x48
 8004c84:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8004c88:	9316      	str	r3, [sp, #88]	; 0x58
 8004c8a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004c8c:	4620      	mov	r0, r4
 8004c8e:	6859      	ldr	r1, [r3, #4]
 8004c90:	f7ff f81e 	bl	8003cd0 <_Balloc>
 8004c94:	9008      	str	r0, [sp, #32]
 8004c96:	2800      	cmp	r0, #0
 8004c98:	f43f af18 	beq.w	8004acc <_strtod_l+0x47c>
 8004c9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004c9e:	300c      	adds	r0, #12
 8004ca0:	691a      	ldr	r2, [r3, #16]
 8004ca2:	f103 010c 	add.w	r1, r3, #12
 8004ca6:	3202      	adds	r2, #2
 8004ca8:	0092      	lsls	r2, r2, #2
 8004caa:	f000 fd89 	bl	80057c0 <memcpy>
 8004cae:	ab1c      	add	r3, sp, #112	; 0x70
 8004cb0:	9301      	str	r3, [sp, #4]
 8004cb2:	ab1b      	add	r3, sp, #108	; 0x6c
 8004cb4:	9300      	str	r3, [sp, #0]
 8004cb6:	4642      	mov	r2, r8
 8004cb8:	464b      	mov	r3, r9
 8004cba:	4620      	mov	r0, r4
 8004cbc:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 8004cc0:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
 8004cc4:	f7ff fbd8 	bl	8004478 <__d2b>
 8004cc8:	901a      	str	r0, [sp, #104]	; 0x68
 8004cca:	2800      	cmp	r0, #0
 8004ccc:	f43f aefe 	beq.w	8004acc <_strtod_l+0x47c>
 8004cd0:	2101      	movs	r1, #1
 8004cd2:	4620      	mov	r0, r4
 8004cd4:	f7ff f93c 	bl	8003f50 <__i2b>
 8004cd8:	4683      	mov	fp, r0
 8004cda:	2800      	cmp	r0, #0
 8004cdc:	f43f aef6 	beq.w	8004acc <_strtod_l+0x47c>
 8004ce0:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
 8004ce2:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8004ce4:	2f00      	cmp	r7, #0
 8004ce6:	bfab      	itete	ge
 8004ce8:	9b12      	ldrge	r3, [sp, #72]	; 0x48
 8004cea:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 8004cec:	eb07 0a03 	addge.w	sl, r7, r3
 8004cf0:	1bdd      	sublt	r5, r3, r7
 8004cf2:	9b05      	ldr	r3, [sp, #20]
 8004cf4:	bfa8      	it	ge
 8004cf6:	9d16      	ldrge	r5, [sp, #88]	; 0x58
 8004cf8:	eba7 0703 	sub.w	r7, r7, r3
 8004cfc:	4417      	add	r7, r2
 8004cfe:	4b71      	ldr	r3, [pc, #452]	; (8004ec4 <_strtod_l+0x874>)
 8004d00:	f107 37ff 	add.w	r7, r7, #4294967295
 8004d04:	bfb8      	it	lt
 8004d06:	f8dd a048 	ldrlt.w	sl, [sp, #72]	; 0x48
 8004d0a:	429f      	cmp	r7, r3
 8004d0c:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8004d10:	f280 80c7 	bge.w	8004ea2 <_strtod_l+0x852>
 8004d14:	1bdb      	subs	r3, r3, r7
 8004d16:	2b1f      	cmp	r3, #31
 8004d18:	f04f 0101 	mov.w	r1, #1
 8004d1c:	eba2 0203 	sub.w	r2, r2, r3
 8004d20:	f300 80b3 	bgt.w	8004e8a <_strtod_l+0x83a>
 8004d24:	fa01 f303 	lsl.w	r3, r1, r3
 8004d28:	9313      	str	r3, [sp, #76]	; 0x4c
 8004d2a:	2300      	movs	r3, #0
 8004d2c:	9310      	str	r3, [sp, #64]	; 0x40
 8004d2e:	eb0a 0702 	add.w	r7, sl, r2
 8004d32:	9b05      	ldr	r3, [sp, #20]
 8004d34:	45ba      	cmp	sl, r7
 8004d36:	4415      	add	r5, r2
 8004d38:	441d      	add	r5, r3
 8004d3a:	4653      	mov	r3, sl
 8004d3c:	bfa8      	it	ge
 8004d3e:	463b      	movge	r3, r7
 8004d40:	42ab      	cmp	r3, r5
 8004d42:	bfa8      	it	ge
 8004d44:	462b      	movge	r3, r5
 8004d46:	2b00      	cmp	r3, #0
 8004d48:	bfc2      	ittt	gt
 8004d4a:	1aff      	subgt	r7, r7, r3
 8004d4c:	1aed      	subgt	r5, r5, r3
 8004d4e:	ebaa 0a03 	subgt.w	sl, sl, r3
 8004d52:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004d54:	2b00      	cmp	r3, #0
 8004d56:	dd17      	ble.n	8004d88 <_strtod_l+0x738>
 8004d58:	4659      	mov	r1, fp
 8004d5a:	461a      	mov	r2, r3
 8004d5c:	4620      	mov	r0, r4
 8004d5e:	f7ff f9b5 	bl	80040cc <__pow5mult>
 8004d62:	4683      	mov	fp, r0
 8004d64:	2800      	cmp	r0, #0
 8004d66:	f43f aeb1 	beq.w	8004acc <_strtod_l+0x47c>
 8004d6a:	4601      	mov	r1, r0
 8004d6c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8004d6e:	4620      	mov	r0, r4
 8004d70:	f7ff f904 	bl	8003f7c <__multiply>
 8004d74:	900a      	str	r0, [sp, #40]	; 0x28
 8004d76:	2800      	cmp	r0, #0
 8004d78:	f43f aea8 	beq.w	8004acc <_strtod_l+0x47c>
 8004d7c:	4620      	mov	r0, r4
 8004d7e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004d80:	f7fe ffe6 	bl	8003d50 <_Bfree>
 8004d84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004d86:	931a      	str	r3, [sp, #104]	; 0x68
 8004d88:	2f00      	cmp	r7, #0
 8004d8a:	f300 808f 	bgt.w	8004eac <_strtod_l+0x85c>
 8004d8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d90:	2b00      	cmp	r3, #0
 8004d92:	dd08      	ble.n	8004da6 <_strtod_l+0x756>
 8004d94:	4620      	mov	r0, r4
 8004d96:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8004d98:	9908      	ldr	r1, [sp, #32]
 8004d9a:	f7ff f997 	bl	80040cc <__pow5mult>
 8004d9e:	9008      	str	r0, [sp, #32]
 8004da0:	2800      	cmp	r0, #0
 8004da2:	f43f ae93 	beq.w	8004acc <_strtod_l+0x47c>
 8004da6:	2d00      	cmp	r5, #0
 8004da8:	dd08      	ble.n	8004dbc <_strtod_l+0x76c>
 8004daa:	462a      	mov	r2, r5
 8004dac:	4620      	mov	r0, r4
 8004dae:	9908      	ldr	r1, [sp, #32]
 8004db0:	f7ff f9e6 	bl	8004180 <__lshift>
 8004db4:	9008      	str	r0, [sp, #32]
 8004db6:	2800      	cmp	r0, #0
 8004db8:	f43f ae88 	beq.w	8004acc <_strtod_l+0x47c>
 8004dbc:	f1ba 0f00 	cmp.w	sl, #0
 8004dc0:	dd08      	ble.n	8004dd4 <_strtod_l+0x784>
 8004dc2:	4659      	mov	r1, fp
 8004dc4:	4652      	mov	r2, sl
 8004dc6:	4620      	mov	r0, r4
 8004dc8:	f7ff f9da 	bl	8004180 <__lshift>
 8004dcc:	4683      	mov	fp, r0
 8004dce:	2800      	cmp	r0, #0
 8004dd0:	f43f ae7c 	beq.w	8004acc <_strtod_l+0x47c>
 8004dd4:	4620      	mov	r0, r4
 8004dd6:	9a08      	ldr	r2, [sp, #32]
 8004dd8:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004dda:	f7ff fa59 	bl	8004290 <__mdiff>
 8004dde:	4606      	mov	r6, r0
 8004de0:	2800      	cmp	r0, #0
 8004de2:	f43f ae73 	beq.w	8004acc <_strtod_l+0x47c>
 8004de6:	2500      	movs	r5, #0
 8004de8:	68c3      	ldr	r3, [r0, #12]
 8004dea:	4659      	mov	r1, fp
 8004dec:	60c5      	str	r5, [r0, #12]
 8004dee:	930a      	str	r3, [sp, #40]	; 0x28
 8004df0:	f7ff fa32 	bl	8004258 <__mcmp>
 8004df4:	42a8      	cmp	r0, r5
 8004df6:	da6b      	bge.n	8004ed0 <_strtod_l+0x880>
 8004df8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004dfa:	ea53 0308 	orrs.w	r3, r3, r8
 8004dfe:	f040 808f 	bne.w	8004f20 <_strtod_l+0x8d0>
 8004e02:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004e06:	2b00      	cmp	r3, #0
 8004e08:	f040 808a 	bne.w	8004f20 <_strtod_l+0x8d0>
 8004e0c:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8004e10:	0d1b      	lsrs	r3, r3, #20
 8004e12:	051b      	lsls	r3, r3, #20
 8004e14:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8004e18:	f240 8082 	bls.w	8004f20 <_strtod_l+0x8d0>
 8004e1c:	6973      	ldr	r3, [r6, #20]
 8004e1e:	b913      	cbnz	r3, 8004e26 <_strtod_l+0x7d6>
 8004e20:	6933      	ldr	r3, [r6, #16]
 8004e22:	2b01      	cmp	r3, #1
 8004e24:	dd7c      	ble.n	8004f20 <_strtod_l+0x8d0>
 8004e26:	4631      	mov	r1, r6
 8004e28:	2201      	movs	r2, #1
 8004e2a:	4620      	mov	r0, r4
 8004e2c:	f7ff f9a8 	bl	8004180 <__lshift>
 8004e30:	4659      	mov	r1, fp
 8004e32:	4606      	mov	r6, r0
 8004e34:	f7ff fa10 	bl	8004258 <__mcmp>
 8004e38:	2800      	cmp	r0, #0
 8004e3a:	dd71      	ble.n	8004f20 <_strtod_l+0x8d0>
 8004e3c:	9905      	ldr	r1, [sp, #20]
 8004e3e:	464b      	mov	r3, r9
 8004e40:	4a21      	ldr	r2, [pc, #132]	; (8004ec8 <_strtod_l+0x878>)
 8004e42:	2900      	cmp	r1, #0
 8004e44:	f000 808d 	beq.w	8004f62 <_strtod_l+0x912>
 8004e48:	ea02 0109 	and.w	r1, r2, r9
 8004e4c:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8004e50:	f300 8087 	bgt.w	8004f62 <_strtod_l+0x912>
 8004e54:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8004e58:	f77f aea9 	ble.w	8004bae <_strtod_l+0x55e>
 8004e5c:	4640      	mov	r0, r8
 8004e5e:	4649      	mov	r1, r9
 8004e60:	4b1a      	ldr	r3, [pc, #104]	; (8004ecc <_strtod_l+0x87c>)
 8004e62:	2200      	movs	r2, #0
 8004e64:	f7fb fb38 	bl	80004d8 <__aeabi_dmul>
 8004e68:	4b17      	ldr	r3, [pc, #92]	; (8004ec8 <_strtod_l+0x878>)
 8004e6a:	4680      	mov	r8, r0
 8004e6c:	400b      	ands	r3, r1
 8004e6e:	4689      	mov	r9, r1
 8004e70:	2b00      	cmp	r3, #0
 8004e72:	f47f ae35 	bne.w	8004ae0 <_strtod_l+0x490>
 8004e76:	2322      	movs	r3, #34	; 0x22
 8004e78:	6023      	str	r3, [r4, #0]
 8004e7a:	e631      	b.n	8004ae0 <_strtod_l+0x490>
 8004e7c:	f04f 32ff 	mov.w	r2, #4294967295
 8004e80:	fa02 f303 	lsl.w	r3, r2, r3
 8004e84:	ea03 0808 	and.w	r8, r3, r8
 8004e88:	e6de      	b.n	8004c48 <_strtod_l+0x5f8>
 8004e8a:	f1c7 477f 	rsb	r7, r7, #4278190080	; 0xff000000
 8004e8e:	f507 077f 	add.w	r7, r7, #16711680	; 0xff0000
 8004e92:	f507 477b 	add.w	r7, r7, #64256	; 0xfb00
 8004e96:	37e2      	adds	r7, #226	; 0xe2
 8004e98:	fa01 f307 	lsl.w	r3, r1, r7
 8004e9c:	9310      	str	r3, [sp, #64]	; 0x40
 8004e9e:	9113      	str	r1, [sp, #76]	; 0x4c
 8004ea0:	e745      	b.n	8004d2e <_strtod_l+0x6de>
 8004ea2:	2300      	movs	r3, #0
 8004ea4:	9310      	str	r3, [sp, #64]	; 0x40
 8004ea6:	2301      	movs	r3, #1
 8004ea8:	9313      	str	r3, [sp, #76]	; 0x4c
 8004eaa:	e740      	b.n	8004d2e <_strtod_l+0x6de>
 8004eac:	463a      	mov	r2, r7
 8004eae:	4620      	mov	r0, r4
 8004eb0:	991a      	ldr	r1, [sp, #104]	; 0x68
 8004eb2:	f7ff f965 	bl	8004180 <__lshift>
 8004eb6:	901a      	str	r0, [sp, #104]	; 0x68
 8004eb8:	2800      	cmp	r0, #0
 8004eba:	f47f af68 	bne.w	8004d8e <_strtod_l+0x73e>
 8004ebe:	e605      	b.n	8004acc <_strtod_l+0x47c>
 8004ec0:	080067a8 	.word	0x080067a8
 8004ec4:	fffffc02 	.word	0xfffffc02
 8004ec8:	7ff00000 	.word	0x7ff00000
 8004ecc:	39500000 	.word	0x39500000
 8004ed0:	46ca      	mov	sl, r9
 8004ed2:	d165      	bne.n	8004fa0 <_strtod_l+0x950>
 8004ed4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004ed6:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004eda:	b352      	cbz	r2, 8004f32 <_strtod_l+0x8e2>
 8004edc:	4a9e      	ldr	r2, [pc, #632]	; (8005158 <_strtod_l+0xb08>)
 8004ede:	4293      	cmp	r3, r2
 8004ee0:	d12a      	bne.n	8004f38 <_strtod_l+0x8e8>
 8004ee2:	9b05      	ldr	r3, [sp, #20]
 8004ee4:	4641      	mov	r1, r8
 8004ee6:	b1fb      	cbz	r3, 8004f28 <_strtod_l+0x8d8>
 8004ee8:	4b9c      	ldr	r3, [pc, #624]	; (800515c <_strtod_l+0xb0c>)
 8004eea:	f04f 32ff 	mov.w	r2, #4294967295
 8004eee:	ea09 0303 	and.w	r3, r9, r3
 8004ef2:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8004ef6:	d81a      	bhi.n	8004f2e <_strtod_l+0x8de>
 8004ef8:	0d1b      	lsrs	r3, r3, #20
 8004efa:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8004efe:	fa02 f303 	lsl.w	r3, r2, r3
 8004f02:	4299      	cmp	r1, r3
 8004f04:	d118      	bne.n	8004f38 <_strtod_l+0x8e8>
 8004f06:	4b96      	ldr	r3, [pc, #600]	; (8005160 <_strtod_l+0xb10>)
 8004f08:	459a      	cmp	sl, r3
 8004f0a:	d102      	bne.n	8004f12 <_strtod_l+0x8c2>
 8004f0c:	3101      	adds	r1, #1
 8004f0e:	f43f addd 	beq.w	8004acc <_strtod_l+0x47c>
 8004f12:	f04f 0800 	mov.w	r8, #0
 8004f16:	4b91      	ldr	r3, [pc, #580]	; (800515c <_strtod_l+0xb0c>)
 8004f18:	ea0a 0303 	and.w	r3, sl, r3
 8004f1c:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 8004f20:	9b05      	ldr	r3, [sp, #20]
 8004f22:	2b00      	cmp	r3, #0
 8004f24:	d19a      	bne.n	8004e5c <_strtod_l+0x80c>
 8004f26:	e5db      	b.n	8004ae0 <_strtod_l+0x490>
 8004f28:	f04f 33ff 	mov.w	r3, #4294967295
 8004f2c:	e7e9      	b.n	8004f02 <_strtod_l+0x8b2>
 8004f2e:	4613      	mov	r3, r2
 8004f30:	e7e7      	b.n	8004f02 <_strtod_l+0x8b2>
 8004f32:	ea53 0308 	orrs.w	r3, r3, r8
 8004f36:	d081      	beq.n	8004e3c <_strtod_l+0x7ec>
 8004f38:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004f3a:	b1e3      	cbz	r3, 8004f76 <_strtod_l+0x926>
 8004f3c:	ea13 0f0a 	tst.w	r3, sl
 8004f40:	d0ee      	beq.n	8004f20 <_strtod_l+0x8d0>
 8004f42:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004f44:	4640      	mov	r0, r8
 8004f46:	4649      	mov	r1, r9
 8004f48:	9a05      	ldr	r2, [sp, #20]
 8004f4a:	b1c3      	cbz	r3, 8004f7e <_strtod_l+0x92e>
 8004f4c:	f7ff fb5c 	bl	8004608 <sulp>
 8004f50:	4602      	mov	r2, r0
 8004f52:	460b      	mov	r3, r1
 8004f54:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004f56:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004f58:	f7fb f908 	bl	800016c <__adddf3>
 8004f5c:	4680      	mov	r8, r0
 8004f5e:	4689      	mov	r9, r1
 8004f60:	e7de      	b.n	8004f20 <_strtod_l+0x8d0>
 8004f62:	4013      	ands	r3, r2
 8004f64:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8004f68:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8004f6c:	f04f 38ff 	mov.w	r8, #4294967295
 8004f70:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8004f74:	e7d4      	b.n	8004f20 <_strtod_l+0x8d0>
 8004f76:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8004f78:	ea13 0f08 	tst.w	r3, r8
 8004f7c:	e7e0      	b.n	8004f40 <_strtod_l+0x8f0>
 8004f7e:	f7ff fb43 	bl	8004608 <sulp>
 8004f82:	4602      	mov	r2, r0
 8004f84:	460b      	mov	r3, r1
 8004f86:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004f88:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004f8a:	f7fb f8ed 	bl	8000168 <__aeabi_dsub>
 8004f8e:	2200      	movs	r2, #0
 8004f90:	2300      	movs	r3, #0
 8004f92:	4680      	mov	r8, r0
 8004f94:	4689      	mov	r9, r1
 8004f96:	f7fb fd07 	bl	80009a8 <__aeabi_dcmpeq>
 8004f9a:	2800      	cmp	r0, #0
 8004f9c:	d0c0      	beq.n	8004f20 <_strtod_l+0x8d0>
 8004f9e:	e606      	b.n	8004bae <_strtod_l+0x55e>
 8004fa0:	4659      	mov	r1, fp
 8004fa2:	4630      	mov	r0, r6
 8004fa4:	f7ff fabe 	bl	8004524 <__ratio>
 8004fa8:	4602      	mov	r2, r0
 8004faa:	460b      	mov	r3, r1
 8004fac:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8004fb0:	2200      	movs	r2, #0
 8004fb2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8004fb6:	f7fb fd0b 	bl	80009d0 <__aeabi_dcmple>
 8004fba:	2800      	cmp	r0, #0
 8004fbc:	d06f      	beq.n	800509e <_strtod_l+0xa4e>
 8004fbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004fc0:	2b00      	cmp	r3, #0
 8004fc2:	d17c      	bne.n	80050be <_strtod_l+0xa6e>
 8004fc4:	f1b8 0f00 	cmp.w	r8, #0
 8004fc8:	d159      	bne.n	800507e <_strtod_l+0xa2e>
 8004fca:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004fce:	2b00      	cmp	r3, #0
 8004fd0:	d17b      	bne.n	80050ca <_strtod_l+0xa7a>
 8004fd2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004fd6:	2200      	movs	r2, #0
 8004fd8:	4b62      	ldr	r3, [pc, #392]	; (8005164 <_strtod_l+0xb14>)
 8004fda:	f7fb fcef 	bl	80009bc <__aeabi_dcmplt>
 8004fde:	2800      	cmp	r0, #0
 8004fe0:	d15a      	bne.n	8005098 <_strtod_l+0xa48>
 8004fe2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8004fe6:	2200      	movs	r2, #0
 8004fe8:	4b5f      	ldr	r3, [pc, #380]	; (8005168 <_strtod_l+0xb18>)
 8004fea:	f7fb fa75 	bl	80004d8 <__aeabi_dmul>
 8004fee:	4605      	mov	r5, r0
 8004ff0:	460f      	mov	r7, r1
 8004ff2:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 8004ff6:	9506      	str	r5, [sp, #24]
 8004ff8:	9307      	str	r3, [sp, #28]
 8004ffa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8004ffe:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8005002:	4b56      	ldr	r3, [pc, #344]	; (800515c <_strtod_l+0xb0c>)
 8005004:	4a55      	ldr	r2, [pc, #340]	; (800515c <_strtod_l+0xb0c>)
 8005006:	ea0a 0303 	and.w	r3, sl, r3
 800500a:	9313      	str	r3, [sp, #76]	; 0x4c
 800500c:	4b57      	ldr	r3, [pc, #348]	; (800516c <_strtod_l+0xb1c>)
 800500e:	ea0a 0202 	and.w	r2, sl, r2
 8005012:	429a      	cmp	r2, r3
 8005014:	f040 80b0 	bne.w	8005178 <_strtod_l+0xb28>
 8005018:	f1aa 7954 	sub.w	r9, sl, #55574528	; 0x3500000
 800501c:	4640      	mov	r0, r8
 800501e:	4649      	mov	r1, r9
 8005020:	f7ff f9c2 	bl	80043a8 <__ulp>
 8005024:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005028:	f7fb fa56 	bl	80004d8 <__aeabi_dmul>
 800502c:	4642      	mov	r2, r8
 800502e:	464b      	mov	r3, r9
 8005030:	f7fb f89c 	bl	800016c <__adddf3>
 8005034:	f8df a124 	ldr.w	sl, [pc, #292]	; 800515c <_strtod_l+0xb0c>
 8005038:	4a4d      	ldr	r2, [pc, #308]	; (8005170 <_strtod_l+0xb20>)
 800503a:	ea01 0a0a 	and.w	sl, r1, sl
 800503e:	4592      	cmp	sl, r2
 8005040:	4680      	mov	r8, r0
 8005042:	d948      	bls.n	80050d6 <_strtod_l+0xa86>
 8005044:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005046:	4b46      	ldr	r3, [pc, #280]	; (8005160 <_strtod_l+0xb10>)
 8005048:	429a      	cmp	r2, r3
 800504a:	d103      	bne.n	8005054 <_strtod_l+0xa04>
 800504c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800504e:	3301      	adds	r3, #1
 8005050:	f43f ad3c 	beq.w	8004acc <_strtod_l+0x47c>
 8005054:	f04f 38ff 	mov.w	r8, #4294967295
 8005058:	f8df 9104 	ldr.w	r9, [pc, #260]	; 8005160 <_strtod_l+0xb10>
 800505c:	4620      	mov	r0, r4
 800505e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005060:	f7fe fe76 	bl	8003d50 <_Bfree>
 8005064:	4620      	mov	r0, r4
 8005066:	9908      	ldr	r1, [sp, #32]
 8005068:	f7fe fe72 	bl	8003d50 <_Bfree>
 800506c:	4659      	mov	r1, fp
 800506e:	4620      	mov	r0, r4
 8005070:	f7fe fe6e 	bl	8003d50 <_Bfree>
 8005074:	4631      	mov	r1, r6
 8005076:	4620      	mov	r0, r4
 8005078:	f7fe fe6a 	bl	8003d50 <_Bfree>
 800507c:	e605      	b.n	8004c8a <_strtod_l+0x63a>
 800507e:	f1b8 0f01 	cmp.w	r8, #1
 8005082:	d103      	bne.n	800508c <_strtod_l+0xa3c>
 8005084:	f1b9 0f00 	cmp.w	r9, #0
 8005088:	f43f ad91 	beq.w	8004bae <_strtod_l+0x55e>
 800508c:	2200      	movs	r2, #0
 800508e:	4b39      	ldr	r3, [pc, #228]	; (8005174 <_strtod_l+0xb24>)
 8005090:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8005092:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8005096:	e016      	b.n	80050c6 <_strtod_l+0xa76>
 8005098:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800509a:	4f33      	ldr	r7, [pc, #204]	; (8005168 <_strtod_l+0xb18>)
 800509c:	e7a9      	b.n	8004ff2 <_strtod_l+0x9a2>
 800509e:	4b32      	ldr	r3, [pc, #200]	; (8005168 <_strtod_l+0xb18>)
 80050a0:	2200      	movs	r2, #0
 80050a2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80050a6:	f7fb fa17 	bl	80004d8 <__aeabi_dmul>
 80050aa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80050ac:	4605      	mov	r5, r0
 80050ae:	460f      	mov	r7, r1
 80050b0:	2b00      	cmp	r3, #0
 80050b2:	d09e      	beq.n	8004ff2 <_strtod_l+0x9a2>
 80050b4:	4602      	mov	r2, r0
 80050b6:	460b      	mov	r3, r1
 80050b8:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80050bc:	e79d      	b.n	8004ffa <_strtod_l+0x9aa>
 80050be:	2200      	movs	r2, #0
 80050c0:	4b28      	ldr	r3, [pc, #160]	; (8005164 <_strtod_l+0xb14>)
 80050c2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80050c6:	4f27      	ldr	r7, [pc, #156]	; (8005164 <_strtod_l+0xb14>)
 80050c8:	e797      	b.n	8004ffa <_strtod_l+0x9aa>
 80050ca:	2200      	movs	r2, #0
 80050cc:	4b29      	ldr	r3, [pc, #164]	; (8005174 <_strtod_l+0xb24>)
 80050ce:	4645      	mov	r5, r8
 80050d0:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80050d4:	e7f7      	b.n	80050c6 <_strtod_l+0xa76>
 80050d6:	f101 7954 	add.w	r9, r1, #55574528	; 0x3500000
 80050da:	9b05      	ldr	r3, [sp, #20]
 80050dc:	46ca      	mov	sl, r9
 80050de:	2b00      	cmp	r3, #0
 80050e0:	d1bc      	bne.n	800505c <_strtod_l+0xa0c>
 80050e2:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80050e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80050e8:	0d1b      	lsrs	r3, r3, #20
 80050ea:	051b      	lsls	r3, r3, #20
 80050ec:	429a      	cmp	r2, r3
 80050ee:	d1b5      	bne.n	800505c <_strtod_l+0xa0c>
 80050f0:	4628      	mov	r0, r5
 80050f2:	4639      	mov	r1, r7
 80050f4:	f7fb fd38 	bl	8000b68 <__aeabi_d2lz>
 80050f8:	f7fb f9c0 	bl	800047c <__aeabi_l2d>
 80050fc:	4602      	mov	r2, r0
 80050fe:	460b      	mov	r3, r1
 8005100:	4628      	mov	r0, r5
 8005102:	4639      	mov	r1, r7
 8005104:	f7fb f830 	bl	8000168 <__aeabi_dsub>
 8005108:	460b      	mov	r3, r1
 800510a:	4602      	mov	r2, r0
 800510c:	f3c9 0a13 	ubfx	sl, r9, #0, #20
 8005110:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
 8005114:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005116:	ea4a 0a08 	orr.w	sl, sl, r8
 800511a:	ea5a 0a03 	orrs.w	sl, sl, r3
 800511e:	d06c      	beq.n	80051fa <_strtod_l+0xbaa>
 8005120:	a309      	add	r3, pc, #36	; (adr r3, 8005148 <_strtod_l+0xaf8>)
 8005122:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005126:	f7fb fc49 	bl	80009bc <__aeabi_dcmplt>
 800512a:	2800      	cmp	r0, #0
 800512c:	f47f acd8 	bne.w	8004ae0 <_strtod_l+0x490>
 8005130:	a307      	add	r3, pc, #28	; (adr r3, 8005150 <_strtod_l+0xb00>)
 8005132:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005136:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800513a:	f7fb fc5d 	bl	80009f8 <__aeabi_dcmpgt>
 800513e:	2800      	cmp	r0, #0
 8005140:	d08c      	beq.n	800505c <_strtod_l+0xa0c>
 8005142:	e4cd      	b.n	8004ae0 <_strtod_l+0x490>
 8005144:	f3af 8000 	nop.w
 8005148:	94a03595 	.word	0x94a03595
 800514c:	3fdfffff 	.word	0x3fdfffff
 8005150:	35afe535 	.word	0x35afe535
 8005154:	3fe00000 	.word	0x3fe00000
 8005158:	000fffff 	.word	0x000fffff
 800515c:	7ff00000 	.word	0x7ff00000
 8005160:	7fefffff 	.word	0x7fefffff
 8005164:	3ff00000 	.word	0x3ff00000
 8005168:	3fe00000 	.word	0x3fe00000
 800516c:	7fe00000 	.word	0x7fe00000
 8005170:	7c9fffff 	.word	0x7c9fffff
 8005174:	bff00000 	.word	0xbff00000
 8005178:	9b05      	ldr	r3, [sp, #20]
 800517a:	b333      	cbz	r3, 80051ca <_strtod_l+0xb7a>
 800517c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800517e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8005182:	d822      	bhi.n	80051ca <_strtod_l+0xb7a>
 8005184:	a328      	add	r3, pc, #160	; (adr r3, 8005228 <_strtod_l+0xbd8>)
 8005186:	e9d3 2300 	ldrd	r2, r3, [r3]
 800518a:	4628      	mov	r0, r5
 800518c:	4639      	mov	r1, r7
 800518e:	f7fb fc1f 	bl	80009d0 <__aeabi_dcmple>
 8005192:	b1a0      	cbz	r0, 80051be <_strtod_l+0xb6e>
 8005194:	4639      	mov	r1, r7
 8005196:	4628      	mov	r0, r5
 8005198:	f7fb fc76 	bl	8000a88 <__aeabi_d2uiz>
 800519c:	2801      	cmp	r0, #1
 800519e:	bf38      	it	cc
 80051a0:	2001      	movcc	r0, #1
 80051a2:	f7fb f91f 	bl	80003e4 <__aeabi_ui2d>
 80051a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80051a8:	4605      	mov	r5, r0
 80051aa:	460f      	mov	r7, r1
 80051ac:	bb03      	cbnz	r3, 80051f0 <_strtod_l+0xba0>
 80051ae:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80051b2:	9014      	str	r0, [sp, #80]	; 0x50
 80051b4:	9315      	str	r3, [sp, #84]	; 0x54
 80051b6:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 80051ba:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 80051be:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80051c0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80051c2:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 80051c6:	1a9b      	subs	r3, r3, r2
 80051c8:	9311      	str	r3, [sp, #68]	; 0x44
 80051ca:	980c      	ldr	r0, [sp, #48]	; 0x30
 80051cc:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80051ce:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	; 0x40
 80051d2:	f7ff f8e9 	bl	80043a8 <__ulp>
 80051d6:	4602      	mov	r2, r0
 80051d8:	460b      	mov	r3, r1
 80051da:	4640      	mov	r0, r8
 80051dc:	4649      	mov	r1, r9
 80051de:	f7fb f97b 	bl	80004d8 <__aeabi_dmul>
 80051e2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80051e4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80051e6:	f7fa ffc1 	bl	800016c <__adddf3>
 80051ea:	4680      	mov	r8, r0
 80051ec:	4689      	mov	r9, r1
 80051ee:	e774      	b.n	80050da <_strtod_l+0xa8a>
 80051f0:	4602      	mov	r2, r0
 80051f2:	460b      	mov	r3, r1
 80051f4:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 80051f8:	e7dd      	b.n	80051b6 <_strtod_l+0xb66>
 80051fa:	a30d      	add	r3, pc, #52	; (adr r3, 8005230 <_strtod_l+0xbe0>)
 80051fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005200:	f7fb fbdc 	bl	80009bc <__aeabi_dcmplt>
 8005204:	e79b      	b.n	800513e <_strtod_l+0xaee>
 8005206:	2300      	movs	r3, #0
 8005208:	930e      	str	r3, [sp, #56]	; 0x38
 800520a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800520c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800520e:	6013      	str	r3, [r2, #0]
 8005210:	f7ff ba5b 	b.w	80046ca <_strtod_l+0x7a>
 8005214:	2a65      	cmp	r2, #101	; 0x65
 8005216:	f43f ab52 	beq.w	80048be <_strtod_l+0x26e>
 800521a:	2a45      	cmp	r2, #69	; 0x45
 800521c:	f43f ab4f 	beq.w	80048be <_strtod_l+0x26e>
 8005220:	2301      	movs	r3, #1
 8005222:	f7ff bb87 	b.w	8004934 <_strtod_l+0x2e4>
 8005226:	bf00      	nop
 8005228:	ffc00000 	.word	0xffc00000
 800522c:	41dfffff 	.word	0x41dfffff
 8005230:	94a03595 	.word	0x94a03595
 8005234:	3fcfffff 	.word	0x3fcfffff

08005238 <_strtod_r>:
 8005238:	4b01      	ldr	r3, [pc, #4]	; (8005240 <_strtod_r+0x8>)
 800523a:	f7ff ba09 	b.w	8004650 <_strtod_l>
 800523e:	bf00      	nop
 8005240:	20000068 	.word	0x20000068

08005244 <_strtol_l.constprop.0>:
 8005244:	2b01      	cmp	r3, #1
 8005246:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800524a:	4686      	mov	lr, r0
 800524c:	4690      	mov	r8, r2
 800524e:	d001      	beq.n	8005254 <_strtol_l.constprop.0+0x10>
 8005250:	2b24      	cmp	r3, #36	; 0x24
 8005252:	d906      	bls.n	8005262 <_strtol_l.constprop.0+0x1e>
 8005254:	f7fd fd90 	bl	8002d78 <__errno>
 8005258:	2316      	movs	r3, #22
 800525a:	6003      	str	r3, [r0, #0]
 800525c:	2000      	movs	r0, #0
 800525e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005262:	460d      	mov	r5, r1
 8005264:	4835      	ldr	r0, [pc, #212]	; (800533c <_strtol_l.constprop.0+0xf8>)
 8005266:	462a      	mov	r2, r5
 8005268:	f815 4b01 	ldrb.w	r4, [r5], #1
 800526c:	5d06      	ldrb	r6, [r0, r4]
 800526e:	f016 0608 	ands.w	r6, r6, #8
 8005272:	d1f8      	bne.n	8005266 <_strtol_l.constprop.0+0x22>
 8005274:	2c2d      	cmp	r4, #45	; 0x2d
 8005276:	d12e      	bne.n	80052d6 <_strtol_l.constprop.0+0x92>
 8005278:	2601      	movs	r6, #1
 800527a:	782c      	ldrb	r4, [r5, #0]
 800527c:	1c95      	adds	r5, r2, #2
 800527e:	2b00      	cmp	r3, #0
 8005280:	d057      	beq.n	8005332 <_strtol_l.constprop.0+0xee>
 8005282:	2b10      	cmp	r3, #16
 8005284:	d109      	bne.n	800529a <_strtol_l.constprop.0+0x56>
 8005286:	2c30      	cmp	r4, #48	; 0x30
 8005288:	d107      	bne.n	800529a <_strtol_l.constprop.0+0x56>
 800528a:	782a      	ldrb	r2, [r5, #0]
 800528c:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 8005290:	2a58      	cmp	r2, #88	; 0x58
 8005292:	d149      	bne.n	8005328 <_strtol_l.constprop.0+0xe4>
 8005294:	2310      	movs	r3, #16
 8005296:	786c      	ldrb	r4, [r5, #1]
 8005298:	3502      	adds	r5, #2
 800529a:	2200      	movs	r2, #0
 800529c:	f106 4c00 	add.w	ip, r6, #2147483648	; 0x80000000
 80052a0:	f10c 3cff 	add.w	ip, ip, #4294967295
 80052a4:	fbbc f9f3 	udiv	r9, ip, r3
 80052a8:	4610      	mov	r0, r2
 80052aa:	fb03 ca19 	mls	sl, r3, r9, ip
 80052ae:	f1a4 0730 	sub.w	r7, r4, #48	; 0x30
 80052b2:	2f09      	cmp	r7, #9
 80052b4:	d814      	bhi.n	80052e0 <_strtol_l.constprop.0+0x9c>
 80052b6:	463c      	mov	r4, r7
 80052b8:	42a3      	cmp	r3, r4
 80052ba:	dd20      	ble.n	80052fe <_strtol_l.constprop.0+0xba>
 80052bc:	1c57      	adds	r7, r2, #1
 80052be:	d007      	beq.n	80052d0 <_strtol_l.constprop.0+0x8c>
 80052c0:	4581      	cmp	r9, r0
 80052c2:	d319      	bcc.n	80052f8 <_strtol_l.constprop.0+0xb4>
 80052c4:	d101      	bne.n	80052ca <_strtol_l.constprop.0+0x86>
 80052c6:	45a2      	cmp	sl, r4
 80052c8:	db16      	blt.n	80052f8 <_strtol_l.constprop.0+0xb4>
 80052ca:	2201      	movs	r2, #1
 80052cc:	fb00 4003 	mla	r0, r0, r3, r4
 80052d0:	f815 4b01 	ldrb.w	r4, [r5], #1
 80052d4:	e7eb      	b.n	80052ae <_strtol_l.constprop.0+0x6a>
 80052d6:	2c2b      	cmp	r4, #43	; 0x2b
 80052d8:	bf04      	itt	eq
 80052da:	782c      	ldrbeq	r4, [r5, #0]
 80052dc:	1c95      	addeq	r5, r2, #2
 80052de:	e7ce      	b.n	800527e <_strtol_l.constprop.0+0x3a>
 80052e0:	f1a4 0741 	sub.w	r7, r4, #65	; 0x41
 80052e4:	2f19      	cmp	r7, #25
 80052e6:	d801      	bhi.n	80052ec <_strtol_l.constprop.0+0xa8>
 80052e8:	3c37      	subs	r4, #55	; 0x37
 80052ea:	e7e5      	b.n	80052b8 <_strtol_l.constprop.0+0x74>
 80052ec:	f1a4 0761 	sub.w	r7, r4, #97	; 0x61
 80052f0:	2f19      	cmp	r7, #25
 80052f2:	d804      	bhi.n	80052fe <_strtol_l.constprop.0+0xba>
 80052f4:	3c57      	subs	r4, #87	; 0x57
 80052f6:	e7df      	b.n	80052b8 <_strtol_l.constprop.0+0x74>
 80052f8:	f04f 32ff 	mov.w	r2, #4294967295
 80052fc:	e7e8      	b.n	80052d0 <_strtol_l.constprop.0+0x8c>
 80052fe:	1c53      	adds	r3, r2, #1
 8005300:	d108      	bne.n	8005314 <_strtol_l.constprop.0+0xd0>
 8005302:	2322      	movs	r3, #34	; 0x22
 8005304:	4660      	mov	r0, ip
 8005306:	f8ce 3000 	str.w	r3, [lr]
 800530a:	f1b8 0f00 	cmp.w	r8, #0
 800530e:	d0a6      	beq.n	800525e <_strtol_l.constprop.0+0x1a>
 8005310:	1e69      	subs	r1, r5, #1
 8005312:	e006      	b.n	8005322 <_strtol_l.constprop.0+0xde>
 8005314:	b106      	cbz	r6, 8005318 <_strtol_l.constprop.0+0xd4>
 8005316:	4240      	negs	r0, r0
 8005318:	f1b8 0f00 	cmp.w	r8, #0
 800531c:	d09f      	beq.n	800525e <_strtol_l.constprop.0+0x1a>
 800531e:	2a00      	cmp	r2, #0
 8005320:	d1f6      	bne.n	8005310 <_strtol_l.constprop.0+0xcc>
 8005322:	f8c8 1000 	str.w	r1, [r8]
 8005326:	e79a      	b.n	800525e <_strtol_l.constprop.0+0x1a>
 8005328:	2430      	movs	r4, #48	; 0x30
 800532a:	2b00      	cmp	r3, #0
 800532c:	d1b5      	bne.n	800529a <_strtol_l.constprop.0+0x56>
 800532e:	2308      	movs	r3, #8
 8005330:	e7b3      	b.n	800529a <_strtol_l.constprop.0+0x56>
 8005332:	2c30      	cmp	r4, #48	; 0x30
 8005334:	d0a9      	beq.n	800528a <_strtol_l.constprop.0+0x46>
 8005336:	230a      	movs	r3, #10
 8005338:	e7af      	b.n	800529a <_strtol_l.constprop.0+0x56>
 800533a:	bf00      	nop
 800533c:	080067d1 	.word	0x080067d1

08005340 <_strtol_r>:
 8005340:	f7ff bf80 	b.w	8005244 <_strtol_l.constprop.0>

08005344 <__ssputs_r>:
 8005344:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005348:	461f      	mov	r7, r3
 800534a:	688e      	ldr	r6, [r1, #8]
 800534c:	4682      	mov	sl, r0
 800534e:	42be      	cmp	r6, r7
 8005350:	460c      	mov	r4, r1
 8005352:	4690      	mov	r8, r2
 8005354:	680b      	ldr	r3, [r1, #0]
 8005356:	d82c      	bhi.n	80053b2 <__ssputs_r+0x6e>
 8005358:	898a      	ldrh	r2, [r1, #12]
 800535a:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800535e:	d026      	beq.n	80053ae <__ssputs_r+0x6a>
 8005360:	6965      	ldr	r5, [r4, #20]
 8005362:	6909      	ldr	r1, [r1, #16]
 8005364:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005368:	eba3 0901 	sub.w	r9, r3, r1
 800536c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8005370:	1c7b      	adds	r3, r7, #1
 8005372:	444b      	add	r3, r9
 8005374:	106d      	asrs	r5, r5, #1
 8005376:	429d      	cmp	r5, r3
 8005378:	bf38      	it	cc
 800537a:	461d      	movcc	r5, r3
 800537c:	0553      	lsls	r3, r2, #21
 800537e:	d527      	bpl.n	80053d0 <__ssputs_r+0x8c>
 8005380:	4629      	mov	r1, r5
 8005382:	f7fe fc19 	bl	8003bb8 <_malloc_r>
 8005386:	4606      	mov	r6, r0
 8005388:	b360      	cbz	r0, 80053e4 <__ssputs_r+0xa0>
 800538a:	464a      	mov	r2, r9
 800538c:	6921      	ldr	r1, [r4, #16]
 800538e:	f000 fa17 	bl	80057c0 <memcpy>
 8005392:	89a3      	ldrh	r3, [r4, #12]
 8005394:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005398:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800539c:	81a3      	strh	r3, [r4, #12]
 800539e:	6126      	str	r6, [r4, #16]
 80053a0:	444e      	add	r6, r9
 80053a2:	6026      	str	r6, [r4, #0]
 80053a4:	463e      	mov	r6, r7
 80053a6:	6165      	str	r5, [r4, #20]
 80053a8:	eba5 0509 	sub.w	r5, r5, r9
 80053ac:	60a5      	str	r5, [r4, #8]
 80053ae:	42be      	cmp	r6, r7
 80053b0:	d900      	bls.n	80053b4 <__ssputs_r+0x70>
 80053b2:	463e      	mov	r6, r7
 80053b4:	4632      	mov	r2, r6
 80053b6:	4641      	mov	r1, r8
 80053b8:	6820      	ldr	r0, [r4, #0]
 80053ba:	f000 f9c5 	bl	8005748 <memmove>
 80053be:	2000      	movs	r0, #0
 80053c0:	68a3      	ldr	r3, [r4, #8]
 80053c2:	1b9b      	subs	r3, r3, r6
 80053c4:	60a3      	str	r3, [r4, #8]
 80053c6:	6823      	ldr	r3, [r4, #0]
 80053c8:	4433      	add	r3, r6
 80053ca:	6023      	str	r3, [r4, #0]
 80053cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80053d0:	462a      	mov	r2, r5
 80053d2:	f000 fda6 	bl	8005f22 <_realloc_r>
 80053d6:	4606      	mov	r6, r0
 80053d8:	2800      	cmp	r0, #0
 80053da:	d1e0      	bne.n	800539e <__ssputs_r+0x5a>
 80053dc:	4650      	mov	r0, sl
 80053de:	6921      	ldr	r1, [r4, #16]
 80053e0:	f7fe fb7a 	bl	8003ad8 <_free_r>
 80053e4:	230c      	movs	r3, #12
 80053e6:	f8ca 3000 	str.w	r3, [sl]
 80053ea:	89a3      	ldrh	r3, [r4, #12]
 80053ec:	f04f 30ff 	mov.w	r0, #4294967295
 80053f0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80053f4:	81a3      	strh	r3, [r4, #12]
 80053f6:	e7e9      	b.n	80053cc <__ssputs_r+0x88>

080053f8 <_svfiprintf_r>:
 80053f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80053fc:	4698      	mov	r8, r3
 80053fe:	898b      	ldrh	r3, [r1, #12]
 8005400:	4607      	mov	r7, r0
 8005402:	061b      	lsls	r3, r3, #24
 8005404:	460d      	mov	r5, r1
 8005406:	4614      	mov	r4, r2
 8005408:	b09d      	sub	sp, #116	; 0x74
 800540a:	d50e      	bpl.n	800542a <_svfiprintf_r+0x32>
 800540c:	690b      	ldr	r3, [r1, #16]
 800540e:	b963      	cbnz	r3, 800542a <_svfiprintf_r+0x32>
 8005410:	2140      	movs	r1, #64	; 0x40
 8005412:	f7fe fbd1 	bl	8003bb8 <_malloc_r>
 8005416:	6028      	str	r0, [r5, #0]
 8005418:	6128      	str	r0, [r5, #16]
 800541a:	b920      	cbnz	r0, 8005426 <_svfiprintf_r+0x2e>
 800541c:	230c      	movs	r3, #12
 800541e:	603b      	str	r3, [r7, #0]
 8005420:	f04f 30ff 	mov.w	r0, #4294967295
 8005424:	e0d0      	b.n	80055c8 <_svfiprintf_r+0x1d0>
 8005426:	2340      	movs	r3, #64	; 0x40
 8005428:	616b      	str	r3, [r5, #20]
 800542a:	2300      	movs	r3, #0
 800542c:	9309      	str	r3, [sp, #36]	; 0x24
 800542e:	2320      	movs	r3, #32
 8005430:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005434:	2330      	movs	r3, #48	; 0x30
 8005436:	f04f 0901 	mov.w	r9, #1
 800543a:	f8cd 800c 	str.w	r8, [sp, #12]
 800543e:	f8df 81a0 	ldr.w	r8, [pc, #416]	; 80055e0 <_svfiprintf_r+0x1e8>
 8005442:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005446:	4623      	mov	r3, r4
 8005448:	469a      	mov	sl, r3
 800544a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800544e:	b10a      	cbz	r2, 8005454 <_svfiprintf_r+0x5c>
 8005450:	2a25      	cmp	r2, #37	; 0x25
 8005452:	d1f9      	bne.n	8005448 <_svfiprintf_r+0x50>
 8005454:	ebba 0b04 	subs.w	fp, sl, r4
 8005458:	d00b      	beq.n	8005472 <_svfiprintf_r+0x7a>
 800545a:	465b      	mov	r3, fp
 800545c:	4622      	mov	r2, r4
 800545e:	4629      	mov	r1, r5
 8005460:	4638      	mov	r0, r7
 8005462:	f7ff ff6f 	bl	8005344 <__ssputs_r>
 8005466:	3001      	adds	r0, #1
 8005468:	f000 80a9 	beq.w	80055be <_svfiprintf_r+0x1c6>
 800546c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800546e:	445a      	add	r2, fp
 8005470:	9209      	str	r2, [sp, #36]	; 0x24
 8005472:	f89a 3000 	ldrb.w	r3, [sl]
 8005476:	2b00      	cmp	r3, #0
 8005478:	f000 80a1 	beq.w	80055be <_svfiprintf_r+0x1c6>
 800547c:	2300      	movs	r3, #0
 800547e:	f04f 32ff 	mov.w	r2, #4294967295
 8005482:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005486:	f10a 0a01 	add.w	sl, sl, #1
 800548a:	9304      	str	r3, [sp, #16]
 800548c:	9307      	str	r3, [sp, #28]
 800548e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005492:	931a      	str	r3, [sp, #104]	; 0x68
 8005494:	4654      	mov	r4, sl
 8005496:	2205      	movs	r2, #5
 8005498:	f814 1b01 	ldrb.w	r1, [r4], #1
 800549c:	4850      	ldr	r0, [pc, #320]	; (80055e0 <_svfiprintf_r+0x1e8>)
 800549e:	f7fd fc98 	bl	8002dd2 <memchr>
 80054a2:	9a04      	ldr	r2, [sp, #16]
 80054a4:	b9d8      	cbnz	r0, 80054de <_svfiprintf_r+0xe6>
 80054a6:	06d0      	lsls	r0, r2, #27
 80054a8:	bf44      	itt	mi
 80054aa:	2320      	movmi	r3, #32
 80054ac:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80054b0:	0711      	lsls	r1, r2, #28
 80054b2:	bf44      	itt	mi
 80054b4:	232b      	movmi	r3, #43	; 0x2b
 80054b6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80054ba:	f89a 3000 	ldrb.w	r3, [sl]
 80054be:	2b2a      	cmp	r3, #42	; 0x2a
 80054c0:	d015      	beq.n	80054ee <_svfiprintf_r+0xf6>
 80054c2:	4654      	mov	r4, sl
 80054c4:	2000      	movs	r0, #0
 80054c6:	f04f 0c0a 	mov.w	ip, #10
 80054ca:	9a07      	ldr	r2, [sp, #28]
 80054cc:	4621      	mov	r1, r4
 80054ce:	f811 3b01 	ldrb.w	r3, [r1], #1
 80054d2:	3b30      	subs	r3, #48	; 0x30
 80054d4:	2b09      	cmp	r3, #9
 80054d6:	d94d      	bls.n	8005574 <_svfiprintf_r+0x17c>
 80054d8:	b1b0      	cbz	r0, 8005508 <_svfiprintf_r+0x110>
 80054da:	9207      	str	r2, [sp, #28]
 80054dc:	e014      	b.n	8005508 <_svfiprintf_r+0x110>
 80054de:	eba0 0308 	sub.w	r3, r0, r8
 80054e2:	fa09 f303 	lsl.w	r3, r9, r3
 80054e6:	4313      	orrs	r3, r2
 80054e8:	46a2      	mov	sl, r4
 80054ea:	9304      	str	r3, [sp, #16]
 80054ec:	e7d2      	b.n	8005494 <_svfiprintf_r+0x9c>
 80054ee:	9b03      	ldr	r3, [sp, #12]
 80054f0:	1d19      	adds	r1, r3, #4
 80054f2:	681b      	ldr	r3, [r3, #0]
 80054f4:	9103      	str	r1, [sp, #12]
 80054f6:	2b00      	cmp	r3, #0
 80054f8:	bfbb      	ittet	lt
 80054fa:	425b      	neglt	r3, r3
 80054fc:	f042 0202 	orrlt.w	r2, r2, #2
 8005500:	9307      	strge	r3, [sp, #28]
 8005502:	9307      	strlt	r3, [sp, #28]
 8005504:	bfb8      	it	lt
 8005506:	9204      	strlt	r2, [sp, #16]
 8005508:	7823      	ldrb	r3, [r4, #0]
 800550a:	2b2e      	cmp	r3, #46	; 0x2e
 800550c:	d10c      	bne.n	8005528 <_svfiprintf_r+0x130>
 800550e:	7863      	ldrb	r3, [r4, #1]
 8005510:	2b2a      	cmp	r3, #42	; 0x2a
 8005512:	d134      	bne.n	800557e <_svfiprintf_r+0x186>
 8005514:	9b03      	ldr	r3, [sp, #12]
 8005516:	3402      	adds	r4, #2
 8005518:	1d1a      	adds	r2, r3, #4
 800551a:	681b      	ldr	r3, [r3, #0]
 800551c:	9203      	str	r2, [sp, #12]
 800551e:	2b00      	cmp	r3, #0
 8005520:	bfb8      	it	lt
 8005522:	f04f 33ff 	movlt.w	r3, #4294967295
 8005526:	9305      	str	r3, [sp, #20]
 8005528:	f8df a0b8 	ldr.w	sl, [pc, #184]	; 80055e4 <_svfiprintf_r+0x1ec>
 800552c:	2203      	movs	r2, #3
 800552e:	4650      	mov	r0, sl
 8005530:	7821      	ldrb	r1, [r4, #0]
 8005532:	f7fd fc4e 	bl	8002dd2 <memchr>
 8005536:	b138      	cbz	r0, 8005548 <_svfiprintf_r+0x150>
 8005538:	2240      	movs	r2, #64	; 0x40
 800553a:	9b04      	ldr	r3, [sp, #16]
 800553c:	eba0 000a 	sub.w	r0, r0, sl
 8005540:	4082      	lsls	r2, r0
 8005542:	4313      	orrs	r3, r2
 8005544:	3401      	adds	r4, #1
 8005546:	9304      	str	r3, [sp, #16]
 8005548:	f814 1b01 	ldrb.w	r1, [r4], #1
 800554c:	2206      	movs	r2, #6
 800554e:	4826      	ldr	r0, [pc, #152]	; (80055e8 <_svfiprintf_r+0x1f0>)
 8005550:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005554:	f7fd fc3d 	bl	8002dd2 <memchr>
 8005558:	2800      	cmp	r0, #0
 800555a:	d038      	beq.n	80055ce <_svfiprintf_r+0x1d6>
 800555c:	4b23      	ldr	r3, [pc, #140]	; (80055ec <_svfiprintf_r+0x1f4>)
 800555e:	bb1b      	cbnz	r3, 80055a8 <_svfiprintf_r+0x1b0>
 8005560:	9b03      	ldr	r3, [sp, #12]
 8005562:	3307      	adds	r3, #7
 8005564:	f023 0307 	bic.w	r3, r3, #7
 8005568:	3308      	adds	r3, #8
 800556a:	9303      	str	r3, [sp, #12]
 800556c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800556e:	4433      	add	r3, r6
 8005570:	9309      	str	r3, [sp, #36]	; 0x24
 8005572:	e768      	b.n	8005446 <_svfiprintf_r+0x4e>
 8005574:	460c      	mov	r4, r1
 8005576:	2001      	movs	r0, #1
 8005578:	fb0c 3202 	mla	r2, ip, r2, r3
 800557c:	e7a6      	b.n	80054cc <_svfiprintf_r+0xd4>
 800557e:	2300      	movs	r3, #0
 8005580:	f04f 0c0a 	mov.w	ip, #10
 8005584:	4619      	mov	r1, r3
 8005586:	3401      	adds	r4, #1
 8005588:	9305      	str	r3, [sp, #20]
 800558a:	4620      	mov	r0, r4
 800558c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005590:	3a30      	subs	r2, #48	; 0x30
 8005592:	2a09      	cmp	r2, #9
 8005594:	d903      	bls.n	800559e <_svfiprintf_r+0x1a6>
 8005596:	2b00      	cmp	r3, #0
 8005598:	d0c6      	beq.n	8005528 <_svfiprintf_r+0x130>
 800559a:	9105      	str	r1, [sp, #20]
 800559c:	e7c4      	b.n	8005528 <_svfiprintf_r+0x130>
 800559e:	4604      	mov	r4, r0
 80055a0:	2301      	movs	r3, #1
 80055a2:	fb0c 2101 	mla	r1, ip, r1, r2
 80055a6:	e7f0      	b.n	800558a <_svfiprintf_r+0x192>
 80055a8:	ab03      	add	r3, sp, #12
 80055aa:	9300      	str	r3, [sp, #0]
 80055ac:	462a      	mov	r2, r5
 80055ae:	4638      	mov	r0, r7
 80055b0:	4b0f      	ldr	r3, [pc, #60]	; (80055f0 <_svfiprintf_r+0x1f8>)
 80055b2:	a904      	add	r1, sp, #16
 80055b4:	f7fc fc98 	bl	8001ee8 <_printf_float>
 80055b8:	1c42      	adds	r2, r0, #1
 80055ba:	4606      	mov	r6, r0
 80055bc:	d1d6      	bne.n	800556c <_svfiprintf_r+0x174>
 80055be:	89ab      	ldrh	r3, [r5, #12]
 80055c0:	065b      	lsls	r3, r3, #25
 80055c2:	f53f af2d 	bmi.w	8005420 <_svfiprintf_r+0x28>
 80055c6:	9809      	ldr	r0, [sp, #36]	; 0x24
 80055c8:	b01d      	add	sp, #116	; 0x74
 80055ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80055ce:	ab03      	add	r3, sp, #12
 80055d0:	9300      	str	r3, [sp, #0]
 80055d2:	462a      	mov	r2, r5
 80055d4:	4638      	mov	r0, r7
 80055d6:	4b06      	ldr	r3, [pc, #24]	; (80055f0 <_svfiprintf_r+0x1f8>)
 80055d8:	a904      	add	r1, sp, #16
 80055da:	f7fc ff25 	bl	8002428 <_printf_i>
 80055de:	e7eb      	b.n	80055b8 <_svfiprintf_r+0x1c0>
 80055e0:	080068d1 	.word	0x080068d1
 80055e4:	080068d7 	.word	0x080068d7
 80055e8:	080068db 	.word	0x080068db
 80055ec:	08001ee9 	.word	0x08001ee9
 80055f0:	08005345 	.word	0x08005345

080055f4 <__sflush_r>:
 80055f4:	898a      	ldrh	r2, [r1, #12]
 80055f6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80055f8:	4605      	mov	r5, r0
 80055fa:	0710      	lsls	r0, r2, #28
 80055fc:	460c      	mov	r4, r1
 80055fe:	d457      	bmi.n	80056b0 <__sflush_r+0xbc>
 8005600:	684b      	ldr	r3, [r1, #4]
 8005602:	2b00      	cmp	r3, #0
 8005604:	dc04      	bgt.n	8005610 <__sflush_r+0x1c>
 8005606:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005608:	2b00      	cmp	r3, #0
 800560a:	dc01      	bgt.n	8005610 <__sflush_r+0x1c>
 800560c:	2000      	movs	r0, #0
 800560e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005610:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005612:	2e00      	cmp	r6, #0
 8005614:	d0fa      	beq.n	800560c <__sflush_r+0x18>
 8005616:	2300      	movs	r3, #0
 8005618:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800561c:	682f      	ldr	r7, [r5, #0]
 800561e:	6a21      	ldr	r1, [r4, #32]
 8005620:	602b      	str	r3, [r5, #0]
 8005622:	d032      	beq.n	800568a <__sflush_r+0x96>
 8005624:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005626:	89a3      	ldrh	r3, [r4, #12]
 8005628:	075a      	lsls	r2, r3, #29
 800562a:	d505      	bpl.n	8005638 <__sflush_r+0x44>
 800562c:	6863      	ldr	r3, [r4, #4]
 800562e:	1ac0      	subs	r0, r0, r3
 8005630:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005632:	b10b      	cbz	r3, 8005638 <__sflush_r+0x44>
 8005634:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005636:	1ac0      	subs	r0, r0, r3
 8005638:	2300      	movs	r3, #0
 800563a:	4602      	mov	r2, r0
 800563c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800563e:	4628      	mov	r0, r5
 8005640:	6a21      	ldr	r1, [r4, #32]
 8005642:	47b0      	blx	r6
 8005644:	1c43      	adds	r3, r0, #1
 8005646:	89a3      	ldrh	r3, [r4, #12]
 8005648:	d106      	bne.n	8005658 <__sflush_r+0x64>
 800564a:	6829      	ldr	r1, [r5, #0]
 800564c:	291d      	cmp	r1, #29
 800564e:	d82b      	bhi.n	80056a8 <__sflush_r+0xb4>
 8005650:	4a28      	ldr	r2, [pc, #160]	; (80056f4 <__sflush_r+0x100>)
 8005652:	410a      	asrs	r2, r1
 8005654:	07d6      	lsls	r6, r2, #31
 8005656:	d427      	bmi.n	80056a8 <__sflush_r+0xb4>
 8005658:	2200      	movs	r2, #0
 800565a:	6062      	str	r2, [r4, #4]
 800565c:	6922      	ldr	r2, [r4, #16]
 800565e:	04d9      	lsls	r1, r3, #19
 8005660:	6022      	str	r2, [r4, #0]
 8005662:	d504      	bpl.n	800566e <__sflush_r+0x7a>
 8005664:	1c42      	adds	r2, r0, #1
 8005666:	d101      	bne.n	800566c <__sflush_r+0x78>
 8005668:	682b      	ldr	r3, [r5, #0]
 800566a:	b903      	cbnz	r3, 800566e <__sflush_r+0x7a>
 800566c:	6560      	str	r0, [r4, #84]	; 0x54
 800566e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005670:	602f      	str	r7, [r5, #0]
 8005672:	2900      	cmp	r1, #0
 8005674:	d0ca      	beq.n	800560c <__sflush_r+0x18>
 8005676:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800567a:	4299      	cmp	r1, r3
 800567c:	d002      	beq.n	8005684 <__sflush_r+0x90>
 800567e:	4628      	mov	r0, r5
 8005680:	f7fe fa2a 	bl	8003ad8 <_free_r>
 8005684:	2000      	movs	r0, #0
 8005686:	6360      	str	r0, [r4, #52]	; 0x34
 8005688:	e7c1      	b.n	800560e <__sflush_r+0x1a>
 800568a:	2301      	movs	r3, #1
 800568c:	4628      	mov	r0, r5
 800568e:	47b0      	blx	r6
 8005690:	1c41      	adds	r1, r0, #1
 8005692:	d1c8      	bne.n	8005626 <__sflush_r+0x32>
 8005694:	682b      	ldr	r3, [r5, #0]
 8005696:	2b00      	cmp	r3, #0
 8005698:	d0c5      	beq.n	8005626 <__sflush_r+0x32>
 800569a:	2b1d      	cmp	r3, #29
 800569c:	d001      	beq.n	80056a2 <__sflush_r+0xae>
 800569e:	2b16      	cmp	r3, #22
 80056a0:	d101      	bne.n	80056a6 <__sflush_r+0xb2>
 80056a2:	602f      	str	r7, [r5, #0]
 80056a4:	e7b2      	b.n	800560c <__sflush_r+0x18>
 80056a6:	89a3      	ldrh	r3, [r4, #12]
 80056a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80056ac:	81a3      	strh	r3, [r4, #12]
 80056ae:	e7ae      	b.n	800560e <__sflush_r+0x1a>
 80056b0:	690f      	ldr	r7, [r1, #16]
 80056b2:	2f00      	cmp	r7, #0
 80056b4:	d0aa      	beq.n	800560c <__sflush_r+0x18>
 80056b6:	0793      	lsls	r3, r2, #30
 80056b8:	bf18      	it	ne
 80056ba:	2300      	movne	r3, #0
 80056bc:	680e      	ldr	r6, [r1, #0]
 80056be:	bf08      	it	eq
 80056c0:	694b      	ldreq	r3, [r1, #20]
 80056c2:	1bf6      	subs	r6, r6, r7
 80056c4:	600f      	str	r7, [r1, #0]
 80056c6:	608b      	str	r3, [r1, #8]
 80056c8:	2e00      	cmp	r6, #0
 80056ca:	dd9f      	ble.n	800560c <__sflush_r+0x18>
 80056cc:	4633      	mov	r3, r6
 80056ce:	463a      	mov	r2, r7
 80056d0:	4628      	mov	r0, r5
 80056d2:	6a21      	ldr	r1, [r4, #32]
 80056d4:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 80056d8:	47e0      	blx	ip
 80056da:	2800      	cmp	r0, #0
 80056dc:	dc06      	bgt.n	80056ec <__sflush_r+0xf8>
 80056de:	89a3      	ldrh	r3, [r4, #12]
 80056e0:	f04f 30ff 	mov.w	r0, #4294967295
 80056e4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80056e8:	81a3      	strh	r3, [r4, #12]
 80056ea:	e790      	b.n	800560e <__sflush_r+0x1a>
 80056ec:	4407      	add	r7, r0
 80056ee:	1a36      	subs	r6, r6, r0
 80056f0:	e7ea      	b.n	80056c8 <__sflush_r+0xd4>
 80056f2:	bf00      	nop
 80056f4:	dfbffffe 	.word	0xdfbffffe

080056f8 <_fflush_r>:
 80056f8:	b538      	push	{r3, r4, r5, lr}
 80056fa:	690b      	ldr	r3, [r1, #16]
 80056fc:	4605      	mov	r5, r0
 80056fe:	460c      	mov	r4, r1
 8005700:	b913      	cbnz	r3, 8005708 <_fflush_r+0x10>
 8005702:	2500      	movs	r5, #0
 8005704:	4628      	mov	r0, r5
 8005706:	bd38      	pop	{r3, r4, r5, pc}
 8005708:	b118      	cbz	r0, 8005712 <_fflush_r+0x1a>
 800570a:	6a03      	ldr	r3, [r0, #32]
 800570c:	b90b      	cbnz	r3, 8005712 <_fflush_r+0x1a>
 800570e:	f7fd fa47 	bl	8002ba0 <__sinit>
 8005712:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005716:	2b00      	cmp	r3, #0
 8005718:	d0f3      	beq.n	8005702 <_fflush_r+0xa>
 800571a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800571c:	07d0      	lsls	r0, r2, #31
 800571e:	d404      	bmi.n	800572a <_fflush_r+0x32>
 8005720:	0599      	lsls	r1, r3, #22
 8005722:	d402      	bmi.n	800572a <_fflush_r+0x32>
 8005724:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005726:	f7fd fb52 	bl	8002dce <__retarget_lock_acquire_recursive>
 800572a:	4628      	mov	r0, r5
 800572c:	4621      	mov	r1, r4
 800572e:	f7ff ff61 	bl	80055f4 <__sflush_r>
 8005732:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005734:	4605      	mov	r5, r0
 8005736:	07da      	lsls	r2, r3, #31
 8005738:	d4e4      	bmi.n	8005704 <_fflush_r+0xc>
 800573a:	89a3      	ldrh	r3, [r4, #12]
 800573c:	059b      	lsls	r3, r3, #22
 800573e:	d4e1      	bmi.n	8005704 <_fflush_r+0xc>
 8005740:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005742:	f7fd fb45 	bl	8002dd0 <__retarget_lock_release_recursive>
 8005746:	e7dd      	b.n	8005704 <_fflush_r+0xc>

08005748 <memmove>:
 8005748:	4288      	cmp	r0, r1
 800574a:	b510      	push	{r4, lr}
 800574c:	eb01 0402 	add.w	r4, r1, r2
 8005750:	d902      	bls.n	8005758 <memmove+0x10>
 8005752:	4284      	cmp	r4, r0
 8005754:	4623      	mov	r3, r4
 8005756:	d807      	bhi.n	8005768 <memmove+0x20>
 8005758:	1e43      	subs	r3, r0, #1
 800575a:	42a1      	cmp	r1, r4
 800575c:	d008      	beq.n	8005770 <memmove+0x28>
 800575e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005762:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005766:	e7f8      	b.n	800575a <memmove+0x12>
 8005768:	4601      	mov	r1, r0
 800576a:	4402      	add	r2, r0
 800576c:	428a      	cmp	r2, r1
 800576e:	d100      	bne.n	8005772 <memmove+0x2a>
 8005770:	bd10      	pop	{r4, pc}
 8005772:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005776:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800577a:	e7f7      	b.n	800576c <memmove+0x24>

0800577c <strncmp>:
 800577c:	b510      	push	{r4, lr}
 800577e:	b16a      	cbz	r2, 800579c <strncmp+0x20>
 8005780:	3901      	subs	r1, #1
 8005782:	1884      	adds	r4, r0, r2
 8005784:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005788:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800578c:	429a      	cmp	r2, r3
 800578e:	d103      	bne.n	8005798 <strncmp+0x1c>
 8005790:	42a0      	cmp	r0, r4
 8005792:	d001      	beq.n	8005798 <strncmp+0x1c>
 8005794:	2a00      	cmp	r2, #0
 8005796:	d1f5      	bne.n	8005784 <strncmp+0x8>
 8005798:	1ad0      	subs	r0, r2, r3
 800579a:	bd10      	pop	{r4, pc}
 800579c:	4610      	mov	r0, r2
 800579e:	e7fc      	b.n	800579a <strncmp+0x1e>

080057a0 <_sbrk_r>:
 80057a0:	b538      	push	{r3, r4, r5, lr}
 80057a2:	2300      	movs	r3, #0
 80057a4:	4d05      	ldr	r5, [pc, #20]	; (80057bc <_sbrk_r+0x1c>)
 80057a6:	4604      	mov	r4, r0
 80057a8:	4608      	mov	r0, r1
 80057aa:	602b      	str	r3, [r5, #0]
 80057ac:	f7fb fba0 	bl	8000ef0 <_sbrk>
 80057b0:	1c43      	adds	r3, r0, #1
 80057b2:	d102      	bne.n	80057ba <_sbrk_r+0x1a>
 80057b4:	682b      	ldr	r3, [r5, #0]
 80057b6:	b103      	cbz	r3, 80057ba <_sbrk_r+0x1a>
 80057b8:	6023      	str	r3, [r4, #0]
 80057ba:	bd38      	pop	{r3, r4, r5, pc}
 80057bc:	20000334 	.word	0x20000334

080057c0 <memcpy>:
 80057c0:	440a      	add	r2, r1
 80057c2:	4291      	cmp	r1, r2
 80057c4:	f100 33ff 	add.w	r3, r0, #4294967295
 80057c8:	d100      	bne.n	80057cc <memcpy+0xc>
 80057ca:	4770      	bx	lr
 80057cc:	b510      	push	{r4, lr}
 80057ce:	f811 4b01 	ldrb.w	r4, [r1], #1
 80057d2:	4291      	cmp	r1, r2
 80057d4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80057d8:	d1f9      	bne.n	80057ce <memcpy+0xe>
 80057da:	bd10      	pop	{r4, pc}

080057dc <nan>:
 80057dc:	2000      	movs	r0, #0
 80057de:	4901      	ldr	r1, [pc, #4]	; (80057e4 <nan+0x8>)
 80057e0:	4770      	bx	lr
 80057e2:	bf00      	nop
 80057e4:	7ff80000 	.word	0x7ff80000

080057e8 <__assert_func>:
 80057e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80057ea:	4614      	mov	r4, r2
 80057ec:	461a      	mov	r2, r3
 80057ee:	4b09      	ldr	r3, [pc, #36]	; (8005814 <__assert_func+0x2c>)
 80057f0:	4605      	mov	r5, r0
 80057f2:	681b      	ldr	r3, [r3, #0]
 80057f4:	68d8      	ldr	r0, [r3, #12]
 80057f6:	b14c      	cbz	r4, 800580c <__assert_func+0x24>
 80057f8:	4b07      	ldr	r3, [pc, #28]	; (8005818 <__assert_func+0x30>)
 80057fa:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80057fe:	9100      	str	r1, [sp, #0]
 8005800:	462b      	mov	r3, r5
 8005802:	4906      	ldr	r1, [pc, #24]	; (800581c <__assert_func+0x34>)
 8005804:	f000 fbca 	bl	8005f9c <fiprintf>
 8005808:	f000 fbda 	bl	8005fc0 <abort>
 800580c:	4b04      	ldr	r3, [pc, #16]	; (8005820 <__assert_func+0x38>)
 800580e:	461c      	mov	r4, r3
 8005810:	e7f3      	b.n	80057fa <__assert_func+0x12>
 8005812:	bf00      	nop
 8005814:	20000064 	.word	0x20000064
 8005818:	080068ea 	.word	0x080068ea
 800581c:	080068f7 	.word	0x080068f7
 8005820:	08006925 	.word	0x08006925

08005824 <_calloc_r>:
 8005824:	b570      	push	{r4, r5, r6, lr}
 8005826:	fba1 5402 	umull	r5, r4, r1, r2
 800582a:	b934      	cbnz	r4, 800583a <_calloc_r+0x16>
 800582c:	4629      	mov	r1, r5
 800582e:	f7fe f9c3 	bl	8003bb8 <_malloc_r>
 8005832:	4606      	mov	r6, r0
 8005834:	b928      	cbnz	r0, 8005842 <_calloc_r+0x1e>
 8005836:	4630      	mov	r0, r6
 8005838:	bd70      	pop	{r4, r5, r6, pc}
 800583a:	220c      	movs	r2, #12
 800583c:	2600      	movs	r6, #0
 800583e:	6002      	str	r2, [r0, #0]
 8005840:	e7f9      	b.n	8005836 <_calloc_r+0x12>
 8005842:	462a      	mov	r2, r5
 8005844:	4621      	mov	r1, r4
 8005846:	f7fd fa44 	bl	8002cd2 <memset>
 800584a:	e7f4      	b.n	8005836 <_calloc_r+0x12>

0800584c <rshift>:
 800584c:	6903      	ldr	r3, [r0, #16]
 800584e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005852:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8005856:	f100 0414 	add.w	r4, r0, #20
 800585a:	ea4f 1261 	mov.w	r2, r1, asr #5
 800585e:	dd46      	ble.n	80058ee <rshift+0xa2>
 8005860:	f011 011f 	ands.w	r1, r1, #31
 8005864:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8005868:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800586c:	d10c      	bne.n	8005888 <rshift+0x3c>
 800586e:	4629      	mov	r1, r5
 8005870:	f100 0710 	add.w	r7, r0, #16
 8005874:	42b1      	cmp	r1, r6
 8005876:	d335      	bcc.n	80058e4 <rshift+0x98>
 8005878:	1a9b      	subs	r3, r3, r2
 800587a:	009b      	lsls	r3, r3, #2
 800587c:	1eea      	subs	r2, r5, #3
 800587e:	4296      	cmp	r6, r2
 8005880:	bf38      	it	cc
 8005882:	2300      	movcc	r3, #0
 8005884:	4423      	add	r3, r4
 8005886:	e015      	b.n	80058b4 <rshift+0x68>
 8005888:	46a1      	mov	r9, r4
 800588a:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800588e:	f1c1 0820 	rsb	r8, r1, #32
 8005892:	40cf      	lsrs	r7, r1
 8005894:	f105 0e04 	add.w	lr, r5, #4
 8005898:	4576      	cmp	r6, lr
 800589a:	46f4      	mov	ip, lr
 800589c:	d816      	bhi.n	80058cc <rshift+0x80>
 800589e:	1a9a      	subs	r2, r3, r2
 80058a0:	0092      	lsls	r2, r2, #2
 80058a2:	3a04      	subs	r2, #4
 80058a4:	3501      	adds	r5, #1
 80058a6:	42ae      	cmp	r6, r5
 80058a8:	bf38      	it	cc
 80058aa:	2200      	movcc	r2, #0
 80058ac:	18a3      	adds	r3, r4, r2
 80058ae:	50a7      	str	r7, [r4, r2]
 80058b0:	b107      	cbz	r7, 80058b4 <rshift+0x68>
 80058b2:	3304      	adds	r3, #4
 80058b4:	42a3      	cmp	r3, r4
 80058b6:	eba3 0204 	sub.w	r2, r3, r4
 80058ba:	bf08      	it	eq
 80058bc:	2300      	moveq	r3, #0
 80058be:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80058c2:	6102      	str	r2, [r0, #16]
 80058c4:	bf08      	it	eq
 80058c6:	6143      	streq	r3, [r0, #20]
 80058c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80058cc:	f8dc c000 	ldr.w	ip, [ip]
 80058d0:	fa0c fc08 	lsl.w	ip, ip, r8
 80058d4:	ea4c 0707 	orr.w	r7, ip, r7
 80058d8:	f849 7b04 	str.w	r7, [r9], #4
 80058dc:	f85e 7b04 	ldr.w	r7, [lr], #4
 80058e0:	40cf      	lsrs	r7, r1
 80058e2:	e7d9      	b.n	8005898 <rshift+0x4c>
 80058e4:	f851 cb04 	ldr.w	ip, [r1], #4
 80058e8:	f847 cf04 	str.w	ip, [r7, #4]!
 80058ec:	e7c2      	b.n	8005874 <rshift+0x28>
 80058ee:	4623      	mov	r3, r4
 80058f0:	e7e0      	b.n	80058b4 <rshift+0x68>

080058f2 <__hexdig_fun>:
 80058f2:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80058f6:	2b09      	cmp	r3, #9
 80058f8:	d802      	bhi.n	8005900 <__hexdig_fun+0xe>
 80058fa:	3820      	subs	r0, #32
 80058fc:	b2c0      	uxtb	r0, r0
 80058fe:	4770      	bx	lr
 8005900:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8005904:	2b05      	cmp	r3, #5
 8005906:	d801      	bhi.n	800590c <__hexdig_fun+0x1a>
 8005908:	3847      	subs	r0, #71	; 0x47
 800590a:	e7f7      	b.n	80058fc <__hexdig_fun+0xa>
 800590c:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8005910:	2b05      	cmp	r3, #5
 8005912:	d801      	bhi.n	8005918 <__hexdig_fun+0x26>
 8005914:	3827      	subs	r0, #39	; 0x27
 8005916:	e7f1      	b.n	80058fc <__hexdig_fun+0xa>
 8005918:	2000      	movs	r0, #0
 800591a:	4770      	bx	lr

0800591c <__gethex>:
 800591c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005920:	4681      	mov	r9, r0
 8005922:	468a      	mov	sl, r1
 8005924:	4617      	mov	r7, r2
 8005926:	680a      	ldr	r2, [r1, #0]
 8005928:	b085      	sub	sp, #20
 800592a:	f102 0b02 	add.w	fp, r2, #2
 800592e:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8005932:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8005936:	9302      	str	r3, [sp, #8]
 8005938:	32fe      	adds	r2, #254	; 0xfe
 800593a:	eb02 030b 	add.w	r3, r2, fp
 800593e:	46d8      	mov	r8, fp
 8005940:	f81b 0b01 	ldrb.w	r0, [fp], #1
 8005944:	9301      	str	r3, [sp, #4]
 8005946:	2830      	cmp	r0, #48	; 0x30
 8005948:	d0f7      	beq.n	800593a <__gethex+0x1e>
 800594a:	f7ff ffd2 	bl	80058f2 <__hexdig_fun>
 800594e:	4604      	mov	r4, r0
 8005950:	2800      	cmp	r0, #0
 8005952:	d138      	bne.n	80059c6 <__gethex+0xaa>
 8005954:	2201      	movs	r2, #1
 8005956:	4640      	mov	r0, r8
 8005958:	49a7      	ldr	r1, [pc, #668]	; (8005bf8 <__gethex+0x2dc>)
 800595a:	f7ff ff0f 	bl	800577c <strncmp>
 800595e:	4606      	mov	r6, r0
 8005960:	2800      	cmp	r0, #0
 8005962:	d169      	bne.n	8005a38 <__gethex+0x11c>
 8005964:	f898 0001 	ldrb.w	r0, [r8, #1]
 8005968:	465d      	mov	r5, fp
 800596a:	f7ff ffc2 	bl	80058f2 <__hexdig_fun>
 800596e:	2800      	cmp	r0, #0
 8005970:	d064      	beq.n	8005a3c <__gethex+0x120>
 8005972:	465a      	mov	r2, fp
 8005974:	7810      	ldrb	r0, [r2, #0]
 8005976:	4690      	mov	r8, r2
 8005978:	2830      	cmp	r0, #48	; 0x30
 800597a:	f102 0201 	add.w	r2, r2, #1
 800597e:	d0f9      	beq.n	8005974 <__gethex+0x58>
 8005980:	f7ff ffb7 	bl	80058f2 <__hexdig_fun>
 8005984:	2301      	movs	r3, #1
 8005986:	fab0 f480 	clz	r4, r0
 800598a:	465e      	mov	r6, fp
 800598c:	0964      	lsrs	r4, r4, #5
 800598e:	9301      	str	r3, [sp, #4]
 8005990:	4642      	mov	r2, r8
 8005992:	4615      	mov	r5, r2
 8005994:	7828      	ldrb	r0, [r5, #0]
 8005996:	3201      	adds	r2, #1
 8005998:	f7ff ffab 	bl	80058f2 <__hexdig_fun>
 800599c:	2800      	cmp	r0, #0
 800599e:	d1f8      	bne.n	8005992 <__gethex+0x76>
 80059a0:	2201      	movs	r2, #1
 80059a2:	4628      	mov	r0, r5
 80059a4:	4994      	ldr	r1, [pc, #592]	; (8005bf8 <__gethex+0x2dc>)
 80059a6:	f7ff fee9 	bl	800577c <strncmp>
 80059aa:	b978      	cbnz	r0, 80059cc <__gethex+0xb0>
 80059ac:	b946      	cbnz	r6, 80059c0 <__gethex+0xa4>
 80059ae:	1c6e      	adds	r6, r5, #1
 80059b0:	4632      	mov	r2, r6
 80059b2:	4615      	mov	r5, r2
 80059b4:	7828      	ldrb	r0, [r5, #0]
 80059b6:	3201      	adds	r2, #1
 80059b8:	f7ff ff9b 	bl	80058f2 <__hexdig_fun>
 80059bc:	2800      	cmp	r0, #0
 80059be:	d1f8      	bne.n	80059b2 <__gethex+0x96>
 80059c0:	1b73      	subs	r3, r6, r5
 80059c2:	009e      	lsls	r6, r3, #2
 80059c4:	e004      	b.n	80059d0 <__gethex+0xb4>
 80059c6:	2400      	movs	r4, #0
 80059c8:	4626      	mov	r6, r4
 80059ca:	e7e1      	b.n	8005990 <__gethex+0x74>
 80059cc:	2e00      	cmp	r6, #0
 80059ce:	d1f7      	bne.n	80059c0 <__gethex+0xa4>
 80059d0:	782b      	ldrb	r3, [r5, #0]
 80059d2:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80059d6:	2b50      	cmp	r3, #80	; 0x50
 80059d8:	d13d      	bne.n	8005a56 <__gethex+0x13a>
 80059da:	786b      	ldrb	r3, [r5, #1]
 80059dc:	2b2b      	cmp	r3, #43	; 0x2b
 80059de:	d02f      	beq.n	8005a40 <__gethex+0x124>
 80059e0:	2b2d      	cmp	r3, #45	; 0x2d
 80059e2:	d031      	beq.n	8005a48 <__gethex+0x12c>
 80059e4:	f04f 0b00 	mov.w	fp, #0
 80059e8:	1c69      	adds	r1, r5, #1
 80059ea:	7808      	ldrb	r0, [r1, #0]
 80059ec:	f7ff ff81 	bl	80058f2 <__hexdig_fun>
 80059f0:	1e42      	subs	r2, r0, #1
 80059f2:	b2d2      	uxtb	r2, r2
 80059f4:	2a18      	cmp	r2, #24
 80059f6:	d82e      	bhi.n	8005a56 <__gethex+0x13a>
 80059f8:	f1a0 0210 	sub.w	r2, r0, #16
 80059fc:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8005a00:	f7ff ff77 	bl	80058f2 <__hexdig_fun>
 8005a04:	f100 3cff 	add.w	ip, r0, #4294967295
 8005a08:	fa5f fc8c 	uxtb.w	ip, ip
 8005a0c:	f1bc 0f18 	cmp.w	ip, #24
 8005a10:	d91d      	bls.n	8005a4e <__gethex+0x132>
 8005a12:	f1bb 0f00 	cmp.w	fp, #0
 8005a16:	d000      	beq.n	8005a1a <__gethex+0xfe>
 8005a18:	4252      	negs	r2, r2
 8005a1a:	4416      	add	r6, r2
 8005a1c:	f8ca 1000 	str.w	r1, [sl]
 8005a20:	b1dc      	cbz	r4, 8005a5a <__gethex+0x13e>
 8005a22:	9b01      	ldr	r3, [sp, #4]
 8005a24:	2b00      	cmp	r3, #0
 8005a26:	bf14      	ite	ne
 8005a28:	f04f 0800 	movne.w	r8, #0
 8005a2c:	f04f 0806 	moveq.w	r8, #6
 8005a30:	4640      	mov	r0, r8
 8005a32:	b005      	add	sp, #20
 8005a34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a38:	4645      	mov	r5, r8
 8005a3a:	4626      	mov	r6, r4
 8005a3c:	2401      	movs	r4, #1
 8005a3e:	e7c7      	b.n	80059d0 <__gethex+0xb4>
 8005a40:	f04f 0b00 	mov.w	fp, #0
 8005a44:	1ca9      	adds	r1, r5, #2
 8005a46:	e7d0      	b.n	80059ea <__gethex+0xce>
 8005a48:	f04f 0b01 	mov.w	fp, #1
 8005a4c:	e7fa      	b.n	8005a44 <__gethex+0x128>
 8005a4e:	230a      	movs	r3, #10
 8005a50:	fb03 0002 	mla	r0, r3, r2, r0
 8005a54:	e7d0      	b.n	80059f8 <__gethex+0xdc>
 8005a56:	4629      	mov	r1, r5
 8005a58:	e7e0      	b.n	8005a1c <__gethex+0x100>
 8005a5a:	4621      	mov	r1, r4
 8005a5c:	eba5 0308 	sub.w	r3, r5, r8
 8005a60:	3b01      	subs	r3, #1
 8005a62:	2b07      	cmp	r3, #7
 8005a64:	dc0a      	bgt.n	8005a7c <__gethex+0x160>
 8005a66:	4648      	mov	r0, r9
 8005a68:	f7fe f932 	bl	8003cd0 <_Balloc>
 8005a6c:	4604      	mov	r4, r0
 8005a6e:	b940      	cbnz	r0, 8005a82 <__gethex+0x166>
 8005a70:	4602      	mov	r2, r0
 8005a72:	21e4      	movs	r1, #228	; 0xe4
 8005a74:	4b61      	ldr	r3, [pc, #388]	; (8005bfc <__gethex+0x2e0>)
 8005a76:	4862      	ldr	r0, [pc, #392]	; (8005c00 <__gethex+0x2e4>)
 8005a78:	f7ff feb6 	bl	80057e8 <__assert_func>
 8005a7c:	3101      	adds	r1, #1
 8005a7e:	105b      	asrs	r3, r3, #1
 8005a80:	e7ef      	b.n	8005a62 <__gethex+0x146>
 8005a82:	2300      	movs	r3, #0
 8005a84:	469b      	mov	fp, r3
 8005a86:	f100 0a14 	add.w	sl, r0, #20
 8005a8a:	f8cd a004 	str.w	sl, [sp, #4]
 8005a8e:	45a8      	cmp	r8, r5
 8005a90:	d344      	bcc.n	8005b1c <__gethex+0x200>
 8005a92:	f8dd 8004 	ldr.w	r8, [sp, #4]
 8005a96:	4658      	mov	r0, fp
 8005a98:	f848 bb04 	str.w	fp, [r8], #4
 8005a9c:	eba8 080a 	sub.w	r8, r8, sl
 8005aa0:	ea4f 02a8 	mov.w	r2, r8, asr #2
 8005aa4:	6122      	str	r2, [r4, #16]
 8005aa6:	ea4f 1842 	mov.w	r8, r2, lsl #5
 8005aaa:	f7fe fa03 	bl	8003eb4 <__hi0bits>
 8005aae:	683d      	ldr	r5, [r7, #0]
 8005ab0:	eba8 0800 	sub.w	r8, r8, r0
 8005ab4:	45a8      	cmp	r8, r5
 8005ab6:	dd59      	ble.n	8005b6c <__gethex+0x250>
 8005ab8:	eba8 0805 	sub.w	r8, r8, r5
 8005abc:	4641      	mov	r1, r8
 8005abe:	4620      	mov	r0, r4
 8005ac0:	f7fe fd81 	bl	80045c6 <__any_on>
 8005ac4:	4683      	mov	fp, r0
 8005ac6:	b1b8      	cbz	r0, 8005af8 <__gethex+0x1dc>
 8005ac8:	f04f 0b01 	mov.w	fp, #1
 8005acc:	f108 33ff 	add.w	r3, r8, #4294967295
 8005ad0:	1159      	asrs	r1, r3, #5
 8005ad2:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 8005ad6:	f003 021f 	and.w	r2, r3, #31
 8005ada:	fa0b f202 	lsl.w	r2, fp, r2
 8005ade:	420a      	tst	r2, r1
 8005ae0:	d00a      	beq.n	8005af8 <__gethex+0x1dc>
 8005ae2:	455b      	cmp	r3, fp
 8005ae4:	dd06      	ble.n	8005af4 <__gethex+0x1d8>
 8005ae6:	4620      	mov	r0, r4
 8005ae8:	f1a8 0102 	sub.w	r1, r8, #2
 8005aec:	f7fe fd6b 	bl	80045c6 <__any_on>
 8005af0:	2800      	cmp	r0, #0
 8005af2:	d138      	bne.n	8005b66 <__gethex+0x24a>
 8005af4:	f04f 0b02 	mov.w	fp, #2
 8005af8:	4641      	mov	r1, r8
 8005afa:	4620      	mov	r0, r4
 8005afc:	f7ff fea6 	bl	800584c <rshift>
 8005b00:	4446      	add	r6, r8
 8005b02:	68bb      	ldr	r3, [r7, #8]
 8005b04:	42b3      	cmp	r3, r6
 8005b06:	da41      	bge.n	8005b8c <__gethex+0x270>
 8005b08:	4621      	mov	r1, r4
 8005b0a:	4648      	mov	r0, r9
 8005b0c:	f7fe f920 	bl	8003d50 <_Bfree>
 8005b10:	2300      	movs	r3, #0
 8005b12:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005b14:	f04f 08a3 	mov.w	r8, #163	; 0xa3
 8005b18:	6013      	str	r3, [r2, #0]
 8005b1a:	e789      	b.n	8005a30 <__gethex+0x114>
 8005b1c:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
 8005b20:	2a2e      	cmp	r2, #46	; 0x2e
 8005b22:	d014      	beq.n	8005b4e <__gethex+0x232>
 8005b24:	2b20      	cmp	r3, #32
 8005b26:	d106      	bne.n	8005b36 <__gethex+0x21a>
 8005b28:	9b01      	ldr	r3, [sp, #4]
 8005b2a:	f843 bb04 	str.w	fp, [r3], #4
 8005b2e:	f04f 0b00 	mov.w	fp, #0
 8005b32:	9301      	str	r3, [sp, #4]
 8005b34:	465b      	mov	r3, fp
 8005b36:	7828      	ldrb	r0, [r5, #0]
 8005b38:	9303      	str	r3, [sp, #12]
 8005b3a:	f7ff feda 	bl	80058f2 <__hexdig_fun>
 8005b3e:	9b03      	ldr	r3, [sp, #12]
 8005b40:	f000 000f 	and.w	r0, r0, #15
 8005b44:	4098      	lsls	r0, r3
 8005b46:	ea4b 0b00 	orr.w	fp, fp, r0
 8005b4a:	3304      	adds	r3, #4
 8005b4c:	e79f      	b.n	8005a8e <__gethex+0x172>
 8005b4e:	45a8      	cmp	r8, r5
 8005b50:	d8e8      	bhi.n	8005b24 <__gethex+0x208>
 8005b52:	2201      	movs	r2, #1
 8005b54:	4628      	mov	r0, r5
 8005b56:	4928      	ldr	r1, [pc, #160]	; (8005bf8 <__gethex+0x2dc>)
 8005b58:	9303      	str	r3, [sp, #12]
 8005b5a:	f7ff fe0f 	bl	800577c <strncmp>
 8005b5e:	9b03      	ldr	r3, [sp, #12]
 8005b60:	2800      	cmp	r0, #0
 8005b62:	d1df      	bne.n	8005b24 <__gethex+0x208>
 8005b64:	e793      	b.n	8005a8e <__gethex+0x172>
 8005b66:	f04f 0b03 	mov.w	fp, #3
 8005b6a:	e7c5      	b.n	8005af8 <__gethex+0x1dc>
 8005b6c:	da0b      	bge.n	8005b86 <__gethex+0x26a>
 8005b6e:	eba5 0808 	sub.w	r8, r5, r8
 8005b72:	4621      	mov	r1, r4
 8005b74:	4642      	mov	r2, r8
 8005b76:	4648      	mov	r0, r9
 8005b78:	f7fe fb02 	bl	8004180 <__lshift>
 8005b7c:	4604      	mov	r4, r0
 8005b7e:	eba6 0608 	sub.w	r6, r6, r8
 8005b82:	f100 0a14 	add.w	sl, r0, #20
 8005b86:	f04f 0b00 	mov.w	fp, #0
 8005b8a:	e7ba      	b.n	8005b02 <__gethex+0x1e6>
 8005b8c:	687b      	ldr	r3, [r7, #4]
 8005b8e:	42b3      	cmp	r3, r6
 8005b90:	dd74      	ble.n	8005c7c <__gethex+0x360>
 8005b92:	1b9e      	subs	r6, r3, r6
 8005b94:	42b5      	cmp	r5, r6
 8005b96:	dc35      	bgt.n	8005c04 <__gethex+0x2e8>
 8005b98:	68fb      	ldr	r3, [r7, #12]
 8005b9a:	2b02      	cmp	r3, #2
 8005b9c:	d023      	beq.n	8005be6 <__gethex+0x2ca>
 8005b9e:	2b03      	cmp	r3, #3
 8005ba0:	d025      	beq.n	8005bee <__gethex+0x2d2>
 8005ba2:	2b01      	cmp	r3, #1
 8005ba4:	d115      	bne.n	8005bd2 <__gethex+0x2b6>
 8005ba6:	42b5      	cmp	r5, r6
 8005ba8:	d113      	bne.n	8005bd2 <__gethex+0x2b6>
 8005baa:	2d01      	cmp	r5, #1
 8005bac:	d10b      	bne.n	8005bc6 <__gethex+0x2aa>
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	9a02      	ldr	r2, [sp, #8]
 8005bb2:	f04f 0862 	mov.w	r8, #98	; 0x62
 8005bb6:	6013      	str	r3, [r2, #0]
 8005bb8:	2301      	movs	r3, #1
 8005bba:	6123      	str	r3, [r4, #16]
 8005bbc:	f8ca 3000 	str.w	r3, [sl]
 8005bc0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005bc2:	601c      	str	r4, [r3, #0]
 8005bc4:	e734      	b.n	8005a30 <__gethex+0x114>
 8005bc6:	4620      	mov	r0, r4
 8005bc8:	1e69      	subs	r1, r5, #1
 8005bca:	f7fe fcfc 	bl	80045c6 <__any_on>
 8005bce:	2800      	cmp	r0, #0
 8005bd0:	d1ed      	bne.n	8005bae <__gethex+0x292>
 8005bd2:	4621      	mov	r1, r4
 8005bd4:	4648      	mov	r0, r9
 8005bd6:	f7fe f8bb 	bl	8003d50 <_Bfree>
 8005bda:	2300      	movs	r3, #0
 8005bdc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005bde:	f04f 0850 	mov.w	r8, #80	; 0x50
 8005be2:	6013      	str	r3, [r2, #0]
 8005be4:	e724      	b.n	8005a30 <__gethex+0x114>
 8005be6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005be8:	2b00      	cmp	r3, #0
 8005bea:	d1f2      	bne.n	8005bd2 <__gethex+0x2b6>
 8005bec:	e7df      	b.n	8005bae <__gethex+0x292>
 8005bee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005bf0:	2b00      	cmp	r3, #0
 8005bf2:	d1dc      	bne.n	8005bae <__gethex+0x292>
 8005bf4:	e7ed      	b.n	8005bd2 <__gethex+0x2b6>
 8005bf6:	bf00      	nop
 8005bf8:	0800677c 	.word	0x0800677c
 8005bfc:	0800660f 	.word	0x0800660f
 8005c00:	08006926 	.word	0x08006926
 8005c04:	f106 38ff 	add.w	r8, r6, #4294967295
 8005c08:	f1bb 0f00 	cmp.w	fp, #0
 8005c0c:	d133      	bne.n	8005c76 <__gethex+0x35a>
 8005c0e:	f1b8 0f00 	cmp.w	r8, #0
 8005c12:	d004      	beq.n	8005c1e <__gethex+0x302>
 8005c14:	4641      	mov	r1, r8
 8005c16:	4620      	mov	r0, r4
 8005c18:	f7fe fcd5 	bl	80045c6 <__any_on>
 8005c1c:	4683      	mov	fp, r0
 8005c1e:	2301      	movs	r3, #1
 8005c20:	ea4f 1268 	mov.w	r2, r8, asr #5
 8005c24:	f008 081f 	and.w	r8, r8, #31
 8005c28:	fa03 f308 	lsl.w	r3, r3, r8
 8005c2c:	f04f 0802 	mov.w	r8, #2
 8005c30:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8005c34:	4631      	mov	r1, r6
 8005c36:	4213      	tst	r3, r2
 8005c38:	4620      	mov	r0, r4
 8005c3a:	bf18      	it	ne
 8005c3c:	f04b 0b02 	orrne.w	fp, fp, #2
 8005c40:	1bad      	subs	r5, r5, r6
 8005c42:	f7ff fe03 	bl	800584c <rshift>
 8005c46:	687e      	ldr	r6, [r7, #4]
 8005c48:	f1bb 0f00 	cmp.w	fp, #0
 8005c4c:	d04a      	beq.n	8005ce4 <__gethex+0x3c8>
 8005c4e:	68fb      	ldr	r3, [r7, #12]
 8005c50:	2b02      	cmp	r3, #2
 8005c52:	d016      	beq.n	8005c82 <__gethex+0x366>
 8005c54:	2b03      	cmp	r3, #3
 8005c56:	d018      	beq.n	8005c8a <__gethex+0x36e>
 8005c58:	2b01      	cmp	r3, #1
 8005c5a:	d109      	bne.n	8005c70 <__gethex+0x354>
 8005c5c:	f01b 0f02 	tst.w	fp, #2
 8005c60:	d006      	beq.n	8005c70 <__gethex+0x354>
 8005c62:	f8da 3000 	ldr.w	r3, [sl]
 8005c66:	ea4b 0b03 	orr.w	fp, fp, r3
 8005c6a:	f01b 0f01 	tst.w	fp, #1
 8005c6e:	d10f      	bne.n	8005c90 <__gethex+0x374>
 8005c70:	f048 0810 	orr.w	r8, r8, #16
 8005c74:	e036      	b.n	8005ce4 <__gethex+0x3c8>
 8005c76:	f04f 0b01 	mov.w	fp, #1
 8005c7a:	e7d0      	b.n	8005c1e <__gethex+0x302>
 8005c7c:	f04f 0801 	mov.w	r8, #1
 8005c80:	e7e2      	b.n	8005c48 <__gethex+0x32c>
 8005c82:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005c84:	f1c3 0301 	rsb	r3, r3, #1
 8005c88:	930f      	str	r3, [sp, #60]	; 0x3c
 8005c8a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005c8c:	2b00      	cmp	r3, #0
 8005c8e:	d0ef      	beq.n	8005c70 <__gethex+0x354>
 8005c90:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8005c94:	f104 0214 	add.w	r2, r4, #20
 8005c98:	ea4f 038b 	mov.w	r3, fp, lsl #2
 8005c9c:	9301      	str	r3, [sp, #4]
 8005c9e:	2300      	movs	r3, #0
 8005ca0:	eb02 008b 	add.w	r0, r2, fp, lsl #2
 8005ca4:	4694      	mov	ip, r2
 8005ca6:	f852 1b04 	ldr.w	r1, [r2], #4
 8005caa:	f1b1 3fff 	cmp.w	r1, #4294967295
 8005cae:	d01e      	beq.n	8005cee <__gethex+0x3d2>
 8005cb0:	3101      	adds	r1, #1
 8005cb2:	f8cc 1000 	str.w	r1, [ip]
 8005cb6:	f1b8 0f02 	cmp.w	r8, #2
 8005cba:	f104 0214 	add.w	r2, r4, #20
 8005cbe:	d13d      	bne.n	8005d3c <__gethex+0x420>
 8005cc0:	683b      	ldr	r3, [r7, #0]
 8005cc2:	3b01      	subs	r3, #1
 8005cc4:	42ab      	cmp	r3, r5
 8005cc6:	d10b      	bne.n	8005ce0 <__gethex+0x3c4>
 8005cc8:	2301      	movs	r3, #1
 8005cca:	1169      	asrs	r1, r5, #5
 8005ccc:	f005 051f 	and.w	r5, r5, #31
 8005cd0:	fa03 f505 	lsl.w	r5, r3, r5
 8005cd4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8005cd8:	421d      	tst	r5, r3
 8005cda:	bf18      	it	ne
 8005cdc:	f04f 0801 	movne.w	r8, #1
 8005ce0:	f048 0820 	orr.w	r8, r8, #32
 8005ce4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005ce6:	601c      	str	r4, [r3, #0]
 8005ce8:	9b02      	ldr	r3, [sp, #8]
 8005cea:	601e      	str	r6, [r3, #0]
 8005cec:	e6a0      	b.n	8005a30 <__gethex+0x114>
 8005cee:	4290      	cmp	r0, r2
 8005cf0:	f842 3c04 	str.w	r3, [r2, #-4]
 8005cf4:	d8d6      	bhi.n	8005ca4 <__gethex+0x388>
 8005cf6:	68a2      	ldr	r2, [r4, #8]
 8005cf8:	4593      	cmp	fp, r2
 8005cfa:	db17      	blt.n	8005d2c <__gethex+0x410>
 8005cfc:	6861      	ldr	r1, [r4, #4]
 8005cfe:	4648      	mov	r0, r9
 8005d00:	3101      	adds	r1, #1
 8005d02:	f7fd ffe5 	bl	8003cd0 <_Balloc>
 8005d06:	4682      	mov	sl, r0
 8005d08:	b918      	cbnz	r0, 8005d12 <__gethex+0x3f6>
 8005d0a:	4602      	mov	r2, r0
 8005d0c:	2184      	movs	r1, #132	; 0x84
 8005d0e:	4b1a      	ldr	r3, [pc, #104]	; (8005d78 <__gethex+0x45c>)
 8005d10:	e6b1      	b.n	8005a76 <__gethex+0x15a>
 8005d12:	6922      	ldr	r2, [r4, #16]
 8005d14:	f104 010c 	add.w	r1, r4, #12
 8005d18:	3202      	adds	r2, #2
 8005d1a:	0092      	lsls	r2, r2, #2
 8005d1c:	300c      	adds	r0, #12
 8005d1e:	f7ff fd4f 	bl	80057c0 <memcpy>
 8005d22:	4621      	mov	r1, r4
 8005d24:	4648      	mov	r0, r9
 8005d26:	f7fe f813 	bl	8003d50 <_Bfree>
 8005d2a:	4654      	mov	r4, sl
 8005d2c:	6922      	ldr	r2, [r4, #16]
 8005d2e:	1c51      	adds	r1, r2, #1
 8005d30:	6121      	str	r1, [r4, #16]
 8005d32:	2101      	movs	r1, #1
 8005d34:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8005d38:	6151      	str	r1, [r2, #20]
 8005d3a:	e7bc      	b.n	8005cb6 <__gethex+0x39a>
 8005d3c:	6921      	ldr	r1, [r4, #16]
 8005d3e:	4559      	cmp	r1, fp
 8005d40:	dd0b      	ble.n	8005d5a <__gethex+0x43e>
 8005d42:	2101      	movs	r1, #1
 8005d44:	4620      	mov	r0, r4
 8005d46:	f7ff fd81 	bl	800584c <rshift>
 8005d4a:	68bb      	ldr	r3, [r7, #8]
 8005d4c:	3601      	adds	r6, #1
 8005d4e:	42b3      	cmp	r3, r6
 8005d50:	f6ff aeda 	blt.w	8005b08 <__gethex+0x1ec>
 8005d54:	f04f 0801 	mov.w	r8, #1
 8005d58:	e7c2      	b.n	8005ce0 <__gethex+0x3c4>
 8005d5a:	f015 051f 	ands.w	r5, r5, #31
 8005d5e:	d0f9      	beq.n	8005d54 <__gethex+0x438>
 8005d60:	9b01      	ldr	r3, [sp, #4]
 8005d62:	f1c5 0520 	rsb	r5, r5, #32
 8005d66:	441a      	add	r2, r3
 8005d68:	f852 0c04 	ldr.w	r0, [r2, #-4]
 8005d6c:	f7fe f8a2 	bl	8003eb4 <__hi0bits>
 8005d70:	42a8      	cmp	r0, r5
 8005d72:	dbe6      	blt.n	8005d42 <__gethex+0x426>
 8005d74:	e7ee      	b.n	8005d54 <__gethex+0x438>
 8005d76:	bf00      	nop
 8005d78:	0800660f 	.word	0x0800660f

08005d7c <L_shift>:
 8005d7c:	f1c2 0208 	rsb	r2, r2, #8
 8005d80:	0092      	lsls	r2, r2, #2
 8005d82:	b570      	push	{r4, r5, r6, lr}
 8005d84:	f1c2 0620 	rsb	r6, r2, #32
 8005d88:	6843      	ldr	r3, [r0, #4]
 8005d8a:	6804      	ldr	r4, [r0, #0]
 8005d8c:	fa03 f506 	lsl.w	r5, r3, r6
 8005d90:	432c      	orrs	r4, r5
 8005d92:	40d3      	lsrs	r3, r2
 8005d94:	6004      	str	r4, [r0, #0]
 8005d96:	f840 3f04 	str.w	r3, [r0, #4]!
 8005d9a:	4288      	cmp	r0, r1
 8005d9c:	d3f4      	bcc.n	8005d88 <L_shift+0xc>
 8005d9e:	bd70      	pop	{r4, r5, r6, pc}

08005da0 <__match>:
 8005da0:	b530      	push	{r4, r5, lr}
 8005da2:	6803      	ldr	r3, [r0, #0]
 8005da4:	3301      	adds	r3, #1
 8005da6:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005daa:	b914      	cbnz	r4, 8005db2 <__match+0x12>
 8005dac:	6003      	str	r3, [r0, #0]
 8005dae:	2001      	movs	r0, #1
 8005db0:	bd30      	pop	{r4, r5, pc}
 8005db2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005db6:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8005dba:	2d19      	cmp	r5, #25
 8005dbc:	bf98      	it	ls
 8005dbe:	3220      	addls	r2, #32
 8005dc0:	42a2      	cmp	r2, r4
 8005dc2:	d0f0      	beq.n	8005da6 <__match+0x6>
 8005dc4:	2000      	movs	r0, #0
 8005dc6:	e7f3      	b.n	8005db0 <__match+0x10>

08005dc8 <__hexnan>:
 8005dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005dcc:	2500      	movs	r5, #0
 8005dce:	680b      	ldr	r3, [r1, #0]
 8005dd0:	4682      	mov	sl, r0
 8005dd2:	115e      	asrs	r6, r3, #5
 8005dd4:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8005dd8:	f013 031f 	ands.w	r3, r3, #31
 8005ddc:	bf18      	it	ne
 8005dde:	3604      	addne	r6, #4
 8005de0:	1f37      	subs	r7, r6, #4
 8005de2:	4690      	mov	r8, r2
 8005de4:	46b9      	mov	r9, r7
 8005de6:	463c      	mov	r4, r7
 8005de8:	46ab      	mov	fp, r5
 8005dea:	b087      	sub	sp, #28
 8005dec:	6801      	ldr	r1, [r0, #0]
 8005dee:	9301      	str	r3, [sp, #4]
 8005df0:	f846 5c04 	str.w	r5, [r6, #-4]
 8005df4:	9502      	str	r5, [sp, #8]
 8005df6:	784a      	ldrb	r2, [r1, #1]
 8005df8:	1c4b      	adds	r3, r1, #1
 8005dfa:	9303      	str	r3, [sp, #12]
 8005dfc:	b342      	cbz	r2, 8005e50 <__hexnan+0x88>
 8005dfe:	4610      	mov	r0, r2
 8005e00:	9105      	str	r1, [sp, #20]
 8005e02:	9204      	str	r2, [sp, #16]
 8005e04:	f7ff fd75 	bl	80058f2 <__hexdig_fun>
 8005e08:	2800      	cmp	r0, #0
 8005e0a:	d14f      	bne.n	8005eac <__hexnan+0xe4>
 8005e0c:	9a04      	ldr	r2, [sp, #16]
 8005e0e:	9905      	ldr	r1, [sp, #20]
 8005e10:	2a20      	cmp	r2, #32
 8005e12:	d818      	bhi.n	8005e46 <__hexnan+0x7e>
 8005e14:	9b02      	ldr	r3, [sp, #8]
 8005e16:	459b      	cmp	fp, r3
 8005e18:	dd13      	ble.n	8005e42 <__hexnan+0x7a>
 8005e1a:	454c      	cmp	r4, r9
 8005e1c:	d206      	bcs.n	8005e2c <__hexnan+0x64>
 8005e1e:	2d07      	cmp	r5, #7
 8005e20:	dc04      	bgt.n	8005e2c <__hexnan+0x64>
 8005e22:	462a      	mov	r2, r5
 8005e24:	4649      	mov	r1, r9
 8005e26:	4620      	mov	r0, r4
 8005e28:	f7ff ffa8 	bl	8005d7c <L_shift>
 8005e2c:	4544      	cmp	r4, r8
 8005e2e:	d950      	bls.n	8005ed2 <__hexnan+0x10a>
 8005e30:	2300      	movs	r3, #0
 8005e32:	f1a4 0904 	sub.w	r9, r4, #4
 8005e36:	f844 3c04 	str.w	r3, [r4, #-4]
 8005e3a:	461d      	mov	r5, r3
 8005e3c:	464c      	mov	r4, r9
 8005e3e:	f8cd b008 	str.w	fp, [sp, #8]
 8005e42:	9903      	ldr	r1, [sp, #12]
 8005e44:	e7d7      	b.n	8005df6 <__hexnan+0x2e>
 8005e46:	2a29      	cmp	r2, #41	; 0x29
 8005e48:	d155      	bne.n	8005ef6 <__hexnan+0x12e>
 8005e4a:	3102      	adds	r1, #2
 8005e4c:	f8ca 1000 	str.w	r1, [sl]
 8005e50:	f1bb 0f00 	cmp.w	fp, #0
 8005e54:	d04f      	beq.n	8005ef6 <__hexnan+0x12e>
 8005e56:	454c      	cmp	r4, r9
 8005e58:	d206      	bcs.n	8005e68 <__hexnan+0xa0>
 8005e5a:	2d07      	cmp	r5, #7
 8005e5c:	dc04      	bgt.n	8005e68 <__hexnan+0xa0>
 8005e5e:	462a      	mov	r2, r5
 8005e60:	4649      	mov	r1, r9
 8005e62:	4620      	mov	r0, r4
 8005e64:	f7ff ff8a 	bl	8005d7c <L_shift>
 8005e68:	4544      	cmp	r4, r8
 8005e6a:	d934      	bls.n	8005ed6 <__hexnan+0x10e>
 8005e6c:	4623      	mov	r3, r4
 8005e6e:	f1a8 0204 	sub.w	r2, r8, #4
 8005e72:	f853 1b04 	ldr.w	r1, [r3], #4
 8005e76:	429f      	cmp	r7, r3
 8005e78:	f842 1f04 	str.w	r1, [r2, #4]!
 8005e7c:	d2f9      	bcs.n	8005e72 <__hexnan+0xaa>
 8005e7e:	1b3b      	subs	r3, r7, r4
 8005e80:	f023 0303 	bic.w	r3, r3, #3
 8005e84:	3304      	adds	r3, #4
 8005e86:	3e03      	subs	r6, #3
 8005e88:	3401      	adds	r4, #1
 8005e8a:	42a6      	cmp	r6, r4
 8005e8c:	bf38      	it	cc
 8005e8e:	2304      	movcc	r3, #4
 8005e90:	2200      	movs	r2, #0
 8005e92:	4443      	add	r3, r8
 8005e94:	f843 2b04 	str.w	r2, [r3], #4
 8005e98:	429f      	cmp	r7, r3
 8005e9a:	d2fb      	bcs.n	8005e94 <__hexnan+0xcc>
 8005e9c:	683b      	ldr	r3, [r7, #0]
 8005e9e:	b91b      	cbnz	r3, 8005ea8 <__hexnan+0xe0>
 8005ea0:	4547      	cmp	r7, r8
 8005ea2:	d126      	bne.n	8005ef2 <__hexnan+0x12a>
 8005ea4:	2301      	movs	r3, #1
 8005ea6:	603b      	str	r3, [r7, #0]
 8005ea8:	2005      	movs	r0, #5
 8005eaa:	e025      	b.n	8005ef8 <__hexnan+0x130>
 8005eac:	3501      	adds	r5, #1
 8005eae:	2d08      	cmp	r5, #8
 8005eb0:	f10b 0b01 	add.w	fp, fp, #1
 8005eb4:	dd06      	ble.n	8005ec4 <__hexnan+0xfc>
 8005eb6:	4544      	cmp	r4, r8
 8005eb8:	d9c3      	bls.n	8005e42 <__hexnan+0x7a>
 8005eba:	2300      	movs	r3, #0
 8005ebc:	2501      	movs	r5, #1
 8005ebe:	f844 3c04 	str.w	r3, [r4, #-4]
 8005ec2:	3c04      	subs	r4, #4
 8005ec4:	6822      	ldr	r2, [r4, #0]
 8005ec6:	f000 000f 	and.w	r0, r0, #15
 8005eca:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8005ece:	6020      	str	r0, [r4, #0]
 8005ed0:	e7b7      	b.n	8005e42 <__hexnan+0x7a>
 8005ed2:	2508      	movs	r5, #8
 8005ed4:	e7b5      	b.n	8005e42 <__hexnan+0x7a>
 8005ed6:	9b01      	ldr	r3, [sp, #4]
 8005ed8:	2b00      	cmp	r3, #0
 8005eda:	d0df      	beq.n	8005e9c <__hexnan+0xd4>
 8005edc:	f04f 32ff 	mov.w	r2, #4294967295
 8005ee0:	f1c3 0320 	rsb	r3, r3, #32
 8005ee4:	40da      	lsrs	r2, r3
 8005ee6:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8005eea:	4013      	ands	r3, r2
 8005eec:	f846 3c04 	str.w	r3, [r6, #-4]
 8005ef0:	e7d4      	b.n	8005e9c <__hexnan+0xd4>
 8005ef2:	3f04      	subs	r7, #4
 8005ef4:	e7d2      	b.n	8005e9c <__hexnan+0xd4>
 8005ef6:	2004      	movs	r0, #4
 8005ef8:	b007      	add	sp, #28
 8005efa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005efe <__ascii_mbtowc>:
 8005efe:	b082      	sub	sp, #8
 8005f00:	b901      	cbnz	r1, 8005f04 <__ascii_mbtowc+0x6>
 8005f02:	a901      	add	r1, sp, #4
 8005f04:	b142      	cbz	r2, 8005f18 <__ascii_mbtowc+0x1a>
 8005f06:	b14b      	cbz	r3, 8005f1c <__ascii_mbtowc+0x1e>
 8005f08:	7813      	ldrb	r3, [r2, #0]
 8005f0a:	600b      	str	r3, [r1, #0]
 8005f0c:	7812      	ldrb	r2, [r2, #0]
 8005f0e:	1e10      	subs	r0, r2, #0
 8005f10:	bf18      	it	ne
 8005f12:	2001      	movne	r0, #1
 8005f14:	b002      	add	sp, #8
 8005f16:	4770      	bx	lr
 8005f18:	4610      	mov	r0, r2
 8005f1a:	e7fb      	b.n	8005f14 <__ascii_mbtowc+0x16>
 8005f1c:	f06f 0001 	mvn.w	r0, #1
 8005f20:	e7f8      	b.n	8005f14 <__ascii_mbtowc+0x16>

08005f22 <_realloc_r>:
 8005f22:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005f26:	4680      	mov	r8, r0
 8005f28:	4614      	mov	r4, r2
 8005f2a:	460e      	mov	r6, r1
 8005f2c:	b921      	cbnz	r1, 8005f38 <_realloc_r+0x16>
 8005f2e:	4611      	mov	r1, r2
 8005f30:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005f34:	f7fd be40 	b.w	8003bb8 <_malloc_r>
 8005f38:	b92a      	cbnz	r2, 8005f46 <_realloc_r+0x24>
 8005f3a:	f7fd fdcd 	bl	8003ad8 <_free_r>
 8005f3e:	4625      	mov	r5, r4
 8005f40:	4628      	mov	r0, r5
 8005f42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005f46:	f000 f842 	bl	8005fce <_malloc_usable_size_r>
 8005f4a:	4284      	cmp	r4, r0
 8005f4c:	4607      	mov	r7, r0
 8005f4e:	d802      	bhi.n	8005f56 <_realloc_r+0x34>
 8005f50:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8005f54:	d812      	bhi.n	8005f7c <_realloc_r+0x5a>
 8005f56:	4621      	mov	r1, r4
 8005f58:	4640      	mov	r0, r8
 8005f5a:	f7fd fe2d 	bl	8003bb8 <_malloc_r>
 8005f5e:	4605      	mov	r5, r0
 8005f60:	2800      	cmp	r0, #0
 8005f62:	d0ed      	beq.n	8005f40 <_realloc_r+0x1e>
 8005f64:	42bc      	cmp	r4, r7
 8005f66:	4622      	mov	r2, r4
 8005f68:	4631      	mov	r1, r6
 8005f6a:	bf28      	it	cs
 8005f6c:	463a      	movcs	r2, r7
 8005f6e:	f7ff fc27 	bl	80057c0 <memcpy>
 8005f72:	4631      	mov	r1, r6
 8005f74:	4640      	mov	r0, r8
 8005f76:	f7fd fdaf 	bl	8003ad8 <_free_r>
 8005f7a:	e7e1      	b.n	8005f40 <_realloc_r+0x1e>
 8005f7c:	4635      	mov	r5, r6
 8005f7e:	e7df      	b.n	8005f40 <_realloc_r+0x1e>

08005f80 <__ascii_wctomb>:
 8005f80:	4603      	mov	r3, r0
 8005f82:	4608      	mov	r0, r1
 8005f84:	b141      	cbz	r1, 8005f98 <__ascii_wctomb+0x18>
 8005f86:	2aff      	cmp	r2, #255	; 0xff
 8005f88:	d904      	bls.n	8005f94 <__ascii_wctomb+0x14>
 8005f8a:	228a      	movs	r2, #138	; 0x8a
 8005f8c:	f04f 30ff 	mov.w	r0, #4294967295
 8005f90:	601a      	str	r2, [r3, #0]
 8005f92:	4770      	bx	lr
 8005f94:	2001      	movs	r0, #1
 8005f96:	700a      	strb	r2, [r1, #0]
 8005f98:	4770      	bx	lr
	...

08005f9c <fiprintf>:
 8005f9c:	b40e      	push	{r1, r2, r3}
 8005f9e:	b503      	push	{r0, r1, lr}
 8005fa0:	4601      	mov	r1, r0
 8005fa2:	ab03      	add	r3, sp, #12
 8005fa4:	4805      	ldr	r0, [pc, #20]	; (8005fbc <fiprintf+0x20>)
 8005fa6:	f853 2b04 	ldr.w	r2, [r3], #4
 8005faa:	6800      	ldr	r0, [r0, #0]
 8005fac:	9301      	str	r3, [sp, #4]
 8005fae:	f000 f83d 	bl	800602c <_vfiprintf_r>
 8005fb2:	b002      	add	sp, #8
 8005fb4:	f85d eb04 	ldr.w	lr, [sp], #4
 8005fb8:	b003      	add	sp, #12
 8005fba:	4770      	bx	lr
 8005fbc:	20000064 	.word	0x20000064

08005fc0 <abort>:
 8005fc0:	2006      	movs	r0, #6
 8005fc2:	b508      	push	{r3, lr}
 8005fc4:	f000 fa0a 	bl	80063dc <raise>
 8005fc8:	2001      	movs	r0, #1
 8005fca:	f7fa ff1d 	bl	8000e08 <_exit>

08005fce <_malloc_usable_size_r>:
 8005fce:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005fd2:	1f18      	subs	r0, r3, #4
 8005fd4:	2b00      	cmp	r3, #0
 8005fd6:	bfbc      	itt	lt
 8005fd8:	580b      	ldrlt	r3, [r1, r0]
 8005fda:	18c0      	addlt	r0, r0, r3
 8005fdc:	4770      	bx	lr

08005fde <__sfputc_r>:
 8005fde:	6893      	ldr	r3, [r2, #8]
 8005fe0:	b410      	push	{r4}
 8005fe2:	3b01      	subs	r3, #1
 8005fe4:	2b00      	cmp	r3, #0
 8005fe6:	6093      	str	r3, [r2, #8]
 8005fe8:	da07      	bge.n	8005ffa <__sfputc_r+0x1c>
 8005fea:	6994      	ldr	r4, [r2, #24]
 8005fec:	42a3      	cmp	r3, r4
 8005fee:	db01      	blt.n	8005ff4 <__sfputc_r+0x16>
 8005ff0:	290a      	cmp	r1, #10
 8005ff2:	d102      	bne.n	8005ffa <__sfputc_r+0x1c>
 8005ff4:	bc10      	pop	{r4}
 8005ff6:	f000 b933 	b.w	8006260 <__swbuf_r>
 8005ffa:	6813      	ldr	r3, [r2, #0]
 8005ffc:	1c58      	adds	r0, r3, #1
 8005ffe:	6010      	str	r0, [r2, #0]
 8006000:	7019      	strb	r1, [r3, #0]
 8006002:	4608      	mov	r0, r1
 8006004:	bc10      	pop	{r4}
 8006006:	4770      	bx	lr

08006008 <__sfputs_r>:
 8006008:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800600a:	4606      	mov	r6, r0
 800600c:	460f      	mov	r7, r1
 800600e:	4614      	mov	r4, r2
 8006010:	18d5      	adds	r5, r2, r3
 8006012:	42ac      	cmp	r4, r5
 8006014:	d101      	bne.n	800601a <__sfputs_r+0x12>
 8006016:	2000      	movs	r0, #0
 8006018:	e007      	b.n	800602a <__sfputs_r+0x22>
 800601a:	463a      	mov	r2, r7
 800601c:	4630      	mov	r0, r6
 800601e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006022:	f7ff ffdc 	bl	8005fde <__sfputc_r>
 8006026:	1c43      	adds	r3, r0, #1
 8006028:	d1f3      	bne.n	8006012 <__sfputs_r+0xa>
 800602a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800602c <_vfiprintf_r>:
 800602c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006030:	460d      	mov	r5, r1
 8006032:	4614      	mov	r4, r2
 8006034:	4698      	mov	r8, r3
 8006036:	4606      	mov	r6, r0
 8006038:	b09d      	sub	sp, #116	; 0x74
 800603a:	b118      	cbz	r0, 8006044 <_vfiprintf_r+0x18>
 800603c:	6a03      	ldr	r3, [r0, #32]
 800603e:	b90b      	cbnz	r3, 8006044 <_vfiprintf_r+0x18>
 8006040:	f7fc fdae 	bl	8002ba0 <__sinit>
 8006044:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006046:	07d9      	lsls	r1, r3, #31
 8006048:	d405      	bmi.n	8006056 <_vfiprintf_r+0x2a>
 800604a:	89ab      	ldrh	r3, [r5, #12]
 800604c:	059a      	lsls	r2, r3, #22
 800604e:	d402      	bmi.n	8006056 <_vfiprintf_r+0x2a>
 8006050:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006052:	f7fc febc 	bl	8002dce <__retarget_lock_acquire_recursive>
 8006056:	89ab      	ldrh	r3, [r5, #12]
 8006058:	071b      	lsls	r3, r3, #28
 800605a:	d501      	bpl.n	8006060 <_vfiprintf_r+0x34>
 800605c:	692b      	ldr	r3, [r5, #16]
 800605e:	b99b      	cbnz	r3, 8006088 <_vfiprintf_r+0x5c>
 8006060:	4629      	mov	r1, r5
 8006062:	4630      	mov	r0, r6
 8006064:	f000 f93a 	bl	80062dc <__swsetup_r>
 8006068:	b170      	cbz	r0, 8006088 <_vfiprintf_r+0x5c>
 800606a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800606c:	07dc      	lsls	r4, r3, #31
 800606e:	d504      	bpl.n	800607a <_vfiprintf_r+0x4e>
 8006070:	f04f 30ff 	mov.w	r0, #4294967295
 8006074:	b01d      	add	sp, #116	; 0x74
 8006076:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800607a:	89ab      	ldrh	r3, [r5, #12]
 800607c:	0598      	lsls	r0, r3, #22
 800607e:	d4f7      	bmi.n	8006070 <_vfiprintf_r+0x44>
 8006080:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006082:	f7fc fea5 	bl	8002dd0 <__retarget_lock_release_recursive>
 8006086:	e7f3      	b.n	8006070 <_vfiprintf_r+0x44>
 8006088:	2300      	movs	r3, #0
 800608a:	9309      	str	r3, [sp, #36]	; 0x24
 800608c:	2320      	movs	r3, #32
 800608e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006092:	2330      	movs	r3, #48	; 0x30
 8006094:	f04f 0901 	mov.w	r9, #1
 8006098:	f8cd 800c 	str.w	r8, [sp, #12]
 800609c:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 800624c <_vfiprintf_r+0x220>
 80060a0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80060a4:	4623      	mov	r3, r4
 80060a6:	469a      	mov	sl, r3
 80060a8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80060ac:	b10a      	cbz	r2, 80060b2 <_vfiprintf_r+0x86>
 80060ae:	2a25      	cmp	r2, #37	; 0x25
 80060b0:	d1f9      	bne.n	80060a6 <_vfiprintf_r+0x7a>
 80060b2:	ebba 0b04 	subs.w	fp, sl, r4
 80060b6:	d00b      	beq.n	80060d0 <_vfiprintf_r+0xa4>
 80060b8:	465b      	mov	r3, fp
 80060ba:	4622      	mov	r2, r4
 80060bc:	4629      	mov	r1, r5
 80060be:	4630      	mov	r0, r6
 80060c0:	f7ff ffa2 	bl	8006008 <__sfputs_r>
 80060c4:	3001      	adds	r0, #1
 80060c6:	f000 80a9 	beq.w	800621c <_vfiprintf_r+0x1f0>
 80060ca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80060cc:	445a      	add	r2, fp
 80060ce:	9209      	str	r2, [sp, #36]	; 0x24
 80060d0:	f89a 3000 	ldrb.w	r3, [sl]
 80060d4:	2b00      	cmp	r3, #0
 80060d6:	f000 80a1 	beq.w	800621c <_vfiprintf_r+0x1f0>
 80060da:	2300      	movs	r3, #0
 80060dc:	f04f 32ff 	mov.w	r2, #4294967295
 80060e0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80060e4:	f10a 0a01 	add.w	sl, sl, #1
 80060e8:	9304      	str	r3, [sp, #16]
 80060ea:	9307      	str	r3, [sp, #28]
 80060ec:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80060f0:	931a      	str	r3, [sp, #104]	; 0x68
 80060f2:	4654      	mov	r4, sl
 80060f4:	2205      	movs	r2, #5
 80060f6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80060fa:	4854      	ldr	r0, [pc, #336]	; (800624c <_vfiprintf_r+0x220>)
 80060fc:	f7fc fe69 	bl	8002dd2 <memchr>
 8006100:	9a04      	ldr	r2, [sp, #16]
 8006102:	b9d8      	cbnz	r0, 800613c <_vfiprintf_r+0x110>
 8006104:	06d1      	lsls	r1, r2, #27
 8006106:	bf44      	itt	mi
 8006108:	2320      	movmi	r3, #32
 800610a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800610e:	0713      	lsls	r3, r2, #28
 8006110:	bf44      	itt	mi
 8006112:	232b      	movmi	r3, #43	; 0x2b
 8006114:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006118:	f89a 3000 	ldrb.w	r3, [sl]
 800611c:	2b2a      	cmp	r3, #42	; 0x2a
 800611e:	d015      	beq.n	800614c <_vfiprintf_r+0x120>
 8006120:	4654      	mov	r4, sl
 8006122:	2000      	movs	r0, #0
 8006124:	f04f 0c0a 	mov.w	ip, #10
 8006128:	9a07      	ldr	r2, [sp, #28]
 800612a:	4621      	mov	r1, r4
 800612c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006130:	3b30      	subs	r3, #48	; 0x30
 8006132:	2b09      	cmp	r3, #9
 8006134:	d94d      	bls.n	80061d2 <_vfiprintf_r+0x1a6>
 8006136:	b1b0      	cbz	r0, 8006166 <_vfiprintf_r+0x13a>
 8006138:	9207      	str	r2, [sp, #28]
 800613a:	e014      	b.n	8006166 <_vfiprintf_r+0x13a>
 800613c:	eba0 0308 	sub.w	r3, r0, r8
 8006140:	fa09 f303 	lsl.w	r3, r9, r3
 8006144:	4313      	orrs	r3, r2
 8006146:	46a2      	mov	sl, r4
 8006148:	9304      	str	r3, [sp, #16]
 800614a:	e7d2      	b.n	80060f2 <_vfiprintf_r+0xc6>
 800614c:	9b03      	ldr	r3, [sp, #12]
 800614e:	1d19      	adds	r1, r3, #4
 8006150:	681b      	ldr	r3, [r3, #0]
 8006152:	9103      	str	r1, [sp, #12]
 8006154:	2b00      	cmp	r3, #0
 8006156:	bfbb      	ittet	lt
 8006158:	425b      	neglt	r3, r3
 800615a:	f042 0202 	orrlt.w	r2, r2, #2
 800615e:	9307      	strge	r3, [sp, #28]
 8006160:	9307      	strlt	r3, [sp, #28]
 8006162:	bfb8      	it	lt
 8006164:	9204      	strlt	r2, [sp, #16]
 8006166:	7823      	ldrb	r3, [r4, #0]
 8006168:	2b2e      	cmp	r3, #46	; 0x2e
 800616a:	d10c      	bne.n	8006186 <_vfiprintf_r+0x15a>
 800616c:	7863      	ldrb	r3, [r4, #1]
 800616e:	2b2a      	cmp	r3, #42	; 0x2a
 8006170:	d134      	bne.n	80061dc <_vfiprintf_r+0x1b0>
 8006172:	9b03      	ldr	r3, [sp, #12]
 8006174:	3402      	adds	r4, #2
 8006176:	1d1a      	adds	r2, r3, #4
 8006178:	681b      	ldr	r3, [r3, #0]
 800617a:	9203      	str	r2, [sp, #12]
 800617c:	2b00      	cmp	r3, #0
 800617e:	bfb8      	it	lt
 8006180:	f04f 33ff 	movlt.w	r3, #4294967295
 8006184:	9305      	str	r3, [sp, #20]
 8006186:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8006250 <_vfiprintf_r+0x224>
 800618a:	2203      	movs	r2, #3
 800618c:	4650      	mov	r0, sl
 800618e:	7821      	ldrb	r1, [r4, #0]
 8006190:	f7fc fe1f 	bl	8002dd2 <memchr>
 8006194:	b138      	cbz	r0, 80061a6 <_vfiprintf_r+0x17a>
 8006196:	2240      	movs	r2, #64	; 0x40
 8006198:	9b04      	ldr	r3, [sp, #16]
 800619a:	eba0 000a 	sub.w	r0, r0, sl
 800619e:	4082      	lsls	r2, r0
 80061a0:	4313      	orrs	r3, r2
 80061a2:	3401      	adds	r4, #1
 80061a4:	9304      	str	r3, [sp, #16]
 80061a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80061aa:	2206      	movs	r2, #6
 80061ac:	4829      	ldr	r0, [pc, #164]	; (8006254 <_vfiprintf_r+0x228>)
 80061ae:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80061b2:	f7fc fe0e 	bl	8002dd2 <memchr>
 80061b6:	2800      	cmp	r0, #0
 80061b8:	d03f      	beq.n	800623a <_vfiprintf_r+0x20e>
 80061ba:	4b27      	ldr	r3, [pc, #156]	; (8006258 <_vfiprintf_r+0x22c>)
 80061bc:	bb1b      	cbnz	r3, 8006206 <_vfiprintf_r+0x1da>
 80061be:	9b03      	ldr	r3, [sp, #12]
 80061c0:	3307      	adds	r3, #7
 80061c2:	f023 0307 	bic.w	r3, r3, #7
 80061c6:	3308      	adds	r3, #8
 80061c8:	9303      	str	r3, [sp, #12]
 80061ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80061cc:	443b      	add	r3, r7
 80061ce:	9309      	str	r3, [sp, #36]	; 0x24
 80061d0:	e768      	b.n	80060a4 <_vfiprintf_r+0x78>
 80061d2:	460c      	mov	r4, r1
 80061d4:	2001      	movs	r0, #1
 80061d6:	fb0c 3202 	mla	r2, ip, r2, r3
 80061da:	e7a6      	b.n	800612a <_vfiprintf_r+0xfe>
 80061dc:	2300      	movs	r3, #0
 80061de:	f04f 0c0a 	mov.w	ip, #10
 80061e2:	4619      	mov	r1, r3
 80061e4:	3401      	adds	r4, #1
 80061e6:	9305      	str	r3, [sp, #20]
 80061e8:	4620      	mov	r0, r4
 80061ea:	f810 2b01 	ldrb.w	r2, [r0], #1
 80061ee:	3a30      	subs	r2, #48	; 0x30
 80061f0:	2a09      	cmp	r2, #9
 80061f2:	d903      	bls.n	80061fc <_vfiprintf_r+0x1d0>
 80061f4:	2b00      	cmp	r3, #0
 80061f6:	d0c6      	beq.n	8006186 <_vfiprintf_r+0x15a>
 80061f8:	9105      	str	r1, [sp, #20]
 80061fa:	e7c4      	b.n	8006186 <_vfiprintf_r+0x15a>
 80061fc:	4604      	mov	r4, r0
 80061fe:	2301      	movs	r3, #1
 8006200:	fb0c 2101 	mla	r1, ip, r1, r2
 8006204:	e7f0      	b.n	80061e8 <_vfiprintf_r+0x1bc>
 8006206:	ab03      	add	r3, sp, #12
 8006208:	9300      	str	r3, [sp, #0]
 800620a:	462a      	mov	r2, r5
 800620c:	4630      	mov	r0, r6
 800620e:	4b13      	ldr	r3, [pc, #76]	; (800625c <_vfiprintf_r+0x230>)
 8006210:	a904      	add	r1, sp, #16
 8006212:	f7fb fe69 	bl	8001ee8 <_printf_float>
 8006216:	4607      	mov	r7, r0
 8006218:	1c78      	adds	r0, r7, #1
 800621a:	d1d6      	bne.n	80061ca <_vfiprintf_r+0x19e>
 800621c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800621e:	07d9      	lsls	r1, r3, #31
 8006220:	d405      	bmi.n	800622e <_vfiprintf_r+0x202>
 8006222:	89ab      	ldrh	r3, [r5, #12]
 8006224:	059a      	lsls	r2, r3, #22
 8006226:	d402      	bmi.n	800622e <_vfiprintf_r+0x202>
 8006228:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800622a:	f7fc fdd1 	bl	8002dd0 <__retarget_lock_release_recursive>
 800622e:	89ab      	ldrh	r3, [r5, #12]
 8006230:	065b      	lsls	r3, r3, #25
 8006232:	f53f af1d 	bmi.w	8006070 <_vfiprintf_r+0x44>
 8006236:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006238:	e71c      	b.n	8006074 <_vfiprintf_r+0x48>
 800623a:	ab03      	add	r3, sp, #12
 800623c:	9300      	str	r3, [sp, #0]
 800623e:	462a      	mov	r2, r5
 8006240:	4630      	mov	r0, r6
 8006242:	4b06      	ldr	r3, [pc, #24]	; (800625c <_vfiprintf_r+0x230>)
 8006244:	a904      	add	r1, sp, #16
 8006246:	f7fc f8ef 	bl	8002428 <_printf_i>
 800624a:	e7e4      	b.n	8006216 <_vfiprintf_r+0x1ea>
 800624c:	080068d1 	.word	0x080068d1
 8006250:	080068d7 	.word	0x080068d7
 8006254:	080068db 	.word	0x080068db
 8006258:	08001ee9 	.word	0x08001ee9
 800625c:	08006009 	.word	0x08006009

08006260 <__swbuf_r>:
 8006260:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006262:	460e      	mov	r6, r1
 8006264:	4614      	mov	r4, r2
 8006266:	4605      	mov	r5, r0
 8006268:	b118      	cbz	r0, 8006272 <__swbuf_r+0x12>
 800626a:	6a03      	ldr	r3, [r0, #32]
 800626c:	b90b      	cbnz	r3, 8006272 <__swbuf_r+0x12>
 800626e:	f7fc fc97 	bl	8002ba0 <__sinit>
 8006272:	69a3      	ldr	r3, [r4, #24]
 8006274:	60a3      	str	r3, [r4, #8]
 8006276:	89a3      	ldrh	r3, [r4, #12]
 8006278:	071a      	lsls	r2, r3, #28
 800627a:	d525      	bpl.n	80062c8 <__swbuf_r+0x68>
 800627c:	6923      	ldr	r3, [r4, #16]
 800627e:	b31b      	cbz	r3, 80062c8 <__swbuf_r+0x68>
 8006280:	6823      	ldr	r3, [r4, #0]
 8006282:	6922      	ldr	r2, [r4, #16]
 8006284:	b2f6      	uxtb	r6, r6
 8006286:	1a98      	subs	r0, r3, r2
 8006288:	6963      	ldr	r3, [r4, #20]
 800628a:	4637      	mov	r7, r6
 800628c:	4283      	cmp	r3, r0
 800628e:	dc04      	bgt.n	800629a <__swbuf_r+0x3a>
 8006290:	4621      	mov	r1, r4
 8006292:	4628      	mov	r0, r5
 8006294:	f7ff fa30 	bl	80056f8 <_fflush_r>
 8006298:	b9e0      	cbnz	r0, 80062d4 <__swbuf_r+0x74>
 800629a:	68a3      	ldr	r3, [r4, #8]
 800629c:	3b01      	subs	r3, #1
 800629e:	60a3      	str	r3, [r4, #8]
 80062a0:	6823      	ldr	r3, [r4, #0]
 80062a2:	1c5a      	adds	r2, r3, #1
 80062a4:	6022      	str	r2, [r4, #0]
 80062a6:	701e      	strb	r6, [r3, #0]
 80062a8:	6962      	ldr	r2, [r4, #20]
 80062aa:	1c43      	adds	r3, r0, #1
 80062ac:	429a      	cmp	r2, r3
 80062ae:	d004      	beq.n	80062ba <__swbuf_r+0x5a>
 80062b0:	89a3      	ldrh	r3, [r4, #12]
 80062b2:	07db      	lsls	r3, r3, #31
 80062b4:	d506      	bpl.n	80062c4 <__swbuf_r+0x64>
 80062b6:	2e0a      	cmp	r6, #10
 80062b8:	d104      	bne.n	80062c4 <__swbuf_r+0x64>
 80062ba:	4621      	mov	r1, r4
 80062bc:	4628      	mov	r0, r5
 80062be:	f7ff fa1b 	bl	80056f8 <_fflush_r>
 80062c2:	b938      	cbnz	r0, 80062d4 <__swbuf_r+0x74>
 80062c4:	4638      	mov	r0, r7
 80062c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80062c8:	4621      	mov	r1, r4
 80062ca:	4628      	mov	r0, r5
 80062cc:	f000 f806 	bl	80062dc <__swsetup_r>
 80062d0:	2800      	cmp	r0, #0
 80062d2:	d0d5      	beq.n	8006280 <__swbuf_r+0x20>
 80062d4:	f04f 37ff 	mov.w	r7, #4294967295
 80062d8:	e7f4      	b.n	80062c4 <__swbuf_r+0x64>
	...

080062dc <__swsetup_r>:
 80062dc:	b538      	push	{r3, r4, r5, lr}
 80062de:	4b2a      	ldr	r3, [pc, #168]	; (8006388 <__swsetup_r+0xac>)
 80062e0:	4605      	mov	r5, r0
 80062e2:	6818      	ldr	r0, [r3, #0]
 80062e4:	460c      	mov	r4, r1
 80062e6:	b118      	cbz	r0, 80062f0 <__swsetup_r+0x14>
 80062e8:	6a03      	ldr	r3, [r0, #32]
 80062ea:	b90b      	cbnz	r3, 80062f0 <__swsetup_r+0x14>
 80062ec:	f7fc fc58 	bl	8002ba0 <__sinit>
 80062f0:	89a3      	ldrh	r3, [r4, #12]
 80062f2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80062f6:	0718      	lsls	r0, r3, #28
 80062f8:	d422      	bmi.n	8006340 <__swsetup_r+0x64>
 80062fa:	06d9      	lsls	r1, r3, #27
 80062fc:	d407      	bmi.n	800630e <__swsetup_r+0x32>
 80062fe:	2309      	movs	r3, #9
 8006300:	602b      	str	r3, [r5, #0]
 8006302:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8006306:	f04f 30ff 	mov.w	r0, #4294967295
 800630a:	81a3      	strh	r3, [r4, #12]
 800630c:	e034      	b.n	8006378 <__swsetup_r+0x9c>
 800630e:	0758      	lsls	r0, r3, #29
 8006310:	d512      	bpl.n	8006338 <__swsetup_r+0x5c>
 8006312:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006314:	b141      	cbz	r1, 8006328 <__swsetup_r+0x4c>
 8006316:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800631a:	4299      	cmp	r1, r3
 800631c:	d002      	beq.n	8006324 <__swsetup_r+0x48>
 800631e:	4628      	mov	r0, r5
 8006320:	f7fd fbda 	bl	8003ad8 <_free_r>
 8006324:	2300      	movs	r3, #0
 8006326:	6363      	str	r3, [r4, #52]	; 0x34
 8006328:	89a3      	ldrh	r3, [r4, #12]
 800632a:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800632e:	81a3      	strh	r3, [r4, #12]
 8006330:	2300      	movs	r3, #0
 8006332:	6063      	str	r3, [r4, #4]
 8006334:	6923      	ldr	r3, [r4, #16]
 8006336:	6023      	str	r3, [r4, #0]
 8006338:	89a3      	ldrh	r3, [r4, #12]
 800633a:	f043 0308 	orr.w	r3, r3, #8
 800633e:	81a3      	strh	r3, [r4, #12]
 8006340:	6923      	ldr	r3, [r4, #16]
 8006342:	b94b      	cbnz	r3, 8006358 <__swsetup_r+0x7c>
 8006344:	89a3      	ldrh	r3, [r4, #12]
 8006346:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800634a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800634e:	d003      	beq.n	8006358 <__swsetup_r+0x7c>
 8006350:	4621      	mov	r1, r4
 8006352:	4628      	mov	r0, r5
 8006354:	f000 f883 	bl	800645e <__smakebuf_r>
 8006358:	89a0      	ldrh	r0, [r4, #12]
 800635a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800635e:	f010 0301 	ands.w	r3, r0, #1
 8006362:	d00a      	beq.n	800637a <__swsetup_r+0x9e>
 8006364:	2300      	movs	r3, #0
 8006366:	60a3      	str	r3, [r4, #8]
 8006368:	6963      	ldr	r3, [r4, #20]
 800636a:	425b      	negs	r3, r3
 800636c:	61a3      	str	r3, [r4, #24]
 800636e:	6923      	ldr	r3, [r4, #16]
 8006370:	b943      	cbnz	r3, 8006384 <__swsetup_r+0xa8>
 8006372:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8006376:	d1c4      	bne.n	8006302 <__swsetup_r+0x26>
 8006378:	bd38      	pop	{r3, r4, r5, pc}
 800637a:	0781      	lsls	r1, r0, #30
 800637c:	bf58      	it	pl
 800637e:	6963      	ldrpl	r3, [r4, #20]
 8006380:	60a3      	str	r3, [r4, #8]
 8006382:	e7f4      	b.n	800636e <__swsetup_r+0x92>
 8006384:	2000      	movs	r0, #0
 8006386:	e7f7      	b.n	8006378 <__swsetup_r+0x9c>
 8006388:	20000064 	.word	0x20000064

0800638c <_raise_r>:
 800638c:	291f      	cmp	r1, #31
 800638e:	b538      	push	{r3, r4, r5, lr}
 8006390:	4604      	mov	r4, r0
 8006392:	460d      	mov	r5, r1
 8006394:	d904      	bls.n	80063a0 <_raise_r+0x14>
 8006396:	2316      	movs	r3, #22
 8006398:	6003      	str	r3, [r0, #0]
 800639a:	f04f 30ff 	mov.w	r0, #4294967295
 800639e:	bd38      	pop	{r3, r4, r5, pc}
 80063a0:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80063a2:	b112      	cbz	r2, 80063aa <_raise_r+0x1e>
 80063a4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80063a8:	b94b      	cbnz	r3, 80063be <_raise_r+0x32>
 80063aa:	4620      	mov	r0, r4
 80063ac:	f000 f830 	bl	8006410 <_getpid_r>
 80063b0:	462a      	mov	r2, r5
 80063b2:	4601      	mov	r1, r0
 80063b4:	4620      	mov	r0, r4
 80063b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80063ba:	f000 b817 	b.w	80063ec <_kill_r>
 80063be:	2b01      	cmp	r3, #1
 80063c0:	d00a      	beq.n	80063d8 <_raise_r+0x4c>
 80063c2:	1c59      	adds	r1, r3, #1
 80063c4:	d103      	bne.n	80063ce <_raise_r+0x42>
 80063c6:	2316      	movs	r3, #22
 80063c8:	6003      	str	r3, [r0, #0]
 80063ca:	2001      	movs	r0, #1
 80063cc:	e7e7      	b.n	800639e <_raise_r+0x12>
 80063ce:	2400      	movs	r4, #0
 80063d0:	4628      	mov	r0, r5
 80063d2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80063d6:	4798      	blx	r3
 80063d8:	2000      	movs	r0, #0
 80063da:	e7e0      	b.n	800639e <_raise_r+0x12>

080063dc <raise>:
 80063dc:	4b02      	ldr	r3, [pc, #8]	; (80063e8 <raise+0xc>)
 80063de:	4601      	mov	r1, r0
 80063e0:	6818      	ldr	r0, [r3, #0]
 80063e2:	f7ff bfd3 	b.w	800638c <_raise_r>
 80063e6:	bf00      	nop
 80063e8:	20000064 	.word	0x20000064

080063ec <_kill_r>:
 80063ec:	b538      	push	{r3, r4, r5, lr}
 80063ee:	2300      	movs	r3, #0
 80063f0:	4d06      	ldr	r5, [pc, #24]	; (800640c <_kill_r+0x20>)
 80063f2:	4604      	mov	r4, r0
 80063f4:	4608      	mov	r0, r1
 80063f6:	4611      	mov	r1, r2
 80063f8:	602b      	str	r3, [r5, #0]
 80063fa:	f7fa fcf5 	bl	8000de8 <_kill>
 80063fe:	1c43      	adds	r3, r0, #1
 8006400:	d102      	bne.n	8006408 <_kill_r+0x1c>
 8006402:	682b      	ldr	r3, [r5, #0]
 8006404:	b103      	cbz	r3, 8006408 <_kill_r+0x1c>
 8006406:	6023      	str	r3, [r4, #0]
 8006408:	bd38      	pop	{r3, r4, r5, pc}
 800640a:	bf00      	nop
 800640c:	20000334 	.word	0x20000334

08006410 <_getpid_r>:
 8006410:	f7fa bce3 	b.w	8000dda <_getpid>

08006414 <__swhatbuf_r>:
 8006414:	b570      	push	{r4, r5, r6, lr}
 8006416:	460c      	mov	r4, r1
 8006418:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800641c:	4615      	mov	r5, r2
 800641e:	2900      	cmp	r1, #0
 8006420:	461e      	mov	r6, r3
 8006422:	b096      	sub	sp, #88	; 0x58
 8006424:	da0c      	bge.n	8006440 <__swhatbuf_r+0x2c>
 8006426:	89a3      	ldrh	r3, [r4, #12]
 8006428:	2100      	movs	r1, #0
 800642a:	f013 0f80 	tst.w	r3, #128	; 0x80
 800642e:	bf0c      	ite	eq
 8006430:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8006434:	2340      	movne	r3, #64	; 0x40
 8006436:	2000      	movs	r0, #0
 8006438:	6031      	str	r1, [r6, #0]
 800643a:	602b      	str	r3, [r5, #0]
 800643c:	b016      	add	sp, #88	; 0x58
 800643e:	bd70      	pop	{r4, r5, r6, pc}
 8006440:	466a      	mov	r2, sp
 8006442:	f000 f849 	bl	80064d8 <_fstat_r>
 8006446:	2800      	cmp	r0, #0
 8006448:	dbed      	blt.n	8006426 <__swhatbuf_r+0x12>
 800644a:	9901      	ldr	r1, [sp, #4]
 800644c:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8006450:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8006454:	4259      	negs	r1, r3
 8006456:	4159      	adcs	r1, r3
 8006458:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800645c:	e7eb      	b.n	8006436 <__swhatbuf_r+0x22>

0800645e <__smakebuf_r>:
 800645e:	898b      	ldrh	r3, [r1, #12]
 8006460:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006462:	079d      	lsls	r5, r3, #30
 8006464:	4606      	mov	r6, r0
 8006466:	460c      	mov	r4, r1
 8006468:	d507      	bpl.n	800647a <__smakebuf_r+0x1c>
 800646a:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800646e:	6023      	str	r3, [r4, #0]
 8006470:	6123      	str	r3, [r4, #16]
 8006472:	2301      	movs	r3, #1
 8006474:	6163      	str	r3, [r4, #20]
 8006476:	b002      	add	sp, #8
 8006478:	bd70      	pop	{r4, r5, r6, pc}
 800647a:	466a      	mov	r2, sp
 800647c:	ab01      	add	r3, sp, #4
 800647e:	f7ff ffc9 	bl	8006414 <__swhatbuf_r>
 8006482:	9900      	ldr	r1, [sp, #0]
 8006484:	4605      	mov	r5, r0
 8006486:	4630      	mov	r0, r6
 8006488:	f7fd fb96 	bl	8003bb8 <_malloc_r>
 800648c:	b948      	cbnz	r0, 80064a2 <__smakebuf_r+0x44>
 800648e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006492:	059a      	lsls	r2, r3, #22
 8006494:	d4ef      	bmi.n	8006476 <__smakebuf_r+0x18>
 8006496:	f023 0303 	bic.w	r3, r3, #3
 800649a:	f043 0302 	orr.w	r3, r3, #2
 800649e:	81a3      	strh	r3, [r4, #12]
 80064a0:	e7e3      	b.n	800646a <__smakebuf_r+0xc>
 80064a2:	89a3      	ldrh	r3, [r4, #12]
 80064a4:	6020      	str	r0, [r4, #0]
 80064a6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80064aa:	81a3      	strh	r3, [r4, #12]
 80064ac:	9b00      	ldr	r3, [sp, #0]
 80064ae:	6120      	str	r0, [r4, #16]
 80064b0:	6163      	str	r3, [r4, #20]
 80064b2:	9b01      	ldr	r3, [sp, #4]
 80064b4:	b15b      	cbz	r3, 80064ce <__smakebuf_r+0x70>
 80064b6:	4630      	mov	r0, r6
 80064b8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80064bc:	f000 f81e 	bl	80064fc <_isatty_r>
 80064c0:	b128      	cbz	r0, 80064ce <__smakebuf_r+0x70>
 80064c2:	89a3      	ldrh	r3, [r4, #12]
 80064c4:	f023 0303 	bic.w	r3, r3, #3
 80064c8:	f043 0301 	orr.w	r3, r3, #1
 80064cc:	81a3      	strh	r3, [r4, #12]
 80064ce:	89a3      	ldrh	r3, [r4, #12]
 80064d0:	431d      	orrs	r5, r3
 80064d2:	81a5      	strh	r5, [r4, #12]
 80064d4:	e7cf      	b.n	8006476 <__smakebuf_r+0x18>
	...

080064d8 <_fstat_r>:
 80064d8:	b538      	push	{r3, r4, r5, lr}
 80064da:	2300      	movs	r3, #0
 80064dc:	4d06      	ldr	r5, [pc, #24]	; (80064f8 <_fstat_r+0x20>)
 80064de:	4604      	mov	r4, r0
 80064e0:	4608      	mov	r0, r1
 80064e2:	4611      	mov	r1, r2
 80064e4:	602b      	str	r3, [r5, #0]
 80064e6:	f7fa fcdd 	bl	8000ea4 <_fstat>
 80064ea:	1c43      	adds	r3, r0, #1
 80064ec:	d102      	bne.n	80064f4 <_fstat_r+0x1c>
 80064ee:	682b      	ldr	r3, [r5, #0]
 80064f0:	b103      	cbz	r3, 80064f4 <_fstat_r+0x1c>
 80064f2:	6023      	str	r3, [r4, #0]
 80064f4:	bd38      	pop	{r3, r4, r5, pc}
 80064f6:	bf00      	nop
 80064f8:	20000334 	.word	0x20000334

080064fc <_isatty_r>:
 80064fc:	b538      	push	{r3, r4, r5, lr}
 80064fe:	2300      	movs	r3, #0
 8006500:	4d05      	ldr	r5, [pc, #20]	; (8006518 <_isatty_r+0x1c>)
 8006502:	4604      	mov	r4, r0
 8006504:	4608      	mov	r0, r1
 8006506:	602b      	str	r3, [r5, #0]
 8006508:	f7fa fcdb 	bl	8000ec2 <_isatty>
 800650c:	1c43      	adds	r3, r0, #1
 800650e:	d102      	bne.n	8006516 <_isatty_r+0x1a>
 8006510:	682b      	ldr	r3, [r5, #0]
 8006512:	b103      	cbz	r3, 8006516 <_isatty_r+0x1a>
 8006514:	6023      	str	r3, [r4, #0]
 8006516:	bd38      	pop	{r3, r4, r5, pc}
 8006518:	20000334 	.word	0x20000334

0800651c <_init>:
 800651c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800651e:	bf00      	nop
 8006520:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006522:	bc08      	pop	{r3}
 8006524:	469e      	mov	lr, r3
 8006526:	4770      	bx	lr

08006528 <_fini>:
 8006528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800652a:	bf00      	nop
 800652c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800652e:	bc08      	pop	{r3}
 8006530:	469e      	mov	lr, r3
 8006532:	4770      	bx	lr
