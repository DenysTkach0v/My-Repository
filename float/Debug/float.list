
float.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001484  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  08001590  08001590  00011590  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015d0  080015d0  00020060  2**0
                  CONTENTS
  4 .ARM          00000000  080015d0  080015d0  00020060  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015d0  080015d0  00020060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015d0  080015d0  000115d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015d4  080015d4  000115d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000060  20000000  080015d8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000170  20000060  08001638  00020060  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001d0  08001638  000201d0  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020060  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020089  2**0
                  CONTENTS, READONLY
 13 .debug_info   00001339  00000000  00000000  000200cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000006c4  00000000  00000000  00021405  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000278  00000000  00000000  00021ad0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000001b8  00000000  00000000  00021d48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002afe  00000000  00000000  00021f00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002c0e  00000000  00000000  000249fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0008092e  00000000  00000000  0002760c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000104c  00000000  00000000  000a7f3c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000062  00000000  00000000  000a8f88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800010c <__do_global_dtors_aux>:
 800010c:	b510      	push	{r4, lr}
 800010e:	4c05      	ldr	r4, [pc, #20]	; (8000124 <__do_global_dtors_aux+0x18>)
 8000110:	7823      	ldrb	r3, [r4, #0]
 8000112:	b933      	cbnz	r3, 8000122 <__do_global_dtors_aux+0x16>
 8000114:	4b04      	ldr	r3, [pc, #16]	; (8000128 <__do_global_dtors_aux+0x1c>)
 8000116:	b113      	cbz	r3, 800011e <__do_global_dtors_aux+0x12>
 8000118:	4804      	ldr	r0, [pc, #16]	; (800012c <__do_global_dtors_aux+0x20>)
 800011a:	f3af 8000 	nop.w
 800011e:	2301      	movs	r3, #1
 8000120:	7023      	strb	r3, [r4, #0]
 8000122:	bd10      	pop	{r4, pc}
 8000124:	20000060 	.word	0x20000060
 8000128:	00000000 	.word	0x00000000
 800012c:	08001578 	.word	0x08001578

08000130 <frame_dummy>:
 8000130:	b508      	push	{r3, lr}
 8000132:	4b03      	ldr	r3, [pc, #12]	; (8000140 <frame_dummy+0x10>)
 8000134:	b11b      	cbz	r3, 800013e <frame_dummy+0xe>
 8000136:	4903      	ldr	r1, [pc, #12]	; (8000144 <frame_dummy+0x14>)
 8000138:	4803      	ldr	r0, [pc, #12]	; (8000148 <frame_dummy+0x18>)
 800013a:	f3af 8000 	nop.w
 800013e:	bd08      	pop	{r3, pc}
 8000140:	00000000 	.word	0x00000000
 8000144:	20000064 	.word	0x20000064
 8000148:	08001578 	.word	0x08001578

0800014c <__aeabi_drsub>:
 800014c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000150:	e002      	b.n	8000158 <__adddf3>
 8000152:	bf00      	nop

08000154 <__aeabi_dsub>:
 8000154:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000158 <__adddf3>:
 8000158:	b530      	push	{r4, r5, lr}
 800015a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800015e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000162:	ea94 0f05 	teq	r4, r5
 8000166:	bf08      	it	eq
 8000168:	ea90 0f02 	teqeq	r0, r2
 800016c:	bf1f      	itttt	ne
 800016e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000172:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000176:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800017a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800017e:	f000 80e2 	beq.w	8000346 <__adddf3+0x1ee>
 8000182:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000186:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800018a:	bfb8      	it	lt
 800018c:	426d      	neglt	r5, r5
 800018e:	dd0c      	ble.n	80001aa <__adddf3+0x52>
 8000190:	442c      	add	r4, r5
 8000192:	ea80 0202 	eor.w	r2, r0, r2
 8000196:	ea81 0303 	eor.w	r3, r1, r3
 800019a:	ea82 0000 	eor.w	r0, r2, r0
 800019e:	ea83 0101 	eor.w	r1, r3, r1
 80001a2:	ea80 0202 	eor.w	r2, r0, r2
 80001a6:	ea81 0303 	eor.w	r3, r1, r3
 80001aa:	2d36      	cmp	r5, #54	; 0x36
 80001ac:	bf88      	it	hi
 80001ae:	bd30      	pophi	{r4, r5, pc}
 80001b0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001b4:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001b8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001bc:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001c0:	d002      	beq.n	80001c8 <__adddf3+0x70>
 80001c2:	4240      	negs	r0, r0
 80001c4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001c8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001cc:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001d0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x84>
 80001d6:	4252      	negs	r2, r2
 80001d8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001dc:	ea94 0f05 	teq	r4, r5
 80001e0:	f000 80a7 	beq.w	8000332 <__adddf3+0x1da>
 80001e4:	f1a4 0401 	sub.w	r4, r4, #1
 80001e8:	f1d5 0e20 	rsbs	lr, r5, #32
 80001ec:	db0d      	blt.n	800020a <__adddf3+0xb2>
 80001ee:	fa02 fc0e 	lsl.w	ip, r2, lr
 80001f2:	fa22 f205 	lsr.w	r2, r2, r5
 80001f6:	1880      	adds	r0, r0, r2
 80001f8:	f141 0100 	adc.w	r1, r1, #0
 80001fc:	fa03 f20e 	lsl.w	r2, r3, lr
 8000200:	1880      	adds	r0, r0, r2
 8000202:	fa43 f305 	asr.w	r3, r3, r5
 8000206:	4159      	adcs	r1, r3
 8000208:	e00e      	b.n	8000228 <__adddf3+0xd0>
 800020a:	f1a5 0520 	sub.w	r5, r5, #32
 800020e:	f10e 0e20 	add.w	lr, lr, #32
 8000212:	2a01      	cmp	r2, #1
 8000214:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000218:	bf28      	it	cs
 800021a:	f04c 0c02 	orrcs.w	ip, ip, #2
 800021e:	fa43 f305 	asr.w	r3, r3, r5
 8000222:	18c0      	adds	r0, r0, r3
 8000224:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000228:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800022c:	d507      	bpl.n	800023e <__adddf3+0xe6>
 800022e:	f04f 0e00 	mov.w	lr, #0
 8000232:	f1dc 0c00 	rsbs	ip, ip, #0
 8000236:	eb7e 0000 	sbcs.w	r0, lr, r0
 800023a:	eb6e 0101 	sbc.w	r1, lr, r1
 800023e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000242:	d31b      	bcc.n	800027c <__adddf3+0x124>
 8000244:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000248:	d30c      	bcc.n	8000264 <__adddf3+0x10c>
 800024a:	0849      	lsrs	r1, r1, #1
 800024c:	ea5f 0030 	movs.w	r0, r0, rrx
 8000250:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000254:	f104 0401 	add.w	r4, r4, #1
 8000258:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800025c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000260:	f080 809a 	bcs.w	8000398 <__adddf3+0x240>
 8000264:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000268:	bf08      	it	eq
 800026a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800026e:	f150 0000 	adcs.w	r0, r0, #0
 8000272:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000276:	ea41 0105 	orr.w	r1, r1, r5
 800027a:	bd30      	pop	{r4, r5, pc}
 800027c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000280:	4140      	adcs	r0, r0
 8000282:	eb41 0101 	adc.w	r1, r1, r1
 8000286:	3c01      	subs	r4, #1
 8000288:	bf28      	it	cs
 800028a:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800028e:	d2e9      	bcs.n	8000264 <__adddf3+0x10c>
 8000290:	f091 0f00 	teq	r1, #0
 8000294:	bf04      	itt	eq
 8000296:	4601      	moveq	r1, r0
 8000298:	2000      	moveq	r0, #0
 800029a:	fab1 f381 	clz	r3, r1
 800029e:	bf08      	it	eq
 80002a0:	3320      	addeq	r3, #32
 80002a2:	f1a3 030b 	sub.w	r3, r3, #11
 80002a6:	f1b3 0220 	subs.w	r2, r3, #32
 80002aa:	da0c      	bge.n	80002c6 <__adddf3+0x16e>
 80002ac:	320c      	adds	r2, #12
 80002ae:	dd08      	ble.n	80002c2 <__adddf3+0x16a>
 80002b0:	f102 0c14 	add.w	ip, r2, #20
 80002b4:	f1c2 020c 	rsb	r2, r2, #12
 80002b8:	fa01 f00c 	lsl.w	r0, r1, ip
 80002bc:	fa21 f102 	lsr.w	r1, r1, r2
 80002c0:	e00c      	b.n	80002dc <__adddf3+0x184>
 80002c2:	f102 0214 	add.w	r2, r2, #20
 80002c6:	bfd8      	it	le
 80002c8:	f1c2 0c20 	rsble	ip, r2, #32
 80002cc:	fa01 f102 	lsl.w	r1, r1, r2
 80002d0:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002d4:	bfdc      	itt	le
 80002d6:	ea41 010c 	orrle.w	r1, r1, ip
 80002da:	4090      	lslle	r0, r2
 80002dc:	1ae4      	subs	r4, r4, r3
 80002de:	bfa2      	ittt	ge
 80002e0:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002e4:	4329      	orrge	r1, r5
 80002e6:	bd30      	popge	{r4, r5, pc}
 80002e8:	ea6f 0404 	mvn.w	r4, r4
 80002ec:	3c1f      	subs	r4, #31
 80002ee:	da1c      	bge.n	800032a <__adddf3+0x1d2>
 80002f0:	340c      	adds	r4, #12
 80002f2:	dc0e      	bgt.n	8000312 <__adddf3+0x1ba>
 80002f4:	f104 0414 	add.w	r4, r4, #20
 80002f8:	f1c4 0220 	rsb	r2, r4, #32
 80002fc:	fa20 f004 	lsr.w	r0, r0, r4
 8000300:	fa01 f302 	lsl.w	r3, r1, r2
 8000304:	ea40 0003 	orr.w	r0, r0, r3
 8000308:	fa21 f304 	lsr.w	r3, r1, r4
 800030c:	ea45 0103 	orr.w	r1, r5, r3
 8000310:	bd30      	pop	{r4, r5, pc}
 8000312:	f1c4 040c 	rsb	r4, r4, #12
 8000316:	f1c4 0220 	rsb	r2, r4, #32
 800031a:	fa20 f002 	lsr.w	r0, r0, r2
 800031e:	fa01 f304 	lsl.w	r3, r1, r4
 8000322:	ea40 0003 	orr.w	r0, r0, r3
 8000326:	4629      	mov	r1, r5
 8000328:	bd30      	pop	{r4, r5, pc}
 800032a:	fa21 f004 	lsr.w	r0, r1, r4
 800032e:	4629      	mov	r1, r5
 8000330:	bd30      	pop	{r4, r5, pc}
 8000332:	f094 0f00 	teq	r4, #0
 8000336:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800033a:	bf06      	itte	eq
 800033c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000340:	3401      	addeq	r4, #1
 8000342:	3d01      	subne	r5, #1
 8000344:	e74e      	b.n	80001e4 <__adddf3+0x8c>
 8000346:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800034a:	bf18      	it	ne
 800034c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000350:	d029      	beq.n	80003a6 <__adddf3+0x24e>
 8000352:	ea94 0f05 	teq	r4, r5
 8000356:	bf08      	it	eq
 8000358:	ea90 0f02 	teqeq	r0, r2
 800035c:	d005      	beq.n	800036a <__adddf3+0x212>
 800035e:	ea54 0c00 	orrs.w	ip, r4, r0
 8000362:	bf04      	itt	eq
 8000364:	4619      	moveq	r1, r3
 8000366:	4610      	moveq	r0, r2
 8000368:	bd30      	pop	{r4, r5, pc}
 800036a:	ea91 0f03 	teq	r1, r3
 800036e:	bf1e      	ittt	ne
 8000370:	2100      	movne	r1, #0
 8000372:	2000      	movne	r0, #0
 8000374:	bd30      	popne	{r4, r5, pc}
 8000376:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800037a:	d105      	bne.n	8000388 <__adddf3+0x230>
 800037c:	0040      	lsls	r0, r0, #1
 800037e:	4149      	adcs	r1, r1
 8000380:	bf28      	it	cs
 8000382:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000386:	bd30      	pop	{r4, r5, pc}
 8000388:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800038c:	bf3c      	itt	cc
 800038e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000392:	bd30      	popcc	{r4, r5, pc}
 8000394:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000398:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800039c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003a0:	f04f 0000 	mov.w	r0, #0
 80003a4:	bd30      	pop	{r4, r5, pc}
 80003a6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003aa:	bf1a      	itte	ne
 80003ac:	4619      	movne	r1, r3
 80003ae:	4610      	movne	r0, r2
 80003b0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003b4:	bf1c      	itt	ne
 80003b6:	460b      	movne	r3, r1
 80003b8:	4602      	movne	r2, r0
 80003ba:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003be:	bf06      	itte	eq
 80003c0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003c4:	ea91 0f03 	teqeq	r1, r3
 80003c8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003cc:	bd30      	pop	{r4, r5, pc}
 80003ce:	bf00      	nop

080003d0 <__aeabi_ui2d>:
 80003d0:	f090 0f00 	teq	r0, #0
 80003d4:	bf04      	itt	eq
 80003d6:	2100      	moveq	r1, #0
 80003d8:	4770      	bxeq	lr
 80003da:	b530      	push	{r4, r5, lr}
 80003dc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003e0:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003e4:	f04f 0500 	mov.w	r5, #0
 80003e8:	f04f 0100 	mov.w	r1, #0
 80003ec:	e750      	b.n	8000290 <__adddf3+0x138>
 80003ee:	bf00      	nop

080003f0 <__aeabi_i2d>:
 80003f0:	f090 0f00 	teq	r0, #0
 80003f4:	bf04      	itt	eq
 80003f6:	2100      	moveq	r1, #0
 80003f8:	4770      	bxeq	lr
 80003fa:	b530      	push	{r4, r5, lr}
 80003fc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000400:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000404:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000408:	bf48      	it	mi
 800040a:	4240      	negmi	r0, r0
 800040c:	f04f 0100 	mov.w	r1, #0
 8000410:	e73e      	b.n	8000290 <__adddf3+0x138>
 8000412:	bf00      	nop

08000414 <__aeabi_f2d>:
 8000414:	0042      	lsls	r2, r0, #1
 8000416:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800041a:	ea4f 0131 	mov.w	r1, r1, rrx
 800041e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000422:	bf1f      	itttt	ne
 8000424:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000428:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 800042c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000430:	4770      	bxne	lr
 8000432:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8000436:	bf08      	it	eq
 8000438:	4770      	bxeq	lr
 800043a:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 800043e:	bf04      	itt	eq
 8000440:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000444:	4770      	bxeq	lr
 8000446:	b530      	push	{r4, r5, lr}
 8000448:	f44f 7460 	mov.w	r4, #896	; 0x380
 800044c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000450:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000454:	e71c      	b.n	8000290 <__adddf3+0x138>
 8000456:	bf00      	nop

08000458 <__aeabi_ul2d>:
 8000458:	ea50 0201 	orrs.w	r2, r0, r1
 800045c:	bf08      	it	eq
 800045e:	4770      	bxeq	lr
 8000460:	b530      	push	{r4, r5, lr}
 8000462:	f04f 0500 	mov.w	r5, #0
 8000466:	e00a      	b.n	800047e <__aeabi_l2d+0x16>

08000468 <__aeabi_l2d>:
 8000468:	ea50 0201 	orrs.w	r2, r0, r1
 800046c:	bf08      	it	eq
 800046e:	4770      	bxeq	lr
 8000470:	b530      	push	{r4, r5, lr}
 8000472:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000476:	d502      	bpl.n	800047e <__aeabi_l2d+0x16>
 8000478:	4240      	negs	r0, r0
 800047a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800047e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000482:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000486:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800048a:	f43f aed8 	beq.w	800023e <__adddf3+0xe6>
 800048e:	f04f 0203 	mov.w	r2, #3
 8000492:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000496:	bf18      	it	ne
 8000498:	3203      	addne	r2, #3
 800049a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800049e:	bf18      	it	ne
 80004a0:	3203      	addne	r2, #3
 80004a2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004a6:	f1c2 0320 	rsb	r3, r2, #32
 80004aa:	fa00 fc03 	lsl.w	ip, r0, r3
 80004ae:	fa20 f002 	lsr.w	r0, r0, r2
 80004b2:	fa01 fe03 	lsl.w	lr, r1, r3
 80004b6:	ea40 000e 	orr.w	r0, r0, lr
 80004ba:	fa21 f102 	lsr.w	r1, r1, r2
 80004be:	4414      	add	r4, r2
 80004c0:	e6bd      	b.n	800023e <__adddf3+0xe6>
 80004c2:	bf00      	nop

080004c4 <main>:
#include <stdio.h>

int main(void)

{
 80004c4:	b580      	push	{r7, lr}
 80004c6:	b082      	sub	sp, #8
 80004c8:	af00      	add	r7, sp, #0
	float number = 45.78987767;
 80004ca:	4b07      	ldr	r3, [pc, #28]	; (80004e8 <main+0x24>)
 80004cc:	607b      	str	r3, [r7, #4]
	printf("Number =%\n",number);
 80004ce:	6878      	ldr	r0, [r7, #4]
 80004d0:	f7ff ffa0 	bl	8000414 <__aeabi_f2d>
 80004d4:	4602      	mov	r2, r0
 80004d6:	460b      	mov	r3, r1
 80004d8:	4804      	ldr	r0, [pc, #16]	; (80004ec <main+0x28>)
 80004da:	f000 f9cf 	bl	800087c <iprintf>
	return 0;
 80004de:	2300      	movs	r3, #0
}
 80004e0:	4618      	mov	r0, r3
 80004e2:	3708      	adds	r7, #8
 80004e4:	46bd      	mov	sp, r7
 80004e6:	bd80      	pop	{r7, pc}
 80004e8:	423728d6 	.word	0x423728d6
 80004ec:	08001590 	.word	0x08001590

080004f0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80004f0:	b480      	push	{r7}
 80004f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80004f4:	e7fe      	b.n	80004f4 <NMI_Handler+0x4>

080004f6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80004f6:	b480      	push	{r7}
 80004f8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80004fa:	e7fe      	b.n	80004fa <HardFault_Handler+0x4>

080004fc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80004fc:	b480      	push	{r7}
 80004fe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000500:	e7fe      	b.n	8000500 <MemManage_Handler+0x4>

08000502 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000502:	b480      	push	{r7}
 8000504:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000506:	e7fe      	b.n	8000506 <BusFault_Handler+0x4>

08000508 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000508:	b480      	push	{r7}
 800050a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800050c:	e7fe      	b.n	800050c <UsageFault_Handler+0x4>

0800050e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800050e:	b480      	push	{r7}
 8000510:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000512:	bf00      	nop
 8000514:	46bd      	mov	sp, r7
 8000516:	bc80      	pop	{r7}
 8000518:	4770      	bx	lr

0800051a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800051a:	b480      	push	{r7}
 800051c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800051e:	bf00      	nop
 8000520:	46bd      	mov	sp, r7
 8000522:	bc80      	pop	{r7}
 8000524:	4770      	bx	lr

08000526 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000526:	b480      	push	{r7}
 8000528:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800052a:	bf00      	nop
 800052c:	46bd      	mov	sp, r7
 800052e:	bc80      	pop	{r7}
 8000530:	4770      	bx	lr

08000532 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000532:	b580      	push	{r7, lr}
 8000534:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000536:	f000 f8cd 	bl	80006d4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800053a:	bf00      	nop
 800053c:	bd80      	pop	{r7, pc}

0800053e <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800053e:	b580      	push	{r7, lr}
 8000540:	b086      	sub	sp, #24
 8000542:	af00      	add	r7, sp, #0
 8000544:	60f8      	str	r0, [r7, #12]
 8000546:	60b9      	str	r1, [r7, #8]
 8000548:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800054a:	2300      	movs	r3, #0
 800054c:	617b      	str	r3, [r7, #20]
 800054e:	e00a      	b.n	8000566 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000550:	f3af 8000 	nop.w
 8000554:	4601      	mov	r1, r0
 8000556:	68bb      	ldr	r3, [r7, #8]
 8000558:	1c5a      	adds	r2, r3, #1
 800055a:	60ba      	str	r2, [r7, #8]
 800055c:	b2ca      	uxtb	r2, r1
 800055e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000560:	697b      	ldr	r3, [r7, #20]
 8000562:	3301      	adds	r3, #1
 8000564:	617b      	str	r3, [r7, #20]
 8000566:	697a      	ldr	r2, [r7, #20]
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	429a      	cmp	r2, r3
 800056c:	dbf0      	blt.n	8000550 <_read+0x12>
  }

  return len;
 800056e:	687b      	ldr	r3, [r7, #4]
}
 8000570:	4618      	mov	r0, r3
 8000572:	3718      	adds	r7, #24
 8000574:	46bd      	mov	sp, r7
 8000576:	bd80      	pop	{r7, pc}

08000578 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000578:	b580      	push	{r7, lr}
 800057a:	b086      	sub	sp, #24
 800057c:	af00      	add	r7, sp, #0
 800057e:	60f8      	str	r0, [r7, #12]
 8000580:	60b9      	str	r1, [r7, #8]
 8000582:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000584:	2300      	movs	r3, #0
 8000586:	617b      	str	r3, [r7, #20]
 8000588:	e009      	b.n	800059e <_write+0x26>
  {
    __io_putchar(*ptr++);
 800058a:	68bb      	ldr	r3, [r7, #8]
 800058c:	1c5a      	adds	r2, r3, #1
 800058e:	60ba      	str	r2, [r7, #8]
 8000590:	781b      	ldrb	r3, [r3, #0]
 8000592:	4618      	mov	r0, r3
 8000594:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000598:	697b      	ldr	r3, [r7, #20]
 800059a:	3301      	adds	r3, #1
 800059c:	617b      	str	r3, [r7, #20]
 800059e:	697a      	ldr	r2, [r7, #20]
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	429a      	cmp	r2, r3
 80005a4:	dbf1      	blt.n	800058a <_write+0x12>
  }
  return len;
 80005a6:	687b      	ldr	r3, [r7, #4]
}
 80005a8:	4618      	mov	r0, r3
 80005aa:	3718      	adds	r7, #24
 80005ac:	46bd      	mov	sp, r7
 80005ae:	bd80      	pop	{r7, pc}

080005b0 <_close>:

int _close(int file)
{
 80005b0:	b480      	push	{r7}
 80005b2:	b083      	sub	sp, #12
 80005b4:	af00      	add	r7, sp, #0
 80005b6:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80005b8:	f04f 33ff 	mov.w	r3, #4294967295
}
 80005bc:	4618      	mov	r0, r3
 80005be:	370c      	adds	r7, #12
 80005c0:	46bd      	mov	sp, r7
 80005c2:	bc80      	pop	{r7}
 80005c4:	4770      	bx	lr

080005c6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80005c6:	b480      	push	{r7}
 80005c8:	b083      	sub	sp, #12
 80005ca:	af00      	add	r7, sp, #0
 80005cc:	6078      	str	r0, [r7, #4]
 80005ce:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80005d0:	683b      	ldr	r3, [r7, #0]
 80005d2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80005d6:	605a      	str	r2, [r3, #4]
  return 0;
 80005d8:	2300      	movs	r3, #0
}
 80005da:	4618      	mov	r0, r3
 80005dc:	370c      	adds	r7, #12
 80005de:	46bd      	mov	sp, r7
 80005e0:	bc80      	pop	{r7}
 80005e2:	4770      	bx	lr

080005e4 <_isatty>:

int _isatty(int file)
{
 80005e4:	b480      	push	{r7}
 80005e6:	b083      	sub	sp, #12
 80005e8:	af00      	add	r7, sp, #0
 80005ea:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80005ec:	2301      	movs	r3, #1
}
 80005ee:	4618      	mov	r0, r3
 80005f0:	370c      	adds	r7, #12
 80005f2:	46bd      	mov	sp, r7
 80005f4:	bc80      	pop	{r7}
 80005f6:	4770      	bx	lr

080005f8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80005f8:	b480      	push	{r7}
 80005fa:	b085      	sub	sp, #20
 80005fc:	af00      	add	r7, sp, #0
 80005fe:	60f8      	str	r0, [r7, #12]
 8000600:	60b9      	str	r1, [r7, #8]
 8000602:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000604:	2300      	movs	r3, #0
}
 8000606:	4618      	mov	r0, r3
 8000608:	3714      	adds	r7, #20
 800060a:	46bd      	mov	sp, r7
 800060c:	bc80      	pop	{r7}
 800060e:	4770      	bx	lr

08000610 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000610:	b580      	push	{r7, lr}
 8000612:	b086      	sub	sp, #24
 8000614:	af00      	add	r7, sp, #0
 8000616:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000618:	4a14      	ldr	r2, [pc, #80]	; (800066c <_sbrk+0x5c>)
 800061a:	4b15      	ldr	r3, [pc, #84]	; (8000670 <_sbrk+0x60>)
 800061c:	1ad3      	subs	r3, r2, r3
 800061e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000620:	697b      	ldr	r3, [r7, #20]
 8000622:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000624:	4b13      	ldr	r3, [pc, #76]	; (8000674 <_sbrk+0x64>)
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	2b00      	cmp	r3, #0
 800062a:	d102      	bne.n	8000632 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800062c:	4b11      	ldr	r3, [pc, #68]	; (8000674 <_sbrk+0x64>)
 800062e:	4a12      	ldr	r2, [pc, #72]	; (8000678 <_sbrk+0x68>)
 8000630:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000632:	4b10      	ldr	r3, [pc, #64]	; (8000674 <_sbrk+0x64>)
 8000634:	681a      	ldr	r2, [r3, #0]
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	4413      	add	r3, r2
 800063a:	693a      	ldr	r2, [r7, #16]
 800063c:	429a      	cmp	r2, r3
 800063e:	d207      	bcs.n	8000650 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000640:	f000 f9c0 	bl	80009c4 <__errno>
 8000644:	4603      	mov	r3, r0
 8000646:	220c      	movs	r2, #12
 8000648:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800064a:	f04f 33ff 	mov.w	r3, #4294967295
 800064e:	e009      	b.n	8000664 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000650:	4b08      	ldr	r3, [pc, #32]	; (8000674 <_sbrk+0x64>)
 8000652:	681b      	ldr	r3, [r3, #0]
 8000654:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000656:	4b07      	ldr	r3, [pc, #28]	; (8000674 <_sbrk+0x64>)
 8000658:	681a      	ldr	r2, [r3, #0]
 800065a:	687b      	ldr	r3, [r7, #4]
 800065c:	4413      	add	r3, r2
 800065e:	4a05      	ldr	r2, [pc, #20]	; (8000674 <_sbrk+0x64>)
 8000660:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000662:	68fb      	ldr	r3, [r7, #12]
}
 8000664:	4618      	mov	r0, r3
 8000666:	3718      	adds	r7, #24
 8000668:	46bd      	mov	sp, r7
 800066a:	bd80      	pop	{r7, pc}
 800066c:	20005000 	.word	0x20005000
 8000670:	00000400 	.word	0x00000400
 8000674:	2000007c 	.word	0x2000007c
 8000678:	200001d0 	.word	0x200001d0

0800067c <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 800067c:	b480      	push	{r7}
 800067e:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000680:	bf00      	nop
 8000682:	46bd      	mov	sp, r7
 8000684:	bc80      	pop	{r7}
 8000686:	4770      	bx	lr

08000688 <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Call the clock system initialization function.*/
    bl  SystemInit
 8000688:	f7ff fff8 	bl	800067c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800068c:	480b      	ldr	r0, [pc, #44]	; (80006bc <LoopFillZerobss+0xe>)
  ldr r1, =_edata
 800068e:	490c      	ldr	r1, [pc, #48]	; (80006c0 <LoopFillZerobss+0x12>)
  ldr r2, =_sidata
 8000690:	4a0c      	ldr	r2, [pc, #48]	; (80006c4 <LoopFillZerobss+0x16>)
  movs r3, #0
 8000692:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000694:	e002      	b.n	800069c <LoopCopyDataInit>

08000696 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000696:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000698:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800069a:	3304      	adds	r3, #4

0800069c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800069c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800069e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006a0:	d3f9      	bcc.n	8000696 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006a2:	4a09      	ldr	r2, [pc, #36]	; (80006c8 <LoopFillZerobss+0x1a>)
  ldr r4, =_ebss
 80006a4:	4c09      	ldr	r4, [pc, #36]	; (80006cc <LoopFillZerobss+0x1e>)
  movs r3, #0
 80006a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006a8:	e001      	b.n	80006ae <LoopFillZerobss>

080006aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006ac:	3204      	adds	r2, #4

080006ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006b0:	d3fb      	bcc.n	80006aa <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80006b2:	f000 f98d 	bl	80009d0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80006b6:	f7ff ff05 	bl	80004c4 <main>
  bx lr
 80006ba:	4770      	bx	lr
  ldr r0, =_sdata
 80006bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006c0:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 80006c4:	080015d8 	.word	0x080015d8
  ldr r2, =_sbss
 80006c8:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 80006cc:	200001d0 	.word	0x200001d0

080006d0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006d0:	e7fe      	b.n	80006d0 <ADC1_2_IRQHandler>
	...

080006d4 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80006d4:	b480      	push	{r7}
 80006d6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80006d8:	4b05      	ldr	r3, [pc, #20]	; (80006f0 <HAL_IncTick+0x1c>)
 80006da:	781b      	ldrb	r3, [r3, #0]
 80006dc:	461a      	mov	r2, r3
 80006de:	4b05      	ldr	r3, [pc, #20]	; (80006f4 <HAL_IncTick+0x20>)
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	4413      	add	r3, r2
 80006e4:	4a03      	ldr	r2, [pc, #12]	; (80006f4 <HAL_IncTick+0x20>)
 80006e6:	6013      	str	r3, [r2, #0]
}
 80006e8:	bf00      	nop
 80006ea:	46bd      	mov	sp, r7
 80006ec:	bc80      	pop	{r7}
 80006ee:	4770      	bx	lr
 80006f0:	20000000 	.word	0x20000000
 80006f4:	20000080 	.word	0x20000080

080006f8 <std>:
 80006f8:	2300      	movs	r3, #0
 80006fa:	b510      	push	{r4, lr}
 80006fc:	4604      	mov	r4, r0
 80006fe:	e9c0 3300 	strd	r3, r3, [r0]
 8000702:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000706:	6083      	str	r3, [r0, #8]
 8000708:	8181      	strh	r1, [r0, #12]
 800070a:	6643      	str	r3, [r0, #100]	; 0x64
 800070c:	81c2      	strh	r2, [r0, #14]
 800070e:	6183      	str	r3, [r0, #24]
 8000710:	4619      	mov	r1, r3
 8000712:	2208      	movs	r2, #8
 8000714:	305c      	adds	r0, #92	; 0x5c
 8000716:	f000 f906 	bl	8000926 <memset>
 800071a:	4b0d      	ldr	r3, [pc, #52]	; (8000750 <std+0x58>)
 800071c:	6224      	str	r4, [r4, #32]
 800071e:	6263      	str	r3, [r4, #36]	; 0x24
 8000720:	4b0c      	ldr	r3, [pc, #48]	; (8000754 <std+0x5c>)
 8000722:	62a3      	str	r3, [r4, #40]	; 0x28
 8000724:	4b0c      	ldr	r3, [pc, #48]	; (8000758 <std+0x60>)
 8000726:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000728:	4b0c      	ldr	r3, [pc, #48]	; (800075c <std+0x64>)
 800072a:	6323      	str	r3, [r4, #48]	; 0x30
 800072c:	4b0c      	ldr	r3, [pc, #48]	; (8000760 <std+0x68>)
 800072e:	429c      	cmp	r4, r3
 8000730:	d006      	beq.n	8000740 <std+0x48>
 8000732:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8000736:	4294      	cmp	r4, r2
 8000738:	d002      	beq.n	8000740 <std+0x48>
 800073a:	33d0      	adds	r3, #208	; 0xd0
 800073c:	429c      	cmp	r4, r3
 800073e:	d105      	bne.n	800074c <std+0x54>
 8000740:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000744:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000748:	f000 b966 	b.w	8000a18 <__retarget_lock_init_recursive>
 800074c:	bd10      	pop	{r4, pc}
 800074e:	bf00      	nop
 8000750:	080008a1 	.word	0x080008a1
 8000754:	080008c3 	.word	0x080008c3
 8000758:	080008fb 	.word	0x080008fb
 800075c:	0800091f 	.word	0x0800091f
 8000760:	20000084 	.word	0x20000084

08000764 <stdio_exit_handler>:
 8000764:	4a02      	ldr	r2, [pc, #8]	; (8000770 <stdio_exit_handler+0xc>)
 8000766:	4903      	ldr	r1, [pc, #12]	; (8000774 <stdio_exit_handler+0x10>)
 8000768:	4803      	ldr	r0, [pc, #12]	; (8000778 <stdio_exit_handler+0x14>)
 800076a:	f000 b869 	b.w	8000840 <_fwalk_sglue>
 800076e:	bf00      	nop
 8000770:	20000004 	.word	0x20000004
 8000774:	080012b9 	.word	0x080012b9
 8000778:	20000010 	.word	0x20000010

0800077c <cleanup_stdio>:
 800077c:	6841      	ldr	r1, [r0, #4]
 800077e:	4b0c      	ldr	r3, [pc, #48]	; (80007b0 <cleanup_stdio+0x34>)
 8000780:	b510      	push	{r4, lr}
 8000782:	4299      	cmp	r1, r3
 8000784:	4604      	mov	r4, r0
 8000786:	d001      	beq.n	800078c <cleanup_stdio+0x10>
 8000788:	f000 fd96 	bl	80012b8 <_fflush_r>
 800078c:	68a1      	ldr	r1, [r4, #8]
 800078e:	4b09      	ldr	r3, [pc, #36]	; (80007b4 <cleanup_stdio+0x38>)
 8000790:	4299      	cmp	r1, r3
 8000792:	d002      	beq.n	800079a <cleanup_stdio+0x1e>
 8000794:	4620      	mov	r0, r4
 8000796:	f000 fd8f 	bl	80012b8 <_fflush_r>
 800079a:	68e1      	ldr	r1, [r4, #12]
 800079c:	4b06      	ldr	r3, [pc, #24]	; (80007b8 <cleanup_stdio+0x3c>)
 800079e:	4299      	cmp	r1, r3
 80007a0:	d004      	beq.n	80007ac <cleanup_stdio+0x30>
 80007a2:	4620      	mov	r0, r4
 80007a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007a8:	f000 bd86 	b.w	80012b8 <_fflush_r>
 80007ac:	bd10      	pop	{r4, pc}
 80007ae:	bf00      	nop
 80007b0:	20000084 	.word	0x20000084
 80007b4:	200000ec 	.word	0x200000ec
 80007b8:	20000154 	.word	0x20000154

080007bc <global_stdio_init.part.0>:
 80007bc:	b510      	push	{r4, lr}
 80007be:	4b0b      	ldr	r3, [pc, #44]	; (80007ec <global_stdio_init.part.0+0x30>)
 80007c0:	4c0b      	ldr	r4, [pc, #44]	; (80007f0 <global_stdio_init.part.0+0x34>)
 80007c2:	4a0c      	ldr	r2, [pc, #48]	; (80007f4 <global_stdio_init.part.0+0x38>)
 80007c4:	4620      	mov	r0, r4
 80007c6:	601a      	str	r2, [r3, #0]
 80007c8:	2104      	movs	r1, #4
 80007ca:	2200      	movs	r2, #0
 80007cc:	f7ff ff94 	bl	80006f8 <std>
 80007d0:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80007d4:	2201      	movs	r2, #1
 80007d6:	2109      	movs	r1, #9
 80007d8:	f7ff ff8e 	bl	80006f8 <std>
 80007dc:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80007e0:	2202      	movs	r2, #2
 80007e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007e6:	2112      	movs	r1, #18
 80007e8:	f7ff bf86 	b.w	80006f8 <std>
 80007ec:	200001bc 	.word	0x200001bc
 80007f0:	20000084 	.word	0x20000084
 80007f4:	08000765 	.word	0x08000765

080007f8 <__sfp_lock_acquire>:
 80007f8:	4801      	ldr	r0, [pc, #4]	; (8000800 <__sfp_lock_acquire+0x8>)
 80007fa:	f000 b90e 	b.w	8000a1a <__retarget_lock_acquire_recursive>
 80007fe:	bf00      	nop
 8000800:	200001c5 	.word	0x200001c5

08000804 <__sfp_lock_release>:
 8000804:	4801      	ldr	r0, [pc, #4]	; (800080c <__sfp_lock_release+0x8>)
 8000806:	f000 b909 	b.w	8000a1c <__retarget_lock_release_recursive>
 800080a:	bf00      	nop
 800080c:	200001c5 	.word	0x200001c5

08000810 <__sinit>:
 8000810:	b510      	push	{r4, lr}
 8000812:	4604      	mov	r4, r0
 8000814:	f7ff fff0 	bl	80007f8 <__sfp_lock_acquire>
 8000818:	6a23      	ldr	r3, [r4, #32]
 800081a:	b11b      	cbz	r3, 8000824 <__sinit+0x14>
 800081c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000820:	f7ff bff0 	b.w	8000804 <__sfp_lock_release>
 8000824:	4b04      	ldr	r3, [pc, #16]	; (8000838 <__sinit+0x28>)
 8000826:	6223      	str	r3, [r4, #32]
 8000828:	4b04      	ldr	r3, [pc, #16]	; (800083c <__sinit+0x2c>)
 800082a:	681b      	ldr	r3, [r3, #0]
 800082c:	2b00      	cmp	r3, #0
 800082e:	d1f5      	bne.n	800081c <__sinit+0xc>
 8000830:	f7ff ffc4 	bl	80007bc <global_stdio_init.part.0>
 8000834:	e7f2      	b.n	800081c <__sinit+0xc>
 8000836:	bf00      	nop
 8000838:	0800077d 	.word	0x0800077d
 800083c:	200001bc 	.word	0x200001bc

08000840 <_fwalk_sglue>:
 8000840:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000844:	4607      	mov	r7, r0
 8000846:	4688      	mov	r8, r1
 8000848:	4614      	mov	r4, r2
 800084a:	2600      	movs	r6, #0
 800084c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000850:	f1b9 0901 	subs.w	r9, r9, #1
 8000854:	d505      	bpl.n	8000862 <_fwalk_sglue+0x22>
 8000856:	6824      	ldr	r4, [r4, #0]
 8000858:	2c00      	cmp	r4, #0
 800085a:	d1f7      	bne.n	800084c <_fwalk_sglue+0xc>
 800085c:	4630      	mov	r0, r6
 800085e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000862:	89ab      	ldrh	r3, [r5, #12]
 8000864:	2b01      	cmp	r3, #1
 8000866:	d907      	bls.n	8000878 <_fwalk_sglue+0x38>
 8000868:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800086c:	3301      	adds	r3, #1
 800086e:	d003      	beq.n	8000878 <_fwalk_sglue+0x38>
 8000870:	4629      	mov	r1, r5
 8000872:	4638      	mov	r0, r7
 8000874:	47c0      	blx	r8
 8000876:	4306      	orrs	r6, r0
 8000878:	3568      	adds	r5, #104	; 0x68
 800087a:	e7e9      	b.n	8000850 <_fwalk_sglue+0x10>

0800087c <iprintf>:
 800087c:	b40f      	push	{r0, r1, r2, r3}
 800087e:	b507      	push	{r0, r1, r2, lr}
 8000880:	4906      	ldr	r1, [pc, #24]	; (800089c <iprintf+0x20>)
 8000882:	ab04      	add	r3, sp, #16
 8000884:	6808      	ldr	r0, [r1, #0]
 8000886:	f853 2b04 	ldr.w	r2, [r3], #4
 800088a:	6881      	ldr	r1, [r0, #8]
 800088c:	9301      	str	r3, [sp, #4]
 800088e:	f000 f9e3 	bl	8000c58 <_vfiprintf_r>
 8000892:	b003      	add	sp, #12
 8000894:	f85d eb04 	ldr.w	lr, [sp], #4
 8000898:	b004      	add	sp, #16
 800089a:	4770      	bx	lr
 800089c:	2000005c 	.word	0x2000005c

080008a0 <__sread>:
 80008a0:	b510      	push	{r4, lr}
 80008a2:	460c      	mov	r4, r1
 80008a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008a8:	f000 f868 	bl	800097c <_read_r>
 80008ac:	2800      	cmp	r0, #0
 80008ae:	bfab      	itete	ge
 80008b0:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80008b2:	89a3      	ldrhlt	r3, [r4, #12]
 80008b4:	181b      	addge	r3, r3, r0
 80008b6:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80008ba:	bfac      	ite	ge
 80008bc:	6563      	strge	r3, [r4, #84]	; 0x54
 80008be:	81a3      	strhlt	r3, [r4, #12]
 80008c0:	bd10      	pop	{r4, pc}

080008c2 <__swrite>:
 80008c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008c6:	461f      	mov	r7, r3
 80008c8:	898b      	ldrh	r3, [r1, #12]
 80008ca:	4605      	mov	r5, r0
 80008cc:	05db      	lsls	r3, r3, #23
 80008ce:	460c      	mov	r4, r1
 80008d0:	4616      	mov	r6, r2
 80008d2:	d505      	bpl.n	80008e0 <__swrite+0x1e>
 80008d4:	2302      	movs	r3, #2
 80008d6:	2200      	movs	r2, #0
 80008d8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80008dc:	f000 f83c 	bl	8000958 <_lseek_r>
 80008e0:	89a3      	ldrh	r3, [r4, #12]
 80008e2:	4632      	mov	r2, r6
 80008e4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80008e8:	81a3      	strh	r3, [r4, #12]
 80008ea:	4628      	mov	r0, r5
 80008ec:	463b      	mov	r3, r7
 80008ee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80008f2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80008f6:	f000 b853 	b.w	80009a0 <_write_r>

080008fa <__sseek>:
 80008fa:	b510      	push	{r4, lr}
 80008fc:	460c      	mov	r4, r1
 80008fe:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000902:	f000 f829 	bl	8000958 <_lseek_r>
 8000906:	1c43      	adds	r3, r0, #1
 8000908:	89a3      	ldrh	r3, [r4, #12]
 800090a:	bf15      	itete	ne
 800090c:	6560      	strne	r0, [r4, #84]	; 0x54
 800090e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000912:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000916:	81a3      	strheq	r3, [r4, #12]
 8000918:	bf18      	it	ne
 800091a:	81a3      	strhne	r3, [r4, #12]
 800091c:	bd10      	pop	{r4, pc}

0800091e <__sclose>:
 800091e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000922:	f000 b809 	b.w	8000938 <_close_r>

08000926 <memset>:
 8000926:	4603      	mov	r3, r0
 8000928:	4402      	add	r2, r0
 800092a:	4293      	cmp	r3, r2
 800092c:	d100      	bne.n	8000930 <memset+0xa>
 800092e:	4770      	bx	lr
 8000930:	f803 1b01 	strb.w	r1, [r3], #1
 8000934:	e7f9      	b.n	800092a <memset+0x4>
	...

08000938 <_close_r>:
 8000938:	b538      	push	{r3, r4, r5, lr}
 800093a:	2300      	movs	r3, #0
 800093c:	4d05      	ldr	r5, [pc, #20]	; (8000954 <_close_r+0x1c>)
 800093e:	4604      	mov	r4, r0
 8000940:	4608      	mov	r0, r1
 8000942:	602b      	str	r3, [r5, #0]
 8000944:	f7ff fe34 	bl	80005b0 <_close>
 8000948:	1c43      	adds	r3, r0, #1
 800094a:	d102      	bne.n	8000952 <_close_r+0x1a>
 800094c:	682b      	ldr	r3, [r5, #0]
 800094e:	b103      	cbz	r3, 8000952 <_close_r+0x1a>
 8000950:	6023      	str	r3, [r4, #0]
 8000952:	bd38      	pop	{r3, r4, r5, pc}
 8000954:	200001c0 	.word	0x200001c0

08000958 <_lseek_r>:
 8000958:	b538      	push	{r3, r4, r5, lr}
 800095a:	4604      	mov	r4, r0
 800095c:	4608      	mov	r0, r1
 800095e:	4611      	mov	r1, r2
 8000960:	2200      	movs	r2, #0
 8000962:	4d05      	ldr	r5, [pc, #20]	; (8000978 <_lseek_r+0x20>)
 8000964:	602a      	str	r2, [r5, #0]
 8000966:	461a      	mov	r2, r3
 8000968:	f7ff fe46 	bl	80005f8 <_lseek>
 800096c:	1c43      	adds	r3, r0, #1
 800096e:	d102      	bne.n	8000976 <_lseek_r+0x1e>
 8000970:	682b      	ldr	r3, [r5, #0]
 8000972:	b103      	cbz	r3, 8000976 <_lseek_r+0x1e>
 8000974:	6023      	str	r3, [r4, #0]
 8000976:	bd38      	pop	{r3, r4, r5, pc}
 8000978:	200001c0 	.word	0x200001c0

0800097c <_read_r>:
 800097c:	b538      	push	{r3, r4, r5, lr}
 800097e:	4604      	mov	r4, r0
 8000980:	4608      	mov	r0, r1
 8000982:	4611      	mov	r1, r2
 8000984:	2200      	movs	r2, #0
 8000986:	4d05      	ldr	r5, [pc, #20]	; (800099c <_read_r+0x20>)
 8000988:	602a      	str	r2, [r5, #0]
 800098a:	461a      	mov	r2, r3
 800098c:	f7ff fdd7 	bl	800053e <_read>
 8000990:	1c43      	adds	r3, r0, #1
 8000992:	d102      	bne.n	800099a <_read_r+0x1e>
 8000994:	682b      	ldr	r3, [r5, #0]
 8000996:	b103      	cbz	r3, 800099a <_read_r+0x1e>
 8000998:	6023      	str	r3, [r4, #0]
 800099a:	bd38      	pop	{r3, r4, r5, pc}
 800099c:	200001c0 	.word	0x200001c0

080009a0 <_write_r>:
 80009a0:	b538      	push	{r3, r4, r5, lr}
 80009a2:	4604      	mov	r4, r0
 80009a4:	4608      	mov	r0, r1
 80009a6:	4611      	mov	r1, r2
 80009a8:	2200      	movs	r2, #0
 80009aa:	4d05      	ldr	r5, [pc, #20]	; (80009c0 <_write_r+0x20>)
 80009ac:	602a      	str	r2, [r5, #0]
 80009ae:	461a      	mov	r2, r3
 80009b0:	f7ff fde2 	bl	8000578 <_write>
 80009b4:	1c43      	adds	r3, r0, #1
 80009b6:	d102      	bne.n	80009be <_write_r+0x1e>
 80009b8:	682b      	ldr	r3, [r5, #0]
 80009ba:	b103      	cbz	r3, 80009be <_write_r+0x1e>
 80009bc:	6023      	str	r3, [r4, #0]
 80009be:	bd38      	pop	{r3, r4, r5, pc}
 80009c0:	200001c0 	.word	0x200001c0

080009c4 <__errno>:
 80009c4:	4b01      	ldr	r3, [pc, #4]	; (80009cc <__errno+0x8>)
 80009c6:	6818      	ldr	r0, [r3, #0]
 80009c8:	4770      	bx	lr
 80009ca:	bf00      	nop
 80009cc:	2000005c 	.word	0x2000005c

080009d0 <__libc_init_array>:
 80009d0:	b570      	push	{r4, r5, r6, lr}
 80009d2:	2600      	movs	r6, #0
 80009d4:	4d0c      	ldr	r5, [pc, #48]	; (8000a08 <__libc_init_array+0x38>)
 80009d6:	4c0d      	ldr	r4, [pc, #52]	; (8000a0c <__libc_init_array+0x3c>)
 80009d8:	1b64      	subs	r4, r4, r5
 80009da:	10a4      	asrs	r4, r4, #2
 80009dc:	42a6      	cmp	r6, r4
 80009de:	d109      	bne.n	80009f4 <__libc_init_array+0x24>
 80009e0:	f000 fdca 	bl	8001578 <_init>
 80009e4:	2600      	movs	r6, #0
 80009e6:	4d0a      	ldr	r5, [pc, #40]	; (8000a10 <__libc_init_array+0x40>)
 80009e8:	4c0a      	ldr	r4, [pc, #40]	; (8000a14 <__libc_init_array+0x44>)
 80009ea:	1b64      	subs	r4, r4, r5
 80009ec:	10a4      	asrs	r4, r4, #2
 80009ee:	42a6      	cmp	r6, r4
 80009f0:	d105      	bne.n	80009fe <__libc_init_array+0x2e>
 80009f2:	bd70      	pop	{r4, r5, r6, pc}
 80009f4:	f855 3b04 	ldr.w	r3, [r5], #4
 80009f8:	4798      	blx	r3
 80009fa:	3601      	adds	r6, #1
 80009fc:	e7ee      	b.n	80009dc <__libc_init_array+0xc>
 80009fe:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a02:	4798      	blx	r3
 8000a04:	3601      	adds	r6, #1
 8000a06:	e7f2      	b.n	80009ee <__libc_init_array+0x1e>
 8000a08:	080015d0 	.word	0x080015d0
 8000a0c:	080015d0 	.word	0x080015d0
 8000a10:	080015d0 	.word	0x080015d0
 8000a14:	080015d4 	.word	0x080015d4

08000a18 <__retarget_lock_init_recursive>:
 8000a18:	4770      	bx	lr

08000a1a <__retarget_lock_acquire_recursive>:
 8000a1a:	4770      	bx	lr

08000a1c <__retarget_lock_release_recursive>:
 8000a1c:	4770      	bx	lr
	...

08000a20 <_free_r>:
 8000a20:	b538      	push	{r3, r4, r5, lr}
 8000a22:	4605      	mov	r5, r0
 8000a24:	2900      	cmp	r1, #0
 8000a26:	d040      	beq.n	8000aaa <_free_r+0x8a>
 8000a28:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000a2c:	1f0c      	subs	r4, r1, #4
 8000a2e:	2b00      	cmp	r3, #0
 8000a30:	bfb8      	it	lt
 8000a32:	18e4      	addlt	r4, r4, r3
 8000a34:	f000 f8dc 	bl	8000bf0 <__malloc_lock>
 8000a38:	4a1c      	ldr	r2, [pc, #112]	; (8000aac <_free_r+0x8c>)
 8000a3a:	6813      	ldr	r3, [r2, #0]
 8000a3c:	b933      	cbnz	r3, 8000a4c <_free_r+0x2c>
 8000a3e:	6063      	str	r3, [r4, #4]
 8000a40:	6014      	str	r4, [r2, #0]
 8000a42:	4628      	mov	r0, r5
 8000a44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000a48:	f000 b8d8 	b.w	8000bfc <__malloc_unlock>
 8000a4c:	42a3      	cmp	r3, r4
 8000a4e:	d908      	bls.n	8000a62 <_free_r+0x42>
 8000a50:	6820      	ldr	r0, [r4, #0]
 8000a52:	1821      	adds	r1, r4, r0
 8000a54:	428b      	cmp	r3, r1
 8000a56:	bf01      	itttt	eq
 8000a58:	6819      	ldreq	r1, [r3, #0]
 8000a5a:	685b      	ldreq	r3, [r3, #4]
 8000a5c:	1809      	addeq	r1, r1, r0
 8000a5e:	6021      	streq	r1, [r4, #0]
 8000a60:	e7ed      	b.n	8000a3e <_free_r+0x1e>
 8000a62:	461a      	mov	r2, r3
 8000a64:	685b      	ldr	r3, [r3, #4]
 8000a66:	b10b      	cbz	r3, 8000a6c <_free_r+0x4c>
 8000a68:	42a3      	cmp	r3, r4
 8000a6a:	d9fa      	bls.n	8000a62 <_free_r+0x42>
 8000a6c:	6811      	ldr	r1, [r2, #0]
 8000a6e:	1850      	adds	r0, r2, r1
 8000a70:	42a0      	cmp	r0, r4
 8000a72:	d10b      	bne.n	8000a8c <_free_r+0x6c>
 8000a74:	6820      	ldr	r0, [r4, #0]
 8000a76:	4401      	add	r1, r0
 8000a78:	1850      	adds	r0, r2, r1
 8000a7a:	4283      	cmp	r3, r0
 8000a7c:	6011      	str	r1, [r2, #0]
 8000a7e:	d1e0      	bne.n	8000a42 <_free_r+0x22>
 8000a80:	6818      	ldr	r0, [r3, #0]
 8000a82:	685b      	ldr	r3, [r3, #4]
 8000a84:	4408      	add	r0, r1
 8000a86:	6010      	str	r0, [r2, #0]
 8000a88:	6053      	str	r3, [r2, #4]
 8000a8a:	e7da      	b.n	8000a42 <_free_r+0x22>
 8000a8c:	d902      	bls.n	8000a94 <_free_r+0x74>
 8000a8e:	230c      	movs	r3, #12
 8000a90:	602b      	str	r3, [r5, #0]
 8000a92:	e7d6      	b.n	8000a42 <_free_r+0x22>
 8000a94:	6820      	ldr	r0, [r4, #0]
 8000a96:	1821      	adds	r1, r4, r0
 8000a98:	428b      	cmp	r3, r1
 8000a9a:	bf01      	itttt	eq
 8000a9c:	6819      	ldreq	r1, [r3, #0]
 8000a9e:	685b      	ldreq	r3, [r3, #4]
 8000aa0:	1809      	addeq	r1, r1, r0
 8000aa2:	6021      	streq	r1, [r4, #0]
 8000aa4:	6063      	str	r3, [r4, #4]
 8000aa6:	6054      	str	r4, [r2, #4]
 8000aa8:	e7cb      	b.n	8000a42 <_free_r+0x22>
 8000aaa:	bd38      	pop	{r3, r4, r5, pc}
 8000aac:	200001c8 	.word	0x200001c8

08000ab0 <sbrk_aligned>:
 8000ab0:	b570      	push	{r4, r5, r6, lr}
 8000ab2:	4e0e      	ldr	r6, [pc, #56]	; (8000aec <sbrk_aligned+0x3c>)
 8000ab4:	460c      	mov	r4, r1
 8000ab6:	6831      	ldr	r1, [r6, #0]
 8000ab8:	4605      	mov	r5, r0
 8000aba:	b911      	cbnz	r1, 8000ac2 <sbrk_aligned+0x12>
 8000abc:	f000 fcba 	bl	8001434 <_sbrk_r>
 8000ac0:	6030      	str	r0, [r6, #0]
 8000ac2:	4621      	mov	r1, r4
 8000ac4:	4628      	mov	r0, r5
 8000ac6:	f000 fcb5 	bl	8001434 <_sbrk_r>
 8000aca:	1c43      	adds	r3, r0, #1
 8000acc:	d00a      	beq.n	8000ae4 <sbrk_aligned+0x34>
 8000ace:	1cc4      	adds	r4, r0, #3
 8000ad0:	f024 0403 	bic.w	r4, r4, #3
 8000ad4:	42a0      	cmp	r0, r4
 8000ad6:	d007      	beq.n	8000ae8 <sbrk_aligned+0x38>
 8000ad8:	1a21      	subs	r1, r4, r0
 8000ada:	4628      	mov	r0, r5
 8000adc:	f000 fcaa 	bl	8001434 <_sbrk_r>
 8000ae0:	3001      	adds	r0, #1
 8000ae2:	d101      	bne.n	8000ae8 <sbrk_aligned+0x38>
 8000ae4:	f04f 34ff 	mov.w	r4, #4294967295
 8000ae8:	4620      	mov	r0, r4
 8000aea:	bd70      	pop	{r4, r5, r6, pc}
 8000aec:	200001cc 	.word	0x200001cc

08000af0 <_malloc_r>:
 8000af0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000af4:	1ccd      	adds	r5, r1, #3
 8000af6:	f025 0503 	bic.w	r5, r5, #3
 8000afa:	3508      	adds	r5, #8
 8000afc:	2d0c      	cmp	r5, #12
 8000afe:	bf38      	it	cc
 8000b00:	250c      	movcc	r5, #12
 8000b02:	2d00      	cmp	r5, #0
 8000b04:	4607      	mov	r7, r0
 8000b06:	db01      	blt.n	8000b0c <_malloc_r+0x1c>
 8000b08:	42a9      	cmp	r1, r5
 8000b0a:	d905      	bls.n	8000b18 <_malloc_r+0x28>
 8000b0c:	230c      	movs	r3, #12
 8000b0e:	2600      	movs	r6, #0
 8000b10:	603b      	str	r3, [r7, #0]
 8000b12:	4630      	mov	r0, r6
 8000b14:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b18:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000bec <_malloc_r+0xfc>
 8000b1c:	f000 f868 	bl	8000bf0 <__malloc_lock>
 8000b20:	f8d8 3000 	ldr.w	r3, [r8]
 8000b24:	461c      	mov	r4, r3
 8000b26:	bb5c      	cbnz	r4, 8000b80 <_malloc_r+0x90>
 8000b28:	4629      	mov	r1, r5
 8000b2a:	4638      	mov	r0, r7
 8000b2c:	f7ff ffc0 	bl	8000ab0 <sbrk_aligned>
 8000b30:	1c43      	adds	r3, r0, #1
 8000b32:	4604      	mov	r4, r0
 8000b34:	d155      	bne.n	8000be2 <_malloc_r+0xf2>
 8000b36:	f8d8 4000 	ldr.w	r4, [r8]
 8000b3a:	4626      	mov	r6, r4
 8000b3c:	2e00      	cmp	r6, #0
 8000b3e:	d145      	bne.n	8000bcc <_malloc_r+0xdc>
 8000b40:	2c00      	cmp	r4, #0
 8000b42:	d048      	beq.n	8000bd6 <_malloc_r+0xe6>
 8000b44:	6823      	ldr	r3, [r4, #0]
 8000b46:	4631      	mov	r1, r6
 8000b48:	4638      	mov	r0, r7
 8000b4a:	eb04 0903 	add.w	r9, r4, r3
 8000b4e:	f000 fc71 	bl	8001434 <_sbrk_r>
 8000b52:	4581      	cmp	r9, r0
 8000b54:	d13f      	bne.n	8000bd6 <_malloc_r+0xe6>
 8000b56:	6821      	ldr	r1, [r4, #0]
 8000b58:	4638      	mov	r0, r7
 8000b5a:	1a6d      	subs	r5, r5, r1
 8000b5c:	4629      	mov	r1, r5
 8000b5e:	f7ff ffa7 	bl	8000ab0 <sbrk_aligned>
 8000b62:	3001      	adds	r0, #1
 8000b64:	d037      	beq.n	8000bd6 <_malloc_r+0xe6>
 8000b66:	6823      	ldr	r3, [r4, #0]
 8000b68:	442b      	add	r3, r5
 8000b6a:	6023      	str	r3, [r4, #0]
 8000b6c:	f8d8 3000 	ldr.w	r3, [r8]
 8000b70:	2b00      	cmp	r3, #0
 8000b72:	d038      	beq.n	8000be6 <_malloc_r+0xf6>
 8000b74:	685a      	ldr	r2, [r3, #4]
 8000b76:	42a2      	cmp	r2, r4
 8000b78:	d12b      	bne.n	8000bd2 <_malloc_r+0xe2>
 8000b7a:	2200      	movs	r2, #0
 8000b7c:	605a      	str	r2, [r3, #4]
 8000b7e:	e00f      	b.n	8000ba0 <_malloc_r+0xb0>
 8000b80:	6822      	ldr	r2, [r4, #0]
 8000b82:	1b52      	subs	r2, r2, r5
 8000b84:	d41f      	bmi.n	8000bc6 <_malloc_r+0xd6>
 8000b86:	2a0b      	cmp	r2, #11
 8000b88:	d917      	bls.n	8000bba <_malloc_r+0xca>
 8000b8a:	1961      	adds	r1, r4, r5
 8000b8c:	42a3      	cmp	r3, r4
 8000b8e:	6025      	str	r5, [r4, #0]
 8000b90:	bf18      	it	ne
 8000b92:	6059      	strne	r1, [r3, #4]
 8000b94:	6863      	ldr	r3, [r4, #4]
 8000b96:	bf08      	it	eq
 8000b98:	f8c8 1000 	streq.w	r1, [r8]
 8000b9c:	5162      	str	r2, [r4, r5]
 8000b9e:	604b      	str	r3, [r1, #4]
 8000ba0:	4638      	mov	r0, r7
 8000ba2:	f104 060b 	add.w	r6, r4, #11
 8000ba6:	f000 f829 	bl	8000bfc <__malloc_unlock>
 8000baa:	f026 0607 	bic.w	r6, r6, #7
 8000bae:	1d23      	adds	r3, r4, #4
 8000bb0:	1af2      	subs	r2, r6, r3
 8000bb2:	d0ae      	beq.n	8000b12 <_malloc_r+0x22>
 8000bb4:	1b9b      	subs	r3, r3, r6
 8000bb6:	50a3      	str	r3, [r4, r2]
 8000bb8:	e7ab      	b.n	8000b12 <_malloc_r+0x22>
 8000bba:	42a3      	cmp	r3, r4
 8000bbc:	6862      	ldr	r2, [r4, #4]
 8000bbe:	d1dd      	bne.n	8000b7c <_malloc_r+0x8c>
 8000bc0:	f8c8 2000 	str.w	r2, [r8]
 8000bc4:	e7ec      	b.n	8000ba0 <_malloc_r+0xb0>
 8000bc6:	4623      	mov	r3, r4
 8000bc8:	6864      	ldr	r4, [r4, #4]
 8000bca:	e7ac      	b.n	8000b26 <_malloc_r+0x36>
 8000bcc:	4634      	mov	r4, r6
 8000bce:	6876      	ldr	r6, [r6, #4]
 8000bd0:	e7b4      	b.n	8000b3c <_malloc_r+0x4c>
 8000bd2:	4613      	mov	r3, r2
 8000bd4:	e7cc      	b.n	8000b70 <_malloc_r+0x80>
 8000bd6:	230c      	movs	r3, #12
 8000bd8:	4638      	mov	r0, r7
 8000bda:	603b      	str	r3, [r7, #0]
 8000bdc:	f000 f80e 	bl	8000bfc <__malloc_unlock>
 8000be0:	e797      	b.n	8000b12 <_malloc_r+0x22>
 8000be2:	6025      	str	r5, [r4, #0]
 8000be4:	e7dc      	b.n	8000ba0 <_malloc_r+0xb0>
 8000be6:	605b      	str	r3, [r3, #4]
 8000be8:	deff      	udf	#255	; 0xff
 8000bea:	bf00      	nop
 8000bec:	200001c8 	.word	0x200001c8

08000bf0 <__malloc_lock>:
 8000bf0:	4801      	ldr	r0, [pc, #4]	; (8000bf8 <__malloc_lock+0x8>)
 8000bf2:	f7ff bf12 	b.w	8000a1a <__retarget_lock_acquire_recursive>
 8000bf6:	bf00      	nop
 8000bf8:	200001c4 	.word	0x200001c4

08000bfc <__malloc_unlock>:
 8000bfc:	4801      	ldr	r0, [pc, #4]	; (8000c04 <__malloc_unlock+0x8>)
 8000bfe:	f7ff bf0d 	b.w	8000a1c <__retarget_lock_release_recursive>
 8000c02:	bf00      	nop
 8000c04:	200001c4 	.word	0x200001c4

08000c08 <__sfputc_r>:
 8000c08:	6893      	ldr	r3, [r2, #8]
 8000c0a:	b410      	push	{r4}
 8000c0c:	3b01      	subs	r3, #1
 8000c0e:	2b00      	cmp	r3, #0
 8000c10:	6093      	str	r3, [r2, #8]
 8000c12:	da07      	bge.n	8000c24 <__sfputc_r+0x1c>
 8000c14:	6994      	ldr	r4, [r2, #24]
 8000c16:	42a3      	cmp	r3, r4
 8000c18:	db01      	blt.n	8000c1e <__sfputc_r+0x16>
 8000c1a:	290a      	cmp	r1, #10
 8000c1c:	d102      	bne.n	8000c24 <__sfputc_r+0x1c>
 8000c1e:	bc10      	pop	{r4}
 8000c20:	f000 bb72 	b.w	8001308 <__swbuf_r>
 8000c24:	6813      	ldr	r3, [r2, #0]
 8000c26:	1c58      	adds	r0, r3, #1
 8000c28:	6010      	str	r0, [r2, #0]
 8000c2a:	7019      	strb	r1, [r3, #0]
 8000c2c:	4608      	mov	r0, r1
 8000c2e:	bc10      	pop	{r4}
 8000c30:	4770      	bx	lr

08000c32 <__sfputs_r>:
 8000c32:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c34:	4606      	mov	r6, r0
 8000c36:	460f      	mov	r7, r1
 8000c38:	4614      	mov	r4, r2
 8000c3a:	18d5      	adds	r5, r2, r3
 8000c3c:	42ac      	cmp	r4, r5
 8000c3e:	d101      	bne.n	8000c44 <__sfputs_r+0x12>
 8000c40:	2000      	movs	r0, #0
 8000c42:	e007      	b.n	8000c54 <__sfputs_r+0x22>
 8000c44:	463a      	mov	r2, r7
 8000c46:	4630      	mov	r0, r6
 8000c48:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c4c:	f7ff ffdc 	bl	8000c08 <__sfputc_r>
 8000c50:	1c43      	adds	r3, r0, #1
 8000c52:	d1f3      	bne.n	8000c3c <__sfputs_r+0xa>
 8000c54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c58 <_vfiprintf_r>:
 8000c58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c5c:	460d      	mov	r5, r1
 8000c5e:	4614      	mov	r4, r2
 8000c60:	4698      	mov	r8, r3
 8000c62:	4606      	mov	r6, r0
 8000c64:	b09d      	sub	sp, #116	; 0x74
 8000c66:	b118      	cbz	r0, 8000c70 <_vfiprintf_r+0x18>
 8000c68:	6a03      	ldr	r3, [r0, #32]
 8000c6a:	b90b      	cbnz	r3, 8000c70 <_vfiprintf_r+0x18>
 8000c6c:	f7ff fdd0 	bl	8000810 <__sinit>
 8000c70:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c72:	07d9      	lsls	r1, r3, #31
 8000c74:	d405      	bmi.n	8000c82 <_vfiprintf_r+0x2a>
 8000c76:	89ab      	ldrh	r3, [r5, #12]
 8000c78:	059a      	lsls	r2, r3, #22
 8000c7a:	d402      	bmi.n	8000c82 <_vfiprintf_r+0x2a>
 8000c7c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c7e:	f7ff fecc 	bl	8000a1a <__retarget_lock_acquire_recursive>
 8000c82:	89ab      	ldrh	r3, [r5, #12]
 8000c84:	071b      	lsls	r3, r3, #28
 8000c86:	d501      	bpl.n	8000c8c <_vfiprintf_r+0x34>
 8000c88:	692b      	ldr	r3, [r5, #16]
 8000c8a:	b99b      	cbnz	r3, 8000cb4 <_vfiprintf_r+0x5c>
 8000c8c:	4629      	mov	r1, r5
 8000c8e:	4630      	mov	r0, r6
 8000c90:	f000 fb78 	bl	8001384 <__swsetup_r>
 8000c94:	b170      	cbz	r0, 8000cb4 <_vfiprintf_r+0x5c>
 8000c96:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c98:	07dc      	lsls	r4, r3, #31
 8000c9a:	d504      	bpl.n	8000ca6 <_vfiprintf_r+0x4e>
 8000c9c:	f04f 30ff 	mov.w	r0, #4294967295
 8000ca0:	b01d      	add	sp, #116	; 0x74
 8000ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ca6:	89ab      	ldrh	r3, [r5, #12]
 8000ca8:	0598      	lsls	r0, r3, #22
 8000caa:	d4f7      	bmi.n	8000c9c <_vfiprintf_r+0x44>
 8000cac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cae:	f7ff feb5 	bl	8000a1c <__retarget_lock_release_recursive>
 8000cb2:	e7f3      	b.n	8000c9c <_vfiprintf_r+0x44>
 8000cb4:	2300      	movs	r3, #0
 8000cb6:	9309      	str	r3, [sp, #36]	; 0x24
 8000cb8:	2320      	movs	r3, #32
 8000cba:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000cbe:	2330      	movs	r3, #48	; 0x30
 8000cc0:	f04f 0901 	mov.w	r9, #1
 8000cc4:	f8cd 800c 	str.w	r8, [sp, #12]
 8000cc8:	f8df 81ac 	ldr.w	r8, [pc, #428]	; 8000e78 <_vfiprintf_r+0x220>
 8000ccc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000cd0:	4623      	mov	r3, r4
 8000cd2:	469a      	mov	sl, r3
 8000cd4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000cd8:	b10a      	cbz	r2, 8000cde <_vfiprintf_r+0x86>
 8000cda:	2a25      	cmp	r2, #37	; 0x25
 8000cdc:	d1f9      	bne.n	8000cd2 <_vfiprintf_r+0x7a>
 8000cde:	ebba 0b04 	subs.w	fp, sl, r4
 8000ce2:	d00b      	beq.n	8000cfc <_vfiprintf_r+0xa4>
 8000ce4:	465b      	mov	r3, fp
 8000ce6:	4622      	mov	r2, r4
 8000ce8:	4629      	mov	r1, r5
 8000cea:	4630      	mov	r0, r6
 8000cec:	f7ff ffa1 	bl	8000c32 <__sfputs_r>
 8000cf0:	3001      	adds	r0, #1
 8000cf2:	f000 80a9 	beq.w	8000e48 <_vfiprintf_r+0x1f0>
 8000cf6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000cf8:	445a      	add	r2, fp
 8000cfa:	9209      	str	r2, [sp, #36]	; 0x24
 8000cfc:	f89a 3000 	ldrb.w	r3, [sl]
 8000d00:	2b00      	cmp	r3, #0
 8000d02:	f000 80a1 	beq.w	8000e48 <_vfiprintf_r+0x1f0>
 8000d06:	2300      	movs	r3, #0
 8000d08:	f04f 32ff 	mov.w	r2, #4294967295
 8000d0c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d10:	f10a 0a01 	add.w	sl, sl, #1
 8000d14:	9304      	str	r3, [sp, #16]
 8000d16:	9307      	str	r3, [sp, #28]
 8000d18:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000d1c:	931a      	str	r3, [sp, #104]	; 0x68
 8000d1e:	4654      	mov	r4, sl
 8000d20:	2205      	movs	r2, #5
 8000d22:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d26:	4854      	ldr	r0, [pc, #336]	; (8000e78 <_vfiprintf_r+0x220>)
 8000d28:	f000 fb94 	bl	8001454 <memchr>
 8000d2c:	9a04      	ldr	r2, [sp, #16]
 8000d2e:	b9d8      	cbnz	r0, 8000d68 <_vfiprintf_r+0x110>
 8000d30:	06d1      	lsls	r1, r2, #27
 8000d32:	bf44      	itt	mi
 8000d34:	2320      	movmi	r3, #32
 8000d36:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d3a:	0713      	lsls	r3, r2, #28
 8000d3c:	bf44      	itt	mi
 8000d3e:	232b      	movmi	r3, #43	; 0x2b
 8000d40:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d44:	f89a 3000 	ldrb.w	r3, [sl]
 8000d48:	2b2a      	cmp	r3, #42	; 0x2a
 8000d4a:	d015      	beq.n	8000d78 <_vfiprintf_r+0x120>
 8000d4c:	4654      	mov	r4, sl
 8000d4e:	2000      	movs	r0, #0
 8000d50:	f04f 0c0a 	mov.w	ip, #10
 8000d54:	9a07      	ldr	r2, [sp, #28]
 8000d56:	4621      	mov	r1, r4
 8000d58:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d5c:	3b30      	subs	r3, #48	; 0x30
 8000d5e:	2b09      	cmp	r3, #9
 8000d60:	d94d      	bls.n	8000dfe <_vfiprintf_r+0x1a6>
 8000d62:	b1b0      	cbz	r0, 8000d92 <_vfiprintf_r+0x13a>
 8000d64:	9207      	str	r2, [sp, #28]
 8000d66:	e014      	b.n	8000d92 <_vfiprintf_r+0x13a>
 8000d68:	eba0 0308 	sub.w	r3, r0, r8
 8000d6c:	fa09 f303 	lsl.w	r3, r9, r3
 8000d70:	4313      	orrs	r3, r2
 8000d72:	46a2      	mov	sl, r4
 8000d74:	9304      	str	r3, [sp, #16]
 8000d76:	e7d2      	b.n	8000d1e <_vfiprintf_r+0xc6>
 8000d78:	9b03      	ldr	r3, [sp, #12]
 8000d7a:	1d19      	adds	r1, r3, #4
 8000d7c:	681b      	ldr	r3, [r3, #0]
 8000d7e:	9103      	str	r1, [sp, #12]
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	bfbb      	ittet	lt
 8000d84:	425b      	neglt	r3, r3
 8000d86:	f042 0202 	orrlt.w	r2, r2, #2
 8000d8a:	9307      	strge	r3, [sp, #28]
 8000d8c:	9307      	strlt	r3, [sp, #28]
 8000d8e:	bfb8      	it	lt
 8000d90:	9204      	strlt	r2, [sp, #16]
 8000d92:	7823      	ldrb	r3, [r4, #0]
 8000d94:	2b2e      	cmp	r3, #46	; 0x2e
 8000d96:	d10c      	bne.n	8000db2 <_vfiprintf_r+0x15a>
 8000d98:	7863      	ldrb	r3, [r4, #1]
 8000d9a:	2b2a      	cmp	r3, #42	; 0x2a
 8000d9c:	d134      	bne.n	8000e08 <_vfiprintf_r+0x1b0>
 8000d9e:	9b03      	ldr	r3, [sp, #12]
 8000da0:	3402      	adds	r4, #2
 8000da2:	1d1a      	adds	r2, r3, #4
 8000da4:	681b      	ldr	r3, [r3, #0]
 8000da6:	9203      	str	r2, [sp, #12]
 8000da8:	2b00      	cmp	r3, #0
 8000daa:	bfb8      	it	lt
 8000dac:	f04f 33ff 	movlt.w	r3, #4294967295
 8000db0:	9305      	str	r3, [sp, #20]
 8000db2:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 8000e7c <_vfiprintf_r+0x224>
 8000db6:	2203      	movs	r2, #3
 8000db8:	4650      	mov	r0, sl
 8000dba:	7821      	ldrb	r1, [r4, #0]
 8000dbc:	f000 fb4a 	bl	8001454 <memchr>
 8000dc0:	b138      	cbz	r0, 8000dd2 <_vfiprintf_r+0x17a>
 8000dc2:	2240      	movs	r2, #64	; 0x40
 8000dc4:	9b04      	ldr	r3, [sp, #16]
 8000dc6:	eba0 000a 	sub.w	r0, r0, sl
 8000dca:	4082      	lsls	r2, r0
 8000dcc:	4313      	orrs	r3, r2
 8000dce:	3401      	adds	r4, #1
 8000dd0:	9304      	str	r3, [sp, #16]
 8000dd2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dd6:	2206      	movs	r2, #6
 8000dd8:	4829      	ldr	r0, [pc, #164]	; (8000e80 <_vfiprintf_r+0x228>)
 8000dda:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000dde:	f000 fb39 	bl	8001454 <memchr>
 8000de2:	2800      	cmp	r0, #0
 8000de4:	d03f      	beq.n	8000e66 <_vfiprintf_r+0x20e>
 8000de6:	4b27      	ldr	r3, [pc, #156]	; (8000e84 <_vfiprintf_r+0x22c>)
 8000de8:	bb1b      	cbnz	r3, 8000e32 <_vfiprintf_r+0x1da>
 8000dea:	9b03      	ldr	r3, [sp, #12]
 8000dec:	3307      	adds	r3, #7
 8000dee:	f023 0307 	bic.w	r3, r3, #7
 8000df2:	3308      	adds	r3, #8
 8000df4:	9303      	str	r3, [sp, #12]
 8000df6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000df8:	443b      	add	r3, r7
 8000dfa:	9309      	str	r3, [sp, #36]	; 0x24
 8000dfc:	e768      	b.n	8000cd0 <_vfiprintf_r+0x78>
 8000dfe:	460c      	mov	r4, r1
 8000e00:	2001      	movs	r0, #1
 8000e02:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e06:	e7a6      	b.n	8000d56 <_vfiprintf_r+0xfe>
 8000e08:	2300      	movs	r3, #0
 8000e0a:	f04f 0c0a 	mov.w	ip, #10
 8000e0e:	4619      	mov	r1, r3
 8000e10:	3401      	adds	r4, #1
 8000e12:	9305      	str	r3, [sp, #20]
 8000e14:	4620      	mov	r0, r4
 8000e16:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e1a:	3a30      	subs	r2, #48	; 0x30
 8000e1c:	2a09      	cmp	r2, #9
 8000e1e:	d903      	bls.n	8000e28 <_vfiprintf_r+0x1d0>
 8000e20:	2b00      	cmp	r3, #0
 8000e22:	d0c6      	beq.n	8000db2 <_vfiprintf_r+0x15a>
 8000e24:	9105      	str	r1, [sp, #20]
 8000e26:	e7c4      	b.n	8000db2 <_vfiprintf_r+0x15a>
 8000e28:	4604      	mov	r4, r0
 8000e2a:	2301      	movs	r3, #1
 8000e2c:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e30:	e7f0      	b.n	8000e14 <_vfiprintf_r+0x1bc>
 8000e32:	ab03      	add	r3, sp, #12
 8000e34:	9300      	str	r3, [sp, #0]
 8000e36:	462a      	mov	r2, r5
 8000e38:	4630      	mov	r0, r6
 8000e3a:	4b13      	ldr	r3, [pc, #76]	; (8000e88 <_vfiprintf_r+0x230>)
 8000e3c:	a904      	add	r1, sp, #16
 8000e3e:	f3af 8000 	nop.w
 8000e42:	4607      	mov	r7, r0
 8000e44:	1c78      	adds	r0, r7, #1
 8000e46:	d1d6      	bne.n	8000df6 <_vfiprintf_r+0x19e>
 8000e48:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e4a:	07d9      	lsls	r1, r3, #31
 8000e4c:	d405      	bmi.n	8000e5a <_vfiprintf_r+0x202>
 8000e4e:	89ab      	ldrh	r3, [r5, #12]
 8000e50:	059a      	lsls	r2, r3, #22
 8000e52:	d402      	bmi.n	8000e5a <_vfiprintf_r+0x202>
 8000e54:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e56:	f7ff fde1 	bl	8000a1c <__retarget_lock_release_recursive>
 8000e5a:	89ab      	ldrh	r3, [r5, #12]
 8000e5c:	065b      	lsls	r3, r3, #25
 8000e5e:	f53f af1d 	bmi.w	8000c9c <_vfiprintf_r+0x44>
 8000e62:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000e64:	e71c      	b.n	8000ca0 <_vfiprintf_r+0x48>
 8000e66:	ab03      	add	r3, sp, #12
 8000e68:	9300      	str	r3, [sp, #0]
 8000e6a:	462a      	mov	r2, r5
 8000e6c:	4630      	mov	r0, r6
 8000e6e:	4b06      	ldr	r3, [pc, #24]	; (8000e88 <_vfiprintf_r+0x230>)
 8000e70:	a904      	add	r1, sp, #16
 8000e72:	f000 f87d 	bl	8000f70 <_printf_i>
 8000e76:	e7e4      	b.n	8000e42 <_vfiprintf_r+0x1ea>
 8000e78:	0800159b 	.word	0x0800159b
 8000e7c:	080015a1 	.word	0x080015a1
 8000e80:	080015a5 	.word	0x080015a5
 8000e84:	00000000 	.word	0x00000000
 8000e88:	08000c33 	.word	0x08000c33

08000e8c <_printf_common>:
 8000e8c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000e90:	4616      	mov	r6, r2
 8000e92:	4699      	mov	r9, r3
 8000e94:	688a      	ldr	r2, [r1, #8]
 8000e96:	690b      	ldr	r3, [r1, #16]
 8000e98:	4607      	mov	r7, r0
 8000e9a:	4293      	cmp	r3, r2
 8000e9c:	bfb8      	it	lt
 8000e9e:	4613      	movlt	r3, r2
 8000ea0:	6033      	str	r3, [r6, #0]
 8000ea2:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000ea6:	460c      	mov	r4, r1
 8000ea8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000eac:	b10a      	cbz	r2, 8000eb2 <_printf_common+0x26>
 8000eae:	3301      	adds	r3, #1
 8000eb0:	6033      	str	r3, [r6, #0]
 8000eb2:	6823      	ldr	r3, [r4, #0]
 8000eb4:	0699      	lsls	r1, r3, #26
 8000eb6:	bf42      	ittt	mi
 8000eb8:	6833      	ldrmi	r3, [r6, #0]
 8000eba:	3302      	addmi	r3, #2
 8000ebc:	6033      	strmi	r3, [r6, #0]
 8000ebe:	6825      	ldr	r5, [r4, #0]
 8000ec0:	f015 0506 	ands.w	r5, r5, #6
 8000ec4:	d106      	bne.n	8000ed4 <_printf_common+0x48>
 8000ec6:	f104 0a19 	add.w	sl, r4, #25
 8000eca:	68e3      	ldr	r3, [r4, #12]
 8000ecc:	6832      	ldr	r2, [r6, #0]
 8000ece:	1a9b      	subs	r3, r3, r2
 8000ed0:	42ab      	cmp	r3, r5
 8000ed2:	dc2b      	bgt.n	8000f2c <_printf_common+0xa0>
 8000ed4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000ed8:	1e13      	subs	r3, r2, #0
 8000eda:	6822      	ldr	r2, [r4, #0]
 8000edc:	bf18      	it	ne
 8000ede:	2301      	movne	r3, #1
 8000ee0:	0692      	lsls	r2, r2, #26
 8000ee2:	d430      	bmi.n	8000f46 <_printf_common+0xba>
 8000ee4:	4649      	mov	r1, r9
 8000ee6:	4638      	mov	r0, r7
 8000ee8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000eec:	47c0      	blx	r8
 8000eee:	3001      	adds	r0, #1
 8000ef0:	d023      	beq.n	8000f3a <_printf_common+0xae>
 8000ef2:	6823      	ldr	r3, [r4, #0]
 8000ef4:	6922      	ldr	r2, [r4, #16]
 8000ef6:	f003 0306 	and.w	r3, r3, #6
 8000efa:	2b04      	cmp	r3, #4
 8000efc:	bf14      	ite	ne
 8000efe:	2500      	movne	r5, #0
 8000f00:	6833      	ldreq	r3, [r6, #0]
 8000f02:	f04f 0600 	mov.w	r6, #0
 8000f06:	bf08      	it	eq
 8000f08:	68e5      	ldreq	r5, [r4, #12]
 8000f0a:	f104 041a 	add.w	r4, r4, #26
 8000f0e:	bf08      	it	eq
 8000f10:	1aed      	subeq	r5, r5, r3
 8000f12:	f854 3c12 	ldr.w	r3, [r4, #-18]
 8000f16:	bf08      	it	eq
 8000f18:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f1c:	4293      	cmp	r3, r2
 8000f1e:	bfc4      	itt	gt
 8000f20:	1a9b      	subgt	r3, r3, r2
 8000f22:	18ed      	addgt	r5, r5, r3
 8000f24:	42b5      	cmp	r5, r6
 8000f26:	d11a      	bne.n	8000f5e <_printf_common+0xd2>
 8000f28:	2000      	movs	r0, #0
 8000f2a:	e008      	b.n	8000f3e <_printf_common+0xb2>
 8000f2c:	2301      	movs	r3, #1
 8000f2e:	4652      	mov	r2, sl
 8000f30:	4649      	mov	r1, r9
 8000f32:	4638      	mov	r0, r7
 8000f34:	47c0      	blx	r8
 8000f36:	3001      	adds	r0, #1
 8000f38:	d103      	bne.n	8000f42 <_printf_common+0xb6>
 8000f3a:	f04f 30ff 	mov.w	r0, #4294967295
 8000f3e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f42:	3501      	adds	r5, #1
 8000f44:	e7c1      	b.n	8000eca <_printf_common+0x3e>
 8000f46:	2030      	movs	r0, #48	; 0x30
 8000f48:	18e1      	adds	r1, r4, r3
 8000f4a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000f4e:	1c5a      	adds	r2, r3, #1
 8000f50:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000f54:	4422      	add	r2, r4
 8000f56:	3302      	adds	r3, #2
 8000f58:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000f5c:	e7c2      	b.n	8000ee4 <_printf_common+0x58>
 8000f5e:	2301      	movs	r3, #1
 8000f60:	4622      	mov	r2, r4
 8000f62:	4649      	mov	r1, r9
 8000f64:	4638      	mov	r0, r7
 8000f66:	47c0      	blx	r8
 8000f68:	3001      	adds	r0, #1
 8000f6a:	d0e6      	beq.n	8000f3a <_printf_common+0xae>
 8000f6c:	3601      	adds	r6, #1
 8000f6e:	e7d9      	b.n	8000f24 <_printf_common+0x98>

08000f70 <_printf_i>:
 8000f70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000f74:	7e0f      	ldrb	r7, [r1, #24]
 8000f76:	4691      	mov	r9, r2
 8000f78:	2f78      	cmp	r7, #120	; 0x78
 8000f7a:	4680      	mov	r8, r0
 8000f7c:	460c      	mov	r4, r1
 8000f7e:	469a      	mov	sl, r3
 8000f80:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000f82:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000f86:	d807      	bhi.n	8000f98 <_printf_i+0x28>
 8000f88:	2f62      	cmp	r7, #98	; 0x62
 8000f8a:	d80a      	bhi.n	8000fa2 <_printf_i+0x32>
 8000f8c:	2f00      	cmp	r7, #0
 8000f8e:	f000 80d5 	beq.w	800113c <_printf_i+0x1cc>
 8000f92:	2f58      	cmp	r7, #88	; 0x58
 8000f94:	f000 80c1 	beq.w	800111a <_printf_i+0x1aa>
 8000f98:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000f9c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000fa0:	e03a      	b.n	8001018 <_printf_i+0xa8>
 8000fa2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000fa6:	2b15      	cmp	r3, #21
 8000fa8:	d8f6      	bhi.n	8000f98 <_printf_i+0x28>
 8000faa:	a101      	add	r1, pc, #4	; (adr r1, 8000fb0 <_printf_i+0x40>)
 8000fac:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000fb0:	08001009 	.word	0x08001009
 8000fb4:	0800101d 	.word	0x0800101d
 8000fb8:	08000f99 	.word	0x08000f99
 8000fbc:	08000f99 	.word	0x08000f99
 8000fc0:	08000f99 	.word	0x08000f99
 8000fc4:	08000f99 	.word	0x08000f99
 8000fc8:	0800101d 	.word	0x0800101d
 8000fcc:	08000f99 	.word	0x08000f99
 8000fd0:	08000f99 	.word	0x08000f99
 8000fd4:	08000f99 	.word	0x08000f99
 8000fd8:	08000f99 	.word	0x08000f99
 8000fdc:	08001123 	.word	0x08001123
 8000fe0:	08001049 	.word	0x08001049
 8000fe4:	080010dd 	.word	0x080010dd
 8000fe8:	08000f99 	.word	0x08000f99
 8000fec:	08000f99 	.word	0x08000f99
 8000ff0:	08001145 	.word	0x08001145
 8000ff4:	08000f99 	.word	0x08000f99
 8000ff8:	08001049 	.word	0x08001049
 8000ffc:	08000f99 	.word	0x08000f99
 8001000:	08000f99 	.word	0x08000f99
 8001004:	080010e5 	.word	0x080010e5
 8001008:	682b      	ldr	r3, [r5, #0]
 800100a:	1d1a      	adds	r2, r3, #4
 800100c:	681b      	ldr	r3, [r3, #0]
 800100e:	602a      	str	r2, [r5, #0]
 8001010:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001014:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001018:	2301      	movs	r3, #1
 800101a:	e0a0      	b.n	800115e <_printf_i+0x1ee>
 800101c:	6820      	ldr	r0, [r4, #0]
 800101e:	682b      	ldr	r3, [r5, #0]
 8001020:	0607      	lsls	r7, r0, #24
 8001022:	f103 0104 	add.w	r1, r3, #4
 8001026:	6029      	str	r1, [r5, #0]
 8001028:	d501      	bpl.n	800102e <_printf_i+0xbe>
 800102a:	681e      	ldr	r6, [r3, #0]
 800102c:	e003      	b.n	8001036 <_printf_i+0xc6>
 800102e:	0646      	lsls	r6, r0, #25
 8001030:	d5fb      	bpl.n	800102a <_printf_i+0xba>
 8001032:	f9b3 6000 	ldrsh.w	r6, [r3]
 8001036:	2e00      	cmp	r6, #0
 8001038:	da03      	bge.n	8001042 <_printf_i+0xd2>
 800103a:	232d      	movs	r3, #45	; 0x2d
 800103c:	4276      	negs	r6, r6
 800103e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001042:	230a      	movs	r3, #10
 8001044:	4859      	ldr	r0, [pc, #356]	; (80011ac <_printf_i+0x23c>)
 8001046:	e012      	b.n	800106e <_printf_i+0xfe>
 8001048:	682b      	ldr	r3, [r5, #0]
 800104a:	6820      	ldr	r0, [r4, #0]
 800104c:	1d19      	adds	r1, r3, #4
 800104e:	6029      	str	r1, [r5, #0]
 8001050:	0605      	lsls	r5, r0, #24
 8001052:	d501      	bpl.n	8001058 <_printf_i+0xe8>
 8001054:	681e      	ldr	r6, [r3, #0]
 8001056:	e002      	b.n	800105e <_printf_i+0xee>
 8001058:	0641      	lsls	r1, r0, #25
 800105a:	d5fb      	bpl.n	8001054 <_printf_i+0xe4>
 800105c:	881e      	ldrh	r6, [r3, #0]
 800105e:	2f6f      	cmp	r7, #111	; 0x6f
 8001060:	bf0c      	ite	eq
 8001062:	2308      	moveq	r3, #8
 8001064:	230a      	movne	r3, #10
 8001066:	4851      	ldr	r0, [pc, #324]	; (80011ac <_printf_i+0x23c>)
 8001068:	2100      	movs	r1, #0
 800106a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800106e:	6865      	ldr	r5, [r4, #4]
 8001070:	2d00      	cmp	r5, #0
 8001072:	bfa8      	it	ge
 8001074:	6821      	ldrge	r1, [r4, #0]
 8001076:	60a5      	str	r5, [r4, #8]
 8001078:	bfa4      	itt	ge
 800107a:	f021 0104 	bicge.w	r1, r1, #4
 800107e:	6021      	strge	r1, [r4, #0]
 8001080:	b90e      	cbnz	r6, 8001086 <_printf_i+0x116>
 8001082:	2d00      	cmp	r5, #0
 8001084:	d04b      	beq.n	800111e <_printf_i+0x1ae>
 8001086:	4615      	mov	r5, r2
 8001088:	fbb6 f1f3 	udiv	r1, r6, r3
 800108c:	fb03 6711 	mls	r7, r3, r1, r6
 8001090:	5dc7      	ldrb	r7, [r0, r7]
 8001092:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001096:	4637      	mov	r7, r6
 8001098:	42bb      	cmp	r3, r7
 800109a:	460e      	mov	r6, r1
 800109c:	d9f4      	bls.n	8001088 <_printf_i+0x118>
 800109e:	2b08      	cmp	r3, #8
 80010a0:	d10b      	bne.n	80010ba <_printf_i+0x14a>
 80010a2:	6823      	ldr	r3, [r4, #0]
 80010a4:	07de      	lsls	r6, r3, #31
 80010a6:	d508      	bpl.n	80010ba <_printf_i+0x14a>
 80010a8:	6923      	ldr	r3, [r4, #16]
 80010aa:	6861      	ldr	r1, [r4, #4]
 80010ac:	4299      	cmp	r1, r3
 80010ae:	bfde      	ittt	le
 80010b0:	2330      	movle	r3, #48	; 0x30
 80010b2:	f805 3c01 	strble.w	r3, [r5, #-1]
 80010b6:	f105 35ff 	addle.w	r5, r5, #4294967295
 80010ba:	1b52      	subs	r2, r2, r5
 80010bc:	6122      	str	r2, [r4, #16]
 80010be:	464b      	mov	r3, r9
 80010c0:	4621      	mov	r1, r4
 80010c2:	4640      	mov	r0, r8
 80010c4:	f8cd a000 	str.w	sl, [sp]
 80010c8:	aa03      	add	r2, sp, #12
 80010ca:	f7ff fedf 	bl	8000e8c <_printf_common>
 80010ce:	3001      	adds	r0, #1
 80010d0:	d14a      	bne.n	8001168 <_printf_i+0x1f8>
 80010d2:	f04f 30ff 	mov.w	r0, #4294967295
 80010d6:	b004      	add	sp, #16
 80010d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010dc:	6823      	ldr	r3, [r4, #0]
 80010de:	f043 0320 	orr.w	r3, r3, #32
 80010e2:	6023      	str	r3, [r4, #0]
 80010e4:	2778      	movs	r7, #120	; 0x78
 80010e6:	4832      	ldr	r0, [pc, #200]	; (80011b0 <_printf_i+0x240>)
 80010e8:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80010ec:	6823      	ldr	r3, [r4, #0]
 80010ee:	6829      	ldr	r1, [r5, #0]
 80010f0:	061f      	lsls	r7, r3, #24
 80010f2:	f851 6b04 	ldr.w	r6, [r1], #4
 80010f6:	d402      	bmi.n	80010fe <_printf_i+0x18e>
 80010f8:	065f      	lsls	r7, r3, #25
 80010fa:	bf48      	it	mi
 80010fc:	b2b6      	uxthmi	r6, r6
 80010fe:	07df      	lsls	r7, r3, #31
 8001100:	bf48      	it	mi
 8001102:	f043 0320 	orrmi.w	r3, r3, #32
 8001106:	6029      	str	r1, [r5, #0]
 8001108:	bf48      	it	mi
 800110a:	6023      	strmi	r3, [r4, #0]
 800110c:	b91e      	cbnz	r6, 8001116 <_printf_i+0x1a6>
 800110e:	6823      	ldr	r3, [r4, #0]
 8001110:	f023 0320 	bic.w	r3, r3, #32
 8001114:	6023      	str	r3, [r4, #0]
 8001116:	2310      	movs	r3, #16
 8001118:	e7a6      	b.n	8001068 <_printf_i+0xf8>
 800111a:	4824      	ldr	r0, [pc, #144]	; (80011ac <_printf_i+0x23c>)
 800111c:	e7e4      	b.n	80010e8 <_printf_i+0x178>
 800111e:	4615      	mov	r5, r2
 8001120:	e7bd      	b.n	800109e <_printf_i+0x12e>
 8001122:	682b      	ldr	r3, [r5, #0]
 8001124:	6826      	ldr	r6, [r4, #0]
 8001126:	1d18      	adds	r0, r3, #4
 8001128:	6961      	ldr	r1, [r4, #20]
 800112a:	6028      	str	r0, [r5, #0]
 800112c:	0635      	lsls	r5, r6, #24
 800112e:	681b      	ldr	r3, [r3, #0]
 8001130:	d501      	bpl.n	8001136 <_printf_i+0x1c6>
 8001132:	6019      	str	r1, [r3, #0]
 8001134:	e002      	b.n	800113c <_printf_i+0x1cc>
 8001136:	0670      	lsls	r0, r6, #25
 8001138:	d5fb      	bpl.n	8001132 <_printf_i+0x1c2>
 800113a:	8019      	strh	r1, [r3, #0]
 800113c:	2300      	movs	r3, #0
 800113e:	4615      	mov	r5, r2
 8001140:	6123      	str	r3, [r4, #16]
 8001142:	e7bc      	b.n	80010be <_printf_i+0x14e>
 8001144:	682b      	ldr	r3, [r5, #0]
 8001146:	2100      	movs	r1, #0
 8001148:	1d1a      	adds	r2, r3, #4
 800114a:	602a      	str	r2, [r5, #0]
 800114c:	681d      	ldr	r5, [r3, #0]
 800114e:	6862      	ldr	r2, [r4, #4]
 8001150:	4628      	mov	r0, r5
 8001152:	f000 f97f 	bl	8001454 <memchr>
 8001156:	b108      	cbz	r0, 800115c <_printf_i+0x1ec>
 8001158:	1b40      	subs	r0, r0, r5
 800115a:	6060      	str	r0, [r4, #4]
 800115c:	6863      	ldr	r3, [r4, #4]
 800115e:	6123      	str	r3, [r4, #16]
 8001160:	2300      	movs	r3, #0
 8001162:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001166:	e7aa      	b.n	80010be <_printf_i+0x14e>
 8001168:	462a      	mov	r2, r5
 800116a:	4649      	mov	r1, r9
 800116c:	4640      	mov	r0, r8
 800116e:	6923      	ldr	r3, [r4, #16]
 8001170:	47d0      	blx	sl
 8001172:	3001      	adds	r0, #1
 8001174:	d0ad      	beq.n	80010d2 <_printf_i+0x162>
 8001176:	6823      	ldr	r3, [r4, #0]
 8001178:	079b      	lsls	r3, r3, #30
 800117a:	d413      	bmi.n	80011a4 <_printf_i+0x234>
 800117c:	68e0      	ldr	r0, [r4, #12]
 800117e:	9b03      	ldr	r3, [sp, #12]
 8001180:	4298      	cmp	r0, r3
 8001182:	bfb8      	it	lt
 8001184:	4618      	movlt	r0, r3
 8001186:	e7a6      	b.n	80010d6 <_printf_i+0x166>
 8001188:	2301      	movs	r3, #1
 800118a:	4632      	mov	r2, r6
 800118c:	4649      	mov	r1, r9
 800118e:	4640      	mov	r0, r8
 8001190:	47d0      	blx	sl
 8001192:	3001      	adds	r0, #1
 8001194:	d09d      	beq.n	80010d2 <_printf_i+0x162>
 8001196:	3501      	adds	r5, #1
 8001198:	68e3      	ldr	r3, [r4, #12]
 800119a:	9903      	ldr	r1, [sp, #12]
 800119c:	1a5b      	subs	r3, r3, r1
 800119e:	42ab      	cmp	r3, r5
 80011a0:	dcf2      	bgt.n	8001188 <_printf_i+0x218>
 80011a2:	e7eb      	b.n	800117c <_printf_i+0x20c>
 80011a4:	2500      	movs	r5, #0
 80011a6:	f104 0619 	add.w	r6, r4, #25
 80011aa:	e7f5      	b.n	8001198 <_printf_i+0x228>
 80011ac:	080015ac 	.word	0x080015ac
 80011b0:	080015bd 	.word	0x080015bd

080011b4 <__sflush_r>:
 80011b4:	898a      	ldrh	r2, [r1, #12]
 80011b6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011b8:	4605      	mov	r5, r0
 80011ba:	0710      	lsls	r0, r2, #28
 80011bc:	460c      	mov	r4, r1
 80011be:	d457      	bmi.n	8001270 <__sflush_r+0xbc>
 80011c0:	684b      	ldr	r3, [r1, #4]
 80011c2:	2b00      	cmp	r3, #0
 80011c4:	dc04      	bgt.n	80011d0 <__sflush_r+0x1c>
 80011c6:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80011c8:	2b00      	cmp	r3, #0
 80011ca:	dc01      	bgt.n	80011d0 <__sflush_r+0x1c>
 80011cc:	2000      	movs	r0, #0
 80011ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80011d0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80011d2:	2e00      	cmp	r6, #0
 80011d4:	d0fa      	beq.n	80011cc <__sflush_r+0x18>
 80011d6:	2300      	movs	r3, #0
 80011d8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80011dc:	682f      	ldr	r7, [r5, #0]
 80011de:	6a21      	ldr	r1, [r4, #32]
 80011e0:	602b      	str	r3, [r5, #0]
 80011e2:	d032      	beq.n	800124a <__sflush_r+0x96>
 80011e4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80011e6:	89a3      	ldrh	r3, [r4, #12]
 80011e8:	075a      	lsls	r2, r3, #29
 80011ea:	d505      	bpl.n	80011f8 <__sflush_r+0x44>
 80011ec:	6863      	ldr	r3, [r4, #4]
 80011ee:	1ac0      	subs	r0, r0, r3
 80011f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80011f2:	b10b      	cbz	r3, 80011f8 <__sflush_r+0x44>
 80011f4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80011f6:	1ac0      	subs	r0, r0, r3
 80011f8:	2300      	movs	r3, #0
 80011fa:	4602      	mov	r2, r0
 80011fc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80011fe:	4628      	mov	r0, r5
 8001200:	6a21      	ldr	r1, [r4, #32]
 8001202:	47b0      	blx	r6
 8001204:	1c43      	adds	r3, r0, #1
 8001206:	89a3      	ldrh	r3, [r4, #12]
 8001208:	d106      	bne.n	8001218 <__sflush_r+0x64>
 800120a:	6829      	ldr	r1, [r5, #0]
 800120c:	291d      	cmp	r1, #29
 800120e:	d82b      	bhi.n	8001268 <__sflush_r+0xb4>
 8001210:	4a28      	ldr	r2, [pc, #160]	; (80012b4 <__sflush_r+0x100>)
 8001212:	410a      	asrs	r2, r1
 8001214:	07d6      	lsls	r6, r2, #31
 8001216:	d427      	bmi.n	8001268 <__sflush_r+0xb4>
 8001218:	2200      	movs	r2, #0
 800121a:	6062      	str	r2, [r4, #4]
 800121c:	6922      	ldr	r2, [r4, #16]
 800121e:	04d9      	lsls	r1, r3, #19
 8001220:	6022      	str	r2, [r4, #0]
 8001222:	d504      	bpl.n	800122e <__sflush_r+0x7a>
 8001224:	1c42      	adds	r2, r0, #1
 8001226:	d101      	bne.n	800122c <__sflush_r+0x78>
 8001228:	682b      	ldr	r3, [r5, #0]
 800122a:	b903      	cbnz	r3, 800122e <__sflush_r+0x7a>
 800122c:	6560      	str	r0, [r4, #84]	; 0x54
 800122e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001230:	602f      	str	r7, [r5, #0]
 8001232:	2900      	cmp	r1, #0
 8001234:	d0ca      	beq.n	80011cc <__sflush_r+0x18>
 8001236:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800123a:	4299      	cmp	r1, r3
 800123c:	d002      	beq.n	8001244 <__sflush_r+0x90>
 800123e:	4628      	mov	r0, r5
 8001240:	f7ff fbee 	bl	8000a20 <_free_r>
 8001244:	2000      	movs	r0, #0
 8001246:	6360      	str	r0, [r4, #52]	; 0x34
 8001248:	e7c1      	b.n	80011ce <__sflush_r+0x1a>
 800124a:	2301      	movs	r3, #1
 800124c:	4628      	mov	r0, r5
 800124e:	47b0      	blx	r6
 8001250:	1c41      	adds	r1, r0, #1
 8001252:	d1c8      	bne.n	80011e6 <__sflush_r+0x32>
 8001254:	682b      	ldr	r3, [r5, #0]
 8001256:	2b00      	cmp	r3, #0
 8001258:	d0c5      	beq.n	80011e6 <__sflush_r+0x32>
 800125a:	2b1d      	cmp	r3, #29
 800125c:	d001      	beq.n	8001262 <__sflush_r+0xae>
 800125e:	2b16      	cmp	r3, #22
 8001260:	d101      	bne.n	8001266 <__sflush_r+0xb2>
 8001262:	602f      	str	r7, [r5, #0]
 8001264:	e7b2      	b.n	80011cc <__sflush_r+0x18>
 8001266:	89a3      	ldrh	r3, [r4, #12]
 8001268:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800126c:	81a3      	strh	r3, [r4, #12]
 800126e:	e7ae      	b.n	80011ce <__sflush_r+0x1a>
 8001270:	690f      	ldr	r7, [r1, #16]
 8001272:	2f00      	cmp	r7, #0
 8001274:	d0aa      	beq.n	80011cc <__sflush_r+0x18>
 8001276:	0793      	lsls	r3, r2, #30
 8001278:	bf18      	it	ne
 800127a:	2300      	movne	r3, #0
 800127c:	680e      	ldr	r6, [r1, #0]
 800127e:	bf08      	it	eq
 8001280:	694b      	ldreq	r3, [r1, #20]
 8001282:	1bf6      	subs	r6, r6, r7
 8001284:	600f      	str	r7, [r1, #0]
 8001286:	608b      	str	r3, [r1, #8]
 8001288:	2e00      	cmp	r6, #0
 800128a:	dd9f      	ble.n	80011cc <__sflush_r+0x18>
 800128c:	4633      	mov	r3, r6
 800128e:	463a      	mov	r2, r7
 8001290:	4628      	mov	r0, r5
 8001292:	6a21      	ldr	r1, [r4, #32]
 8001294:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8001298:	47e0      	blx	ip
 800129a:	2800      	cmp	r0, #0
 800129c:	dc06      	bgt.n	80012ac <__sflush_r+0xf8>
 800129e:	89a3      	ldrh	r3, [r4, #12]
 80012a0:	f04f 30ff 	mov.w	r0, #4294967295
 80012a4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012a8:	81a3      	strh	r3, [r4, #12]
 80012aa:	e790      	b.n	80011ce <__sflush_r+0x1a>
 80012ac:	4407      	add	r7, r0
 80012ae:	1a36      	subs	r6, r6, r0
 80012b0:	e7ea      	b.n	8001288 <__sflush_r+0xd4>
 80012b2:	bf00      	nop
 80012b4:	dfbffffe 	.word	0xdfbffffe

080012b8 <_fflush_r>:
 80012b8:	b538      	push	{r3, r4, r5, lr}
 80012ba:	690b      	ldr	r3, [r1, #16]
 80012bc:	4605      	mov	r5, r0
 80012be:	460c      	mov	r4, r1
 80012c0:	b913      	cbnz	r3, 80012c8 <_fflush_r+0x10>
 80012c2:	2500      	movs	r5, #0
 80012c4:	4628      	mov	r0, r5
 80012c6:	bd38      	pop	{r3, r4, r5, pc}
 80012c8:	b118      	cbz	r0, 80012d2 <_fflush_r+0x1a>
 80012ca:	6a03      	ldr	r3, [r0, #32]
 80012cc:	b90b      	cbnz	r3, 80012d2 <_fflush_r+0x1a>
 80012ce:	f7ff fa9f 	bl	8000810 <__sinit>
 80012d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012d6:	2b00      	cmp	r3, #0
 80012d8:	d0f3      	beq.n	80012c2 <_fflush_r+0xa>
 80012da:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80012dc:	07d0      	lsls	r0, r2, #31
 80012de:	d404      	bmi.n	80012ea <_fflush_r+0x32>
 80012e0:	0599      	lsls	r1, r3, #22
 80012e2:	d402      	bmi.n	80012ea <_fflush_r+0x32>
 80012e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80012e6:	f7ff fb98 	bl	8000a1a <__retarget_lock_acquire_recursive>
 80012ea:	4628      	mov	r0, r5
 80012ec:	4621      	mov	r1, r4
 80012ee:	f7ff ff61 	bl	80011b4 <__sflush_r>
 80012f2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80012f4:	4605      	mov	r5, r0
 80012f6:	07da      	lsls	r2, r3, #31
 80012f8:	d4e4      	bmi.n	80012c4 <_fflush_r+0xc>
 80012fa:	89a3      	ldrh	r3, [r4, #12]
 80012fc:	059b      	lsls	r3, r3, #22
 80012fe:	d4e1      	bmi.n	80012c4 <_fflush_r+0xc>
 8001300:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001302:	f7ff fb8b 	bl	8000a1c <__retarget_lock_release_recursive>
 8001306:	e7dd      	b.n	80012c4 <_fflush_r+0xc>

08001308 <__swbuf_r>:
 8001308:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800130a:	460e      	mov	r6, r1
 800130c:	4614      	mov	r4, r2
 800130e:	4605      	mov	r5, r0
 8001310:	b118      	cbz	r0, 800131a <__swbuf_r+0x12>
 8001312:	6a03      	ldr	r3, [r0, #32]
 8001314:	b90b      	cbnz	r3, 800131a <__swbuf_r+0x12>
 8001316:	f7ff fa7b 	bl	8000810 <__sinit>
 800131a:	69a3      	ldr	r3, [r4, #24]
 800131c:	60a3      	str	r3, [r4, #8]
 800131e:	89a3      	ldrh	r3, [r4, #12]
 8001320:	071a      	lsls	r2, r3, #28
 8001322:	d525      	bpl.n	8001370 <__swbuf_r+0x68>
 8001324:	6923      	ldr	r3, [r4, #16]
 8001326:	b31b      	cbz	r3, 8001370 <__swbuf_r+0x68>
 8001328:	6823      	ldr	r3, [r4, #0]
 800132a:	6922      	ldr	r2, [r4, #16]
 800132c:	b2f6      	uxtb	r6, r6
 800132e:	1a98      	subs	r0, r3, r2
 8001330:	6963      	ldr	r3, [r4, #20]
 8001332:	4637      	mov	r7, r6
 8001334:	4283      	cmp	r3, r0
 8001336:	dc04      	bgt.n	8001342 <__swbuf_r+0x3a>
 8001338:	4621      	mov	r1, r4
 800133a:	4628      	mov	r0, r5
 800133c:	f7ff ffbc 	bl	80012b8 <_fflush_r>
 8001340:	b9e0      	cbnz	r0, 800137c <__swbuf_r+0x74>
 8001342:	68a3      	ldr	r3, [r4, #8]
 8001344:	3b01      	subs	r3, #1
 8001346:	60a3      	str	r3, [r4, #8]
 8001348:	6823      	ldr	r3, [r4, #0]
 800134a:	1c5a      	adds	r2, r3, #1
 800134c:	6022      	str	r2, [r4, #0]
 800134e:	701e      	strb	r6, [r3, #0]
 8001350:	6962      	ldr	r2, [r4, #20]
 8001352:	1c43      	adds	r3, r0, #1
 8001354:	429a      	cmp	r2, r3
 8001356:	d004      	beq.n	8001362 <__swbuf_r+0x5a>
 8001358:	89a3      	ldrh	r3, [r4, #12]
 800135a:	07db      	lsls	r3, r3, #31
 800135c:	d506      	bpl.n	800136c <__swbuf_r+0x64>
 800135e:	2e0a      	cmp	r6, #10
 8001360:	d104      	bne.n	800136c <__swbuf_r+0x64>
 8001362:	4621      	mov	r1, r4
 8001364:	4628      	mov	r0, r5
 8001366:	f7ff ffa7 	bl	80012b8 <_fflush_r>
 800136a:	b938      	cbnz	r0, 800137c <__swbuf_r+0x74>
 800136c:	4638      	mov	r0, r7
 800136e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001370:	4621      	mov	r1, r4
 8001372:	4628      	mov	r0, r5
 8001374:	f000 f806 	bl	8001384 <__swsetup_r>
 8001378:	2800      	cmp	r0, #0
 800137a:	d0d5      	beq.n	8001328 <__swbuf_r+0x20>
 800137c:	f04f 37ff 	mov.w	r7, #4294967295
 8001380:	e7f4      	b.n	800136c <__swbuf_r+0x64>
	...

08001384 <__swsetup_r>:
 8001384:	b538      	push	{r3, r4, r5, lr}
 8001386:	4b2a      	ldr	r3, [pc, #168]	; (8001430 <__swsetup_r+0xac>)
 8001388:	4605      	mov	r5, r0
 800138a:	6818      	ldr	r0, [r3, #0]
 800138c:	460c      	mov	r4, r1
 800138e:	b118      	cbz	r0, 8001398 <__swsetup_r+0x14>
 8001390:	6a03      	ldr	r3, [r0, #32]
 8001392:	b90b      	cbnz	r3, 8001398 <__swsetup_r+0x14>
 8001394:	f7ff fa3c 	bl	8000810 <__sinit>
 8001398:	89a3      	ldrh	r3, [r4, #12]
 800139a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800139e:	0718      	lsls	r0, r3, #28
 80013a0:	d422      	bmi.n	80013e8 <__swsetup_r+0x64>
 80013a2:	06d9      	lsls	r1, r3, #27
 80013a4:	d407      	bmi.n	80013b6 <__swsetup_r+0x32>
 80013a6:	2309      	movs	r3, #9
 80013a8:	602b      	str	r3, [r5, #0]
 80013aa:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80013ae:	f04f 30ff 	mov.w	r0, #4294967295
 80013b2:	81a3      	strh	r3, [r4, #12]
 80013b4:	e034      	b.n	8001420 <__swsetup_r+0x9c>
 80013b6:	0758      	lsls	r0, r3, #29
 80013b8:	d512      	bpl.n	80013e0 <__swsetup_r+0x5c>
 80013ba:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80013bc:	b141      	cbz	r1, 80013d0 <__swsetup_r+0x4c>
 80013be:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80013c2:	4299      	cmp	r1, r3
 80013c4:	d002      	beq.n	80013cc <__swsetup_r+0x48>
 80013c6:	4628      	mov	r0, r5
 80013c8:	f7ff fb2a 	bl	8000a20 <_free_r>
 80013cc:	2300      	movs	r3, #0
 80013ce:	6363      	str	r3, [r4, #52]	; 0x34
 80013d0:	89a3      	ldrh	r3, [r4, #12]
 80013d2:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80013d6:	81a3      	strh	r3, [r4, #12]
 80013d8:	2300      	movs	r3, #0
 80013da:	6063      	str	r3, [r4, #4]
 80013dc:	6923      	ldr	r3, [r4, #16]
 80013de:	6023      	str	r3, [r4, #0]
 80013e0:	89a3      	ldrh	r3, [r4, #12]
 80013e2:	f043 0308 	orr.w	r3, r3, #8
 80013e6:	81a3      	strh	r3, [r4, #12]
 80013e8:	6923      	ldr	r3, [r4, #16]
 80013ea:	b94b      	cbnz	r3, 8001400 <__swsetup_r+0x7c>
 80013ec:	89a3      	ldrh	r3, [r4, #12]
 80013ee:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80013f2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80013f6:	d003      	beq.n	8001400 <__swsetup_r+0x7c>
 80013f8:	4621      	mov	r1, r4
 80013fa:	4628      	mov	r0, r5
 80013fc:	f000 f85d 	bl	80014ba <__smakebuf_r>
 8001400:	89a0      	ldrh	r0, [r4, #12]
 8001402:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001406:	f010 0301 	ands.w	r3, r0, #1
 800140a:	d00a      	beq.n	8001422 <__swsetup_r+0x9e>
 800140c:	2300      	movs	r3, #0
 800140e:	60a3      	str	r3, [r4, #8]
 8001410:	6963      	ldr	r3, [r4, #20]
 8001412:	425b      	negs	r3, r3
 8001414:	61a3      	str	r3, [r4, #24]
 8001416:	6923      	ldr	r3, [r4, #16]
 8001418:	b943      	cbnz	r3, 800142c <__swsetup_r+0xa8>
 800141a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800141e:	d1c4      	bne.n	80013aa <__swsetup_r+0x26>
 8001420:	bd38      	pop	{r3, r4, r5, pc}
 8001422:	0781      	lsls	r1, r0, #30
 8001424:	bf58      	it	pl
 8001426:	6963      	ldrpl	r3, [r4, #20]
 8001428:	60a3      	str	r3, [r4, #8]
 800142a:	e7f4      	b.n	8001416 <__swsetup_r+0x92>
 800142c:	2000      	movs	r0, #0
 800142e:	e7f7      	b.n	8001420 <__swsetup_r+0x9c>
 8001430:	2000005c 	.word	0x2000005c

08001434 <_sbrk_r>:
 8001434:	b538      	push	{r3, r4, r5, lr}
 8001436:	2300      	movs	r3, #0
 8001438:	4d05      	ldr	r5, [pc, #20]	; (8001450 <_sbrk_r+0x1c>)
 800143a:	4604      	mov	r4, r0
 800143c:	4608      	mov	r0, r1
 800143e:	602b      	str	r3, [r5, #0]
 8001440:	f7ff f8e6 	bl	8000610 <_sbrk>
 8001444:	1c43      	adds	r3, r0, #1
 8001446:	d102      	bne.n	800144e <_sbrk_r+0x1a>
 8001448:	682b      	ldr	r3, [r5, #0]
 800144a:	b103      	cbz	r3, 800144e <_sbrk_r+0x1a>
 800144c:	6023      	str	r3, [r4, #0]
 800144e:	bd38      	pop	{r3, r4, r5, pc}
 8001450:	200001c0 	.word	0x200001c0

08001454 <memchr>:
 8001454:	4603      	mov	r3, r0
 8001456:	b510      	push	{r4, lr}
 8001458:	b2c9      	uxtb	r1, r1
 800145a:	4402      	add	r2, r0
 800145c:	4293      	cmp	r3, r2
 800145e:	4618      	mov	r0, r3
 8001460:	d101      	bne.n	8001466 <memchr+0x12>
 8001462:	2000      	movs	r0, #0
 8001464:	e003      	b.n	800146e <memchr+0x1a>
 8001466:	7804      	ldrb	r4, [r0, #0]
 8001468:	3301      	adds	r3, #1
 800146a:	428c      	cmp	r4, r1
 800146c:	d1f6      	bne.n	800145c <memchr+0x8>
 800146e:	bd10      	pop	{r4, pc}

08001470 <__swhatbuf_r>:
 8001470:	b570      	push	{r4, r5, r6, lr}
 8001472:	460c      	mov	r4, r1
 8001474:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001478:	4615      	mov	r5, r2
 800147a:	2900      	cmp	r1, #0
 800147c:	461e      	mov	r6, r3
 800147e:	b096      	sub	sp, #88	; 0x58
 8001480:	da0c      	bge.n	800149c <__swhatbuf_r+0x2c>
 8001482:	89a3      	ldrh	r3, [r4, #12]
 8001484:	2100      	movs	r1, #0
 8001486:	f013 0f80 	tst.w	r3, #128	; 0x80
 800148a:	bf0c      	ite	eq
 800148c:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8001490:	2340      	movne	r3, #64	; 0x40
 8001492:	2000      	movs	r0, #0
 8001494:	6031      	str	r1, [r6, #0]
 8001496:	602b      	str	r3, [r5, #0]
 8001498:	b016      	add	sp, #88	; 0x58
 800149a:	bd70      	pop	{r4, r5, r6, pc}
 800149c:	466a      	mov	r2, sp
 800149e:	f000 f849 	bl	8001534 <_fstat_r>
 80014a2:	2800      	cmp	r0, #0
 80014a4:	dbed      	blt.n	8001482 <__swhatbuf_r+0x12>
 80014a6:	9901      	ldr	r1, [sp, #4]
 80014a8:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 80014ac:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 80014b0:	4259      	negs	r1, r3
 80014b2:	4159      	adcs	r1, r3
 80014b4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80014b8:	e7eb      	b.n	8001492 <__swhatbuf_r+0x22>

080014ba <__smakebuf_r>:
 80014ba:	898b      	ldrh	r3, [r1, #12]
 80014bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80014be:	079d      	lsls	r5, r3, #30
 80014c0:	4606      	mov	r6, r0
 80014c2:	460c      	mov	r4, r1
 80014c4:	d507      	bpl.n	80014d6 <__smakebuf_r+0x1c>
 80014c6:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80014ca:	6023      	str	r3, [r4, #0]
 80014cc:	6123      	str	r3, [r4, #16]
 80014ce:	2301      	movs	r3, #1
 80014d0:	6163      	str	r3, [r4, #20]
 80014d2:	b002      	add	sp, #8
 80014d4:	bd70      	pop	{r4, r5, r6, pc}
 80014d6:	466a      	mov	r2, sp
 80014d8:	ab01      	add	r3, sp, #4
 80014da:	f7ff ffc9 	bl	8001470 <__swhatbuf_r>
 80014de:	9900      	ldr	r1, [sp, #0]
 80014e0:	4605      	mov	r5, r0
 80014e2:	4630      	mov	r0, r6
 80014e4:	f7ff fb04 	bl	8000af0 <_malloc_r>
 80014e8:	b948      	cbnz	r0, 80014fe <__smakebuf_r+0x44>
 80014ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80014ee:	059a      	lsls	r2, r3, #22
 80014f0:	d4ef      	bmi.n	80014d2 <__smakebuf_r+0x18>
 80014f2:	f023 0303 	bic.w	r3, r3, #3
 80014f6:	f043 0302 	orr.w	r3, r3, #2
 80014fa:	81a3      	strh	r3, [r4, #12]
 80014fc:	e7e3      	b.n	80014c6 <__smakebuf_r+0xc>
 80014fe:	89a3      	ldrh	r3, [r4, #12]
 8001500:	6020      	str	r0, [r4, #0]
 8001502:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001506:	81a3      	strh	r3, [r4, #12]
 8001508:	9b00      	ldr	r3, [sp, #0]
 800150a:	6120      	str	r0, [r4, #16]
 800150c:	6163      	str	r3, [r4, #20]
 800150e:	9b01      	ldr	r3, [sp, #4]
 8001510:	b15b      	cbz	r3, 800152a <__smakebuf_r+0x70>
 8001512:	4630      	mov	r0, r6
 8001514:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001518:	f000 f81e 	bl	8001558 <_isatty_r>
 800151c:	b128      	cbz	r0, 800152a <__smakebuf_r+0x70>
 800151e:	89a3      	ldrh	r3, [r4, #12]
 8001520:	f023 0303 	bic.w	r3, r3, #3
 8001524:	f043 0301 	orr.w	r3, r3, #1
 8001528:	81a3      	strh	r3, [r4, #12]
 800152a:	89a3      	ldrh	r3, [r4, #12]
 800152c:	431d      	orrs	r5, r3
 800152e:	81a5      	strh	r5, [r4, #12]
 8001530:	e7cf      	b.n	80014d2 <__smakebuf_r+0x18>
	...

08001534 <_fstat_r>:
 8001534:	b538      	push	{r3, r4, r5, lr}
 8001536:	2300      	movs	r3, #0
 8001538:	4d06      	ldr	r5, [pc, #24]	; (8001554 <_fstat_r+0x20>)
 800153a:	4604      	mov	r4, r0
 800153c:	4608      	mov	r0, r1
 800153e:	4611      	mov	r1, r2
 8001540:	602b      	str	r3, [r5, #0]
 8001542:	f7ff f840 	bl	80005c6 <_fstat>
 8001546:	1c43      	adds	r3, r0, #1
 8001548:	d102      	bne.n	8001550 <_fstat_r+0x1c>
 800154a:	682b      	ldr	r3, [r5, #0]
 800154c:	b103      	cbz	r3, 8001550 <_fstat_r+0x1c>
 800154e:	6023      	str	r3, [r4, #0]
 8001550:	bd38      	pop	{r3, r4, r5, pc}
 8001552:	bf00      	nop
 8001554:	200001c0 	.word	0x200001c0

08001558 <_isatty_r>:
 8001558:	b538      	push	{r3, r4, r5, lr}
 800155a:	2300      	movs	r3, #0
 800155c:	4d05      	ldr	r5, [pc, #20]	; (8001574 <_isatty_r+0x1c>)
 800155e:	4604      	mov	r4, r0
 8001560:	4608      	mov	r0, r1
 8001562:	602b      	str	r3, [r5, #0]
 8001564:	f7ff f83e 	bl	80005e4 <_isatty>
 8001568:	1c43      	adds	r3, r0, #1
 800156a:	d102      	bne.n	8001572 <_isatty_r+0x1a>
 800156c:	682b      	ldr	r3, [r5, #0]
 800156e:	b103      	cbz	r3, 8001572 <_isatty_r+0x1a>
 8001570:	6023      	str	r3, [r4, #0]
 8001572:	bd38      	pop	{r3, r4, r5, pc}
 8001574:	200001c0 	.word	0x200001c0

08001578 <_init>:
 8001578:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800157a:	bf00      	nop
 800157c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800157e:	bc08      	pop	{r3}
 8001580:	469e      	mov	lr, r3
 8001582:	4770      	bx	lr

08001584 <_fini>:
 8001584:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001586:	bf00      	nop
 8001588:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800158a:	bc08      	pop	{r3}
 800158c:	469e      	mov	lr, r3
 800158e:	4770      	bx	lr
